
### Do not edit this file! Run generate.sh to create it. ###


# INCLUDE_BEGIN Config.in
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#


config FREETZ_BUSYBOX_HAVE_DOT_CONFIG
	bool
	default n

menu "Busybox Settings"

config FREETZ_BUSYBOX_DESKTOP
	bool "Enable options for full-blown desktop systems"
	default n
	depends on FREETZ_DISABLE_OPTION_BY_MAKING_IT_DEPEND_ON_NONEXISTING_SYMBOL
	help
	  Enable options and features which are not essential.
	  Select this if you plan to use busybox on full-blown desktop machine
	  with common Linux distro, which needs higher level of command-line
	  compatibility.

	  If you are preparing your build to be used on an embedded box
	  where you have tighter control over the entire set of userspace
	  tools, you can unselect this option for smaller code size.

config FREETZ_BUSYBOX_EXTRA_COMPAT
	bool "Provide compatible behavior for rare corner cases (bigger code)"
	default n
	help
	  This option makes grep, sed etc handle rare corner cases
	  (embedded NUL bytes and such). This makes code bigger and uses
	  some GNU extensions in libc. You probably only need this option
	  if you plan to run busybox on desktop.

config FREETZ_BUSYBOX_FEDORA_COMPAT
	bool "Building for Fedora distribution"
	default n
	depends on FREETZ_DISABLE_OPTION_BY_MAKING_IT_DEPEND_ON_NONEXISTING_SYMBOL
	help
	This option makes some tools behave like they do on Fedora.

	At the time of this writing (2017-08) this only affects uname:
	normally, uname -p (processor) and uname -i (platform)
	are shown as "unknown", but with this option uname -p
	shows the same string as uname -m (machine type),
	and so does uname -i unless machine type is i486/i586/i686 -
	then uname -i shows "i386".

config FREETZ_BUSYBOX_INCLUDE_SUSv2
	bool "Enable obsolete features removed before SUSv3"
	default n
	help
	  This option will enable backwards compatibility with SuSv2,
	  specifically, old-style numeric options ('command -1 <file>')
	  will be supported in head, tail, and fold. (Note: should
	  affect renice too.)

config FREETZ_BUSYBOX_USE_PORTABLE_CODE
	bool "Avoid using GCC-specific code constructs"
	default n
	help
	  Use this option if you are trying to compile busybox with
	  compiler other than gcc.
	  If you do use gcc, this option may needlessly increase code size.

config FREETZ_BUSYBOX_SHOW_USAGE
	bool "Show applet usage messages"
	default n
	help
	  Enabling this option, BusyBox applets will show terse help messages
	  when invoked with wrong arguments.
	  If you do not want to show any (helpful) usage message when
	  issuing wrong command syntax, you can say 'N' here,
	  saving approximately 7k.

config FREETZ_BUSYBOX_FEATURE_VERBOSE_USAGE
	bool "Show verbose applet usage messages"
	default n
	depends on FREETZ_BUSYBOX_SHOW_USAGE
	help
	  All BusyBox applets will show verbose help messages when
	  busybox is invoked with --help. This will add a lot of text to the
	  busybox binary. In the default configuration, this will add about
	  13k, but it can add much more depending on your configuration.

config FREETZ_BUSYBOX_FEATURE_COMPRESS_USAGE
	bool "Store applet usage messages in compressed form"
	default n
	depends on FREETZ_BUSYBOX_SHOW_USAGE
	help
	  Store usage messages in .bz compressed form, uncompress them
	  on-the-fly when <applet> --help is called.

	  If you have a really tiny busybox with few applets enabled (and
	  bunzip2 isn't one of them), the overhead of the decompressor might
	  be noticeable. Also, if you run executables directly from ROM
	  and have very little memory, this might not be a win. Otherwise,
	  you probably want this.

config FREETZ_BUSYBOX_BUSYBOX
	bool "Include busybox applet"
	default n
	help
	  The busybox applet provides general help regarding busybox and
	  allows the included applets to be listed.  It's also required
	  if applet links are to be installed at runtime.

	  If you can live without these features disabling this will save
	  some space.

config FREETZ_BUSYBOX_FEATURE_INSTALLER
	bool "Support --install [-s] to install applet links at runtime"
	default n
	depends on FREETZ_BUSYBOX_BUSYBOX
	help
	  Enable 'busybox --install [-s]' support. This will allow you to use
	  busybox at runtime to create hard links or symlinks for all the
	  applets that are compiled into busybox.

config FREETZ_BUSYBOX_INSTALL_NO_USR
	bool "Don't use /usr"
	default n
	help
	  Disable use of /usr. busybox --install and "make install"
	  will install applets only to /bin and /sbin,
	  never to /usr/bin or /usr/sbin.

config FREETZ_BUSYBOX_PAM
	bool "Support PAM (Pluggable Authentication Modules)"
	default n
	help
	  Use PAM in some busybox applets (currently login and httpd) instead
	  of direct access to password database.

config FREETZ_BUSYBOX_LONG_OPTS
	bool "Support --long-options"
	default n
	help
	  Enable this if you want busybox applets to use the gnu --long-option
	  style, in addition to single character -a -b -c style options.

config FREETZ_BUSYBOX_FEATURE_DEVPTS
	bool "Use the devpts filesystem for Unix98 PTYs"
	default n
	help
	  Enable if you want BusyBox to use Unix98 PTY support. If enabled,
	  busybox will use /dev/ptmx for the master side of the pseudoterminal
	  and /dev/pts/<number> for the slave side. Otherwise, BSD style
	  /dev/ttyp<number> will be used. To use this option, you should have
	  devpts mounted.

config FREETZ_BUSYBOX_FEATURE_CLEAN_UP
	bool "Clean up all memory before exiting (usually not needed)"
	default n
	help
	  As a size optimization, busybox normally exits without explicitly
	  freeing dynamically allocated memory or closing files. This saves
	  space since the OS will clean up for us, but it can confuse debuggers
	  like valgrind, which report tons of memory and resource leaks.

	  Don't enable this unless you have a really good reason to clean
	  things up manually.

config FREETZ_BUSYBOX_FEATURE_UTMP
	bool "Support utmp file"
	default n
	help
	  The file /var/run/utmp is used to track who is currently logged in.
	  With this option on, certain applets (getty, login, telnetd etc)
	  will create and delete entries there.
	  "who" applet requires this option.

config FREETZ_BUSYBOX_FEATURE_WTMP
	bool "Support wtmp file"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_UTMP
	help
	  The file /var/run/wtmp is used to track when users have logged into
	  and logged out of the system.
	  With this option on, certain applets (getty, login, telnetd etc)
	  will append new entries there.
	  "last" applet requires this option.

config FREETZ_BUSYBOX_FEATURE_PIDFILE
	bool "Support writing pidfiles"
	default n
	help
	  This option makes some applets (e.g. crond, syslogd, inetd) write
	  a pidfile at the configured PID_FILE_PATH.  It has no effect
	  on applets which require pidfiles to run.

config FREETZ_BUSYBOX_PID_FILE_PATH
	string "Path to directory for pidfile"
	default "/var/run"
	depends on FREETZ_BUSYBOX_FEATURE_PIDFILE
	help
	  This is the default path where pidfiles are created.  Applets which
	  allow you to set the pidfile path on the command line will override
	  this value.  The option has no effect on applets that require you to
	  specify a pidfile path.

config FREETZ_BUSYBOX_FEATURE_SUID
	bool "Support SUID/SGID handling"
	default n
	help
	  With this option you can install the busybox binary belonging
	  to root with the suid bit set, enabling some applets to perform
	  root-level operations even when run by ordinary users
	  (for example, mounting of user mounts in fstab needs this).

	  Busybox will automatically drop privileges for applets
	  that don't need root access.

	  If you are really paranoid and don't want to do this, build two
	  busybox binaries with different applets in them (and the appropriate
	  symlinks pointing to each binary), and only set the suid bit on the
	  one that needs it.

	  The applets which require root rights (need suid bit or
	  to be run by root) and will refuse to execute otherwise:
	  crontab, login, passwd, su, vlock, wall.

	  The applets which will use root rights if they have them
	  (via suid bit, or because run by root), but would try to work
	  without root right nevertheless:
	  findfs, ping[6], traceroute[6], mount.

	  Note that if you DONT select this option, but DO make busybox
	  suid root, ALL applets will run under root, which is a huge
	  security hole (think "cp /some/file /etc/passwd").

config FREETZ_BUSYBOX_FEATURE_SUID_CONFIG
	bool "Runtime SUID/SGID configuration via /etc/busybox.conf"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_SUID
	help
	  Allow the SUID / SGID state of an applet to be determined at runtime
	  by checking /etc/busybox.conf. (This is sort of a poor man's sudo.)
	  The format of this file is as follows:

	  APPLET = [Ssx-][Ssx-][x-] [USER.GROUP]

	  s: USER or GROUP is allowed to execute APPLET.
	     APPLET will run under USER or GROUP
	     (reagardless of who's running it).
	  S: USER or GROUP is NOT allowed to execute APPLET.
	     APPLET will run under USER or GROUP.
	     This option is not very sensical.
	  x: USER/GROUP/others are allowed to execute APPLET.
	     No UID/GID change will be done when it is run.
	  -: USER/GROUP/others are not allowed to execute APPLET.

	  An example might help:

	  [SUID]
	  su = ssx root.0 # applet su can be run by anyone and runs with
	                  # euid=0/egid=0
	  su = ssx        # exactly the same

	  mount = sx- root.disk # applet mount can be run by root and members
	                        # of group disk (but not anyone else)
	                        # and runs with euid=0 (egid is not changed)

	  cp = --- # disable applet cp for everyone

	  The file has to be owned by user root, group root and has to be
	  writeable only by root:
	        (chown 0.0 /etc/busybox.conf; chmod 600 /etc/busybox.conf)
	  The busybox executable has to be owned by user root, group
	  root and has to be setuid root for this to work:
	        (chown 0.0 /bin/busybox; chmod 4755 /bin/busybox)

	  Robert 'sandman' Griebl has more information here:
	  <url: http://www.softforge.de/bb/suid.html >.

config FREETZ_BUSYBOX_FEATURE_SUID_CONFIG_QUIET
	bool "Suppress warning message if /etc/busybox.conf is not readable"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_SUID_CONFIG
	help
	  /etc/busybox.conf should be readable by the user needing the SUID,
	  check this option to avoid users to be notified about missing
	  permissions.

config FREETZ_BUSYBOX_SELINUX
	bool "Support NSA Security Enhanced Linux"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Enable support for SELinux in applets ls, ps, and id. Also provide
	  the option of compiling in SELinux applets.

	  If you do not have a complete SELinux userland installed, this stuff
	  will not compile.  Specifially, libselinux 1.28 or better is
	  directly required by busybox. If the installation is located in a
	  non-standard directory, provide it by invoking make as follows:
		CFLAGS=-I<libselinux-include-path> \
		LDFLAGS=-L<libselinux-lib-path> \
		make

	  Most people will leave this set to 'N'.

config FREETZ_BUSYBOX_FEATURE_PREFER_APPLETS
	bool "exec prefers applets"
	default n
	depends on FREETZ_BUSYBOX__NOEXEC_NOFORK_OPTIMIZATIONS
	help
	  This is an experimental option which directs applets about to
	  call 'exec' to try and find an applicable busybox applet before
	  searching the PATH. This is typically done by exec'ing
	  /proc/self/exe.
	  This may affect shell, find -exec, xargs and similar applets.
	  They will use applets even if /bin/<applet> -> busybox link
	  is missing (or is not a link to busybox). However, this causes
	  problems in chroot jails without mounted /proc and with ps/top
	  (command name can be shown as 'exe' for applets started this way).

config FREETZ_BUSYBOX_BUSYBOX_EXEC_PATH
	string "Path to BusyBox executable"
	default "/bin/busybox"
	help
	  When Busybox applets need to run other busybox applets, BusyBox
	  sometimes needs to exec() itself. When the /proc filesystem is
	  mounted, /proc/self/exe always points to the currently running
	  executable. If you haven't got /proc, set this to wherever you
	  want to run BusyBox from.

# These are auto-selected by other options

config FREETZ_BUSYBOX_FEATURE_SYSLOG
	bool #No description makes it a hidden option
	default n
	#help
	#  This option is auto-selected when you select any applet which may
	#  send its output to syslog. You do not need to select it manually.

config FREETZ_BUSYBOX_FEATURE_HAVE_RPC
	bool #No description makes it a hidden option
	default n
	#help
	#  This is automatically selected if any of enabled applets need it.
	#  You do not need to select it manually.

config FREETZ_BUSYBOX_PLATFORM_LINUX
	bool #No description makes it a hidden option
	default n
	#help
	#  For the most part, busybox requires only POSIX compatibility
	#  from the target system, but some applets and features use
	#  Linux-specific interfaces.
	#
	#  This is automatically selected if any applet or feature requires
	#  Linux-specific interfaces. You do not need to select it manually.

comment 'Build Options'

config FREETZ_BUSYBOX_STATIC
	bool "Build BusyBox as a static binary (no shared libs)"
	default n
	help
	  If you want to build a static BusyBox binary, which does not
	  use or require any shared libraries, then enable this option.
	  This can cause BusyBox to be considerably larger, so you should
	  leave this option false unless you have a good reason (i.e.
	  your target platform does not support shared libraries, or
	  you are building an initrd which doesn't need anything but
	  BusyBox, etc).

	  Most people will leave this set to 'N'.

config FREETZ_BUSYBOX_PIE
	bool "Build BusyBox as a position independent executable"
	default n
	depends on !FREETZ_BUSYBOX_STATIC
	help
	  Hardened code option. PIE binaries are loaded at a different
	  address at each invocation. This has some overhead,
	  particularly on x86-32 which is short on registers.

	  Most people will leave this set to 'N'.

config FREETZ_BUSYBOX_NOMMU
	bool "Force NOMMU build"
	default n
	help
	  Busybox tries to detect whether architecture it is being
	  built against supports MMU or not. If this detection fails,
	  or if you want to build NOMMU version of busybox for testing,
	  you may force NOMMU build here.

	  Most people will leave this set to 'N'.

# PIE can be made to work with BUILD_LIBBUSYBOX, but currently
# build system does not support that
config FREETZ_BUSYBOX_BUILD_LIBBUSYBOX
	bool "Build shared libbusybox"
	default n
	depends on !FREETZ_BUSYBOX_FEATURE_PREFER_APPLETS && !FREETZ_BUSYBOX_PIE && !FREETZ_BUSYBOX_STATIC
	depends on FREETZ_DISABLE_OPTION_BY_MAKING_IT_DEPEND_ON_NONEXISTING_SYMBOL
	help
	  Build a shared library libbusybox.so.N.N.N which contains all
	  busybox code.

	  This feature allows every applet to be built as a tiny
	  separate executable. Enabling it for "one big busybox binary"
	  approach serves no purpose and increases code size.
	  You should almost certainly say "no" to this.

### config FEATURE_FULL_LIBBUSYBOX
###	bool "Feature-complete libbusybox"
###	default n if !FREETZ_BUSYBOX_FEATURE_SHARED_BUSYBOX
###	depends on FREETZ_BUSYBOX_BUILD_LIBBUSYBOX
###	help
###	  Build a libbusybox with the complete feature-set, disregarding
###	  the actually selected config.
###
###	  Normally, libbusybox will only contain the features which are
###	  used by busybox itself. If you plan to write a separate
###	  standalone application which uses libbusybox say 'Y'.
###
###	  Note: libbusybox is GPL, not LGPL, and exports no stable API that
###	  might act as a copyright barrier. We can and will modify the
###	  exported function set between releases (even minor version number
###	  changes), and happily break out-of-tree features.
###
###	  Say 'N' if in doubt.

config FREETZ_BUSYBOX_FEATURE_INDIVIDUAL
	bool "Produce a binary for each applet, linked against libbusybox"
	default n
	depends on FREETZ_BUSYBOX_BUILD_LIBBUSYBOX
	help
	  If your CPU architecture doesn't allow for sharing text/rodata
	  sections of running binaries, but allows for runtime dynamic
	  libraries, this option will allow you to reduce memory footprint
	  when you have many different applets running at once.

	  If your CPU architecture allows for sharing text/rodata,
	  having single binary is more optimal.

	  Each applet will be a tiny program, dynamically linked
	  against libbusybox.so.N.N.N.

	  You need to have a working dynamic linker.

config FREETZ_BUSYBOX_FEATURE_SHARED_BUSYBOX
	bool "Produce additional busybox binary linked against libbusybox"
	default n
	depends on FREETZ_BUSYBOX_BUILD_LIBBUSYBOX
	help
	  Build busybox, dynamically linked against libbusybox.so.N.N.N.

	  You need to have a working dynamic linker.

### config BUILD_AT_ONCE
###	bool "Compile all sources at once"
###	default n
###	help
###	  Normally each source-file is compiled with one invocation of
###	  the compiler.
###	  If you set this option, all sources are compiled at once.
###	  This gives the compiler more opportunities to optimize which can
###	  result in smaller and/or faster binaries.
###
###	  Setting this option will consume alot of memory, e.g. if you
###	  enable all applets with all features, gcc uses more than 300MB
###	  RAM during compilation of busybox.
###
###	  This option is most likely only beneficial for newer compilers
###	  such as gcc-4.1 and above.
###
###	  Say 'N' unless you know what you are doing.

config FREETZ_BUSYBOX_LFS
	bool "Build with Large File Support (for accessing files > 2 GB)"
	default n
	help
	  If you want to build BusyBox with large file support, then enable
	  this option. This will have no effect if your kernel or your C
	  library lacks large file support for large files. Some of the
	  programs that can benefit from large file support include dd, gzip,
	  cp, mount, tar, and many others. If you want to access files larger
	  than 2 Gigabytes, enable this option. Otherwise, leave it set to 'N'.

config FREETZ_BUSYBOX_CROSS_COMPILER_PREFIX
	string "Cross Compiler prefix"
	default ""
	help
	  If you want to build BusyBox with a cross compiler, then you
	  will need to set this to the cross-compiler prefix, for example,
	  "i386-uclibc-".

	  Note that CROSS_COMPILE environment variable or
	  "make CROSS_COMPILE=xxx ..." will override this selection.

	  Native builds leave this empty.

config FREETZ_BUSYBOX_SYSROOT
	string "Path to sysroot"
	default ""
	help
	  If you want to build BusyBox with a cross compiler, then you
	  might also need to specify where /usr/include and /usr/lib
	  will be found.

	  For example, BusyBox can be built against an installed
	  Android NDK, platform version 9, for ARM ABI with

	  CONFIG_SYSROOT=/opt/android-ndk/platforms/android-9/arch-arm

	  Native builds leave this empty.

config FREETZ_BUSYBOX_EXTRA_CFLAGS
	string "Additional CFLAGS"
	default ""
	help
	  Additional CFLAGS to pass to the compiler verbatim.

config FREETZ_BUSYBOX_EXTRA_LDFLAGS
	string "Additional LDFLAGS"
	default ""
	help
	  Additional LDFLAGS to pass to the linker verbatim.

config FREETZ_BUSYBOX_EXTRA_LDLIBS
	string "Additional LDLIBS"
	default ""
	help
	  Additional LDLIBS to pass to the linker with -l.

comment 'Installation Options ("make install" behavior)'

choice
	prompt "What kind of applet links to install"
	default FREETZ_BUSYBOX_INSTALL_APPLET_SYMLINKS
	help
	  Choose what kind of links to applets are created by "make install".

config FREETZ_BUSYBOX_INSTALL_APPLET_SYMLINKS
	bool "as soft-links"
	help
	  Install applets as soft-links to the busybox binary. This needs some
	  free inodes on the filesystem, but might help with filesystem
	  generators that can't cope with hard-links.

config FREETZ_BUSYBOX_INSTALL_APPLET_HARDLINKS
	bool "as hard-links"
	help
	  Install applets as hard-links to the busybox binary. This might
	  count on a filesystem with few inodes.

config FREETZ_BUSYBOX_INSTALL_APPLET_SCRIPT_WRAPPERS
	bool "as script wrappers"
	help
	  Install applets as script wrappers that call the busybox binary.

config FREETZ_BUSYBOX_INSTALL_APPLET_DONT
	bool "not installed"
	help
	  Do not install applet links. Useful when you plan to use
	  busybox --install for installing links, or plan to use
	  a standalone shell and thus don't need applet links.

endchoice

choice
	prompt "/bin/sh applet link"
	default FREETZ_BUSYBOX_INSTALL_SH_APPLET_SYMLINK
	depends on FREETZ_BUSYBOX_INSTALL_APPLET_SCRIPT_WRAPPERS
	help
	  Choose how you install /bin/sh applet link.

config FREETZ_BUSYBOX_INSTALL_SH_APPLET_SYMLINK
	bool "as soft-link"
	help
	  Install /bin/sh applet as soft-link to the busybox binary.

config FREETZ_BUSYBOX_INSTALL_SH_APPLET_HARDLINK
	bool "as hard-link"
	help
	  Install /bin/sh applet as hard-link to the busybox binary.

config FREETZ_BUSYBOX_INSTALL_SH_APPLET_SCRIPT_WRAPPER
	bool "as script wrapper"
	help
	  Install /bin/sh applet as script wrapper that calls
	  the busybox binary.

endchoice

config FREETZ_BUSYBOX_PREFIX
	string "BusyBox installation prefix"
	default "./_install"
	help
	  Define your directory to install BusyBox files/subdirs in.

comment 'Debugging Options'

config FREETZ_BUSYBOX_DEBUG
	bool "Build BusyBox with extra Debugging symbols"
	default n
	help
	  Say Y here if you wish to examine BusyBox internals while applets are
	  running. This increases the size of the binary considerably, and
	  should only be used when doing development. If you are doing
	  development and want to debug BusyBox, answer Y.

	  Most people should answer N.

config FREETZ_BUSYBOX_DEBUG_PESSIMIZE
	bool "Disable compiler optimizations"
	default n
	depends on FREETZ_BUSYBOX_DEBUG
	help
	  The compiler's optimization of source code can eliminate and reorder
	  code, resulting in an executable that's hard to understand when
	  stepping through it with a debugger. This switches it off, resulting
	  in a much bigger executable that more closely matches the source
	  code.

config FREETZ_BUSYBOX_DEBUG_SANITIZE
	bool "Enable runtime sanitizers (ASAN/LSAN/USAN/etc...)"
	default n
	help
	  Say Y here if you want to enable runtime sanitizers. These help
	  catch bad memory accesses (e.g. buffer overflows), but will make
	  the executable larger and slow down runtime a bit.

	  This adds -fsanitize=foo options to gcc command line.

	  If you aren't developing/testing busybox, say N here.

config FREETZ_BUSYBOX_UNIT_TEST
	bool "Build unit tests"
	default n
	help
	  Say Y here if you want to build unit tests (both the framework and
	  test cases) as a Busybox applet. This results in bigger code, so you
	  probably don't want this option in production builds.

config FREETZ_BUSYBOX_WERROR
	bool "Abort compilation on any warning"
	default n
	help
	  This adds -Werror to gcc command line.

	  Most people should answer N.

choice
	prompt "Additional debugging library"
	default FREETZ_BUSYBOX_NO_DEBUG_LIB
	help
	  Using an additional debugging library will make BusyBox become
	  considerable larger and will cause it to run more slowly. You
	  should always leave this option disabled for production use.

	  dmalloc support:
	  ----------------
	  This enables compiling with dmalloc ( http://dmalloc.com/ )
	  which is an excellent public domain mem leak and malloc problem
	  detector. To enable dmalloc, before running busybox you will
	  want to properly set your environment, for example:
	    export DMALLOC_OPTIONS=debug=0x34f47d83,inter=100,log=logfile
	  The 'debug=' value is generated using the following command
	    dmalloc -p log-stats -p log-non-free -p log-bad-space \
	       -p log-elapsed-time -p check-fence -p check-heap \
	       -p check-lists -p check-blank -p check-funcs -p realloc-copy \
	       -p allow-free-null

	  Electric-fence support:
	  -----------------------
	  This enables compiling with Electric-fence support. Electric
	  fence is another very useful malloc debugging library which uses
	  your computer's virtual memory hardware to detect illegal memory
	  accesses. This support will make BusyBox be considerable larger
	  and run slower, so you should leave this option disabled unless
	  you are hunting a hard to find memory problem.


config FREETZ_BUSYBOX_NO_DEBUG_LIB
	bool "None"

config FREETZ_BUSYBOX_DMALLOC
	bool "Dmalloc"

config FREETZ_BUSYBOX_EFENCE
	bool "Electric-fence"

endchoice

endmenu

# INCLUDE_BEGIN libbb/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Busybox Library Tuning"

config FREETZ_BUSYBOX_FEATURE_USE_BSS_TAIL
	bool "Use the end of BSS page"
	default n
	depends on FREETZ_DISABLE_OPTION_BY_MAKING_IT_DEPEND_ON_NONEXISTING_SYMBOL
	help
	  Attempt to reclaim a small unused part of BSS.

	  Executables have the following parts:
	  = read-only executable code and constants, also known as "text"
	  = read-write data
	  = non-initialized (zeroed on demand) data, also known as "bss"

	  At link time, "text" is padded to a full page. At runtime, all "text"
	  pages are mapped RO and executable.
	  "Data" starts on the next page boundary, but is not padded
	  to a full page at the end. "Bss" starts wherever "data" ends.
	  At runtime, "data" pages are mapped RW and they are file-backed
	  (this includes a small portion of "bss" which may live in the last
	  partial page of "data").
	  Pages which are fully in "bss" are mapped to anonymous memory.

	  "Bss" end is usually not page-aligned. There is an unused space
	  in the last page. Linker marks its start with the "_end" symbol.

	  This option will attempt to use that space for bb_common_bufsiz1[]
	  array. If it fits after _end, it will be used, and COMMON_BUFSIZE
	  will be enlarged from its guaranteed minimum size of 1 kbyte.
	  This may require recompilation a second time, since value of _end
	  is known only after final link.

	  If you are getting a build error like this:
	        appletlib.c:(.text.main+0xd): undefined reference to '_end'
	  disable this option.
config FREETZ_BUSYBOX_FEATURE_RTMINMAX
	bool "Support RTMIN[+n] and RTMAX[-n] signal names"
	default n
	help
	  Support RTMIN[+n] and RTMAX[-n] signal names
	  in kill, killall etc. This costs ~250 bytes.

choice
	prompt "Buffer allocation policy"
	default FREETZ_BUSYBOX_FEATURE_BUFFERS_GO_ON_STACK
	help
	  There are 3 ways BusyBox can handle buffer allocations:
	  - Use malloc. This costs code size for the call to xmalloc.
	  - Put them on stack. For some very small machines with limited stack
	    space, this can be deadly. For most folks, this works just fine.
	  - Put them in BSS. This works beautifully for computers with a real
	    MMU (and OS support), but wastes runtime RAM for uCLinux. This
	    behavior was the only one available for BusyBox versions 0.48 and
	    earlier.

config FREETZ_BUSYBOX_FEATURE_BUFFERS_USE_MALLOC
	bool "Allocate with Malloc"

config FREETZ_BUSYBOX_FEATURE_BUFFERS_GO_ON_STACK
	bool "Allocate on the Stack"

config FREETZ_BUSYBOX_FEATURE_BUFFERS_GO_IN_BSS
	bool "Allocate in the .bss section"

endchoice

config FREETZ_BUSYBOX_PASSWORD_MINLEN
	int "Minimum password length"
	default 6
	range 5 32
	help
	  Minimum allowable password length.

config FREETZ_BUSYBOX_MD5_SMALL
	int "MD5: Trade bytes for speed (0:fast, 3:slow)"
	default 1  # all "fast or small" options default to small
	range 0 3
	help
	  Trade binary size versus speed for the md5sum algorithm.
	  Approximate values running uClibc and hashing
	  linux-2.4.4.tar.bz2 were:
	                    user times (sec)  text size (386)
	  0 (fastest)         1.1                6144
	  1                   1.4                5392
	  2                   3.0                5088
	  3 (smallest)        5.1                4912

config FREETZ_BUSYBOX_SHA3_SMALL
	int "SHA3: Trade bytes for speed (0:fast, 1:slow)"
	default 1  # all "fast or small" options default to small
	range 0 1
	help
	  Trade binary size versus speed for the sha3sum algorithm.
	  SHA3_SMALL=0 compared to SHA3_SMALL=1 (approximate):
	  64-bit x86: +270 bytes of code, 45% faster
	  32-bit x86: +450 bytes of code, 75% faster

config FREETZ_BUSYBOX_FEATURE_FAST_TOP
	bool "Faster /proc scanning code (+100 bytes)"
	default n  # all "fast or small" options default to small
	help
	  This option makes top (and ps) ~20% faster (or 20% less CPU hungry),
	  but code size is slightly bigger.

config FREETZ_BUSYBOX_FEATURE_ETC_NETWORKS
	bool "Support /etc/networks"
	default n
	help
	  Enable support for network names in /etc/networks. This is
	  a rarely used feature which allows you to use names
	  instead of IP/mask pairs in route command.

config FREETZ_BUSYBOX_FEATURE_EDITING
	bool "Command line editing"
	default n
	help
	  Enable line editing (mainly for shell command line).

config FREETZ_BUSYBOX_FEATURE_EDITING_MAX_LEN
	int "Maximum length of input"
	range 128 8192
	default 1024
	depends on FREETZ_BUSYBOX_FEATURE_EDITING
	help
	  Line editing code uses on-stack buffers for storage.
	  You may want to decrease this parameter if your target machine
	  benefits from smaller stack usage.

config FREETZ_BUSYBOX_FEATURE_EDITING_VI
	bool "vi-style line editing commands"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_EDITING
	help
	  Enable vi-style line editing. In shells, this mode can be
	  turned on and off with "set -o vi" and "set +o vi".

config FREETZ_BUSYBOX_FEATURE_EDITING_HISTORY
	int "History size"
	# Don't allow way too big values here, code uses fixed "char *history[N]" struct member
	range 0 9999
	default 255
	depends on FREETZ_BUSYBOX_FEATURE_EDITING
	help
	  Specify command history size (0 - disable).

config FREETZ_BUSYBOX_FEATURE_EDITING_SAVEHISTORY
	bool "History saving"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_EDITING
	help
	  Enable history saving in shells.

config FREETZ_BUSYBOX_FEATURE_EDITING_SAVE_ON_EXIT
	bool "Save history on shell exit, not after every command"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_EDITING_SAVEHISTORY
	help
	  Save history on shell exit, not after every command.

config FREETZ_BUSYBOX_FEATURE_REVERSE_SEARCH
	bool "Reverse history search"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_EDITING
	help
	  Enable readline-like Ctrl-R combination for reverse history search.
	  Increases code by about 0.5k.

config FREETZ_BUSYBOX_FEATURE_TAB_COMPLETION
	bool "Tab completion"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_EDITING

config FREETZ_BUSYBOX_FEATURE_USERNAME_COMPLETION
	bool "Username completion"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_TAB_COMPLETION

config FREETZ_BUSYBOX_FEATURE_EDITING_FANCY_PROMPT
	bool "Fancy shell prompts"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_EDITING
	help
	  Setting this option allows for prompts to use things like \w and
	  \$ and escape codes.

config FREETZ_BUSYBOX_FEATURE_EDITING_ASK_TERMINAL
	bool "Query cursor position from terminal"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_EDITING
	help
	  Allow usage of "ESC [ 6 n" sequence. Terminal answers back with
	  current cursor position. This information is used to make line
	  editing more robust in some cases.
	  If you are not sure whether your terminals respond to this code
	  correctly, or want to save on code size (about 400 bytes),
	  then do not turn this option on.

config FREETZ_BUSYBOX_LOCALE_SUPPORT
	bool "Enable locale support (system needs locale for this to work)"
	default n
	depends on !FREETZ_TARGET_UCLIBC_0_9_28
	help
	  Enable this if your system has locale support and you would like
	  busybox to support locale settings.

config FREETZ_BUSYBOX_UNICODE_SUPPORT
	bool "Support Unicode"
	default n
	help
	  This makes various applets aware that one byte is not
	  one character on screen.

	  Busybox aims to eventually work correctly with Unicode displays.
	  Any older encodings are not guaranteed to work.
	  Probably by the time when busybox will be fully Unicode-clean,
	  other encodings will be mainly of historic interest.

config FREETZ_BUSYBOX_UNICODE_USING_LOCALE
	bool "Use libc routines for Unicode (else uses internal ones)"
	default n
	depends on FREETZ_BUSYBOX_UNICODE_SUPPORT && FREETZ_BUSYBOX_LOCALE_SUPPORT
	help
	  With this option on, Unicode support is implemented using libc
	  routines. Otherwise, internal implementation is used.
	  Internal implementation is smaller.

config FREETZ_BUSYBOX_FEATURE_CHECK_UNICODE_IN_ENV
	bool "Check $LC_ALL, $LC_CTYPE and $LANG environment variables"
	default n
	depends on FREETZ_BUSYBOX_UNICODE_SUPPORT && !FREETZ_BUSYBOX_UNICODE_USING_LOCALE
	help
	  With this option on, Unicode support is activated
	  only if locale-related variables have the value of the form
	  "xxxx.utf8"

	  Otherwise, Unicode support will be always enabled and active.

config FREETZ_BUSYBOX_SUBST_WCHAR
	int "Character code to substitute unprintable characters with"
	depends on FREETZ_BUSYBOX_UNICODE_SUPPORT
	default 0
	help
	  Typical values are 63 for '?' (works with any output device),
	  30 for ASCII substitute control code,
	  65533 (0xfffd) for Unicode replacement character.

config FREETZ_BUSYBOX_LAST_SUPPORTED_WCHAR
	int "Range of supported Unicode characters"
	depends on FREETZ_BUSYBOX_UNICODE_SUPPORT
	default 0
	help
	  Any character with Unicode value bigger than this is assumed
	  to be non-printable on output device. Many applets replace
	  such characters with substitution character.

	  The idea is that many valid printable Unicode chars
	  nevertheless are not displayed correctly. Think about
	  combining charachers, double-wide hieroglyphs, obscure
	  characters in dozens of ancient scripts...
	  Many terminals, terminal emulators, xterms etc will fail
	  to handle them correctly. Choose the smallest value
	  which suits your needs.

	  Typical values are:
	  126 - ASCII only
	  767 (0x2ff) - there are no combining chars in [0..767] range
			(the range includes Latin 1, Latin Ext. A and B),
			code is ~700 bytes smaller for this case.
	  4351 (0x10ff) - there are no double-wide chars in [0..4351] range,
			code is ~300 bytes smaller for this case.
	  12799 (0x31ff) - nearly all non-ideographic characters are
			available in [0..12799] range, including
			East Asian scripts like katakana, hiragana, hangul,
			bopomofo...
	  0 - off, any valid printable Unicode character will be printed.

config FREETZ_BUSYBOX_UNICODE_COMBINING_WCHARS
	bool "Allow zero-width Unicode characters on output"
	default n
	depends on FREETZ_BUSYBOX_UNICODE_SUPPORT
	help
	  With this option off, any Unicode char with width of 0
	  is substituted on output.

config FREETZ_BUSYBOX_UNICODE_WIDE_WCHARS
	bool "Allow wide Unicode characters on output"
	default n
	depends on FREETZ_BUSYBOX_UNICODE_SUPPORT
	help
	  With this option off, any Unicode char with width > 1
	  is substituted on output.

config FREETZ_BUSYBOX_UNICODE_BIDI_SUPPORT
	bool "Bidirectional character-aware line input"
	default n
	depends on FREETZ_BUSYBOX_UNICODE_SUPPORT && !FREETZ_BUSYBOX_UNICODE_USING_LOCALE
	help
	  With this option on, right-to-left Unicode characters
	  are treated differently on input (e.g. cursor movement).

config FREETZ_BUSYBOX_UNICODE_NEUTRAL_TABLE
	bool "In bidi input, support non-ASCII neutral chars too"
	default n
	depends on FREETZ_BUSYBOX_UNICODE_BIDI_SUPPORT
	help
	  In most cases it's enough to treat only ASCII non-letters
	  (i.e. punctuation, numbers and space) as characters
	  with neutral directionality.
	  With this option on, more extensive (and bigger) table
	  of neutral chars will be used.

config FREETZ_BUSYBOX_UNICODE_PRESERVE_BROKEN
	bool "Make it possible to enter sequences of chars which are not Unicode"
	default n
	depends on FREETZ_BUSYBOX_UNICODE_SUPPORT
	help
	  With this option on, on line-editing input (such as used by shells)
	  invalid UTF-8 bytes are not substituted with the selected
	  substitution character.
	  For example, this means that entering 'l', 's', ' ', 0xff, [Enter]
	  at shell prompt will list file named 0xff (single char name
	  with char value 255), not file named '?'.

config FREETZ_BUSYBOX_FEATURE_NON_POSIX_CP
	bool "Non-POSIX, but safer, copying to special nodes"
	default n
	help
	  With this option, "cp file symlink" will delete symlink
	  and create a regular file. This does not conform to POSIX,
	  but prevents a symlink attack.
	  Similarly, "cp file device" will not send file's data
	  to the device. (To do that, use "cat file >device")

config FREETZ_BUSYBOX_FEATURE_VERBOSE_CP_MESSAGE
	bool "Give more precise messages when copy fails (cp, mv etc)"
	default n
	help
	  Error messages with this feature enabled:
	    $ cp file /does_not_exist/file
	    cp: cannot create '/does_not_exist/file': Path does not exist
	    $ cp file /vmlinuz/file
	    cp: cannot stat '/vmlinuz/file': Path has non-directory component
	  If this feature is not enabled, they will be, respectively:
	    cp: cannot create '/does_not_exist/file': No such file or directory
	    cp: cannot stat '/vmlinuz/file': Not a directory
	  This will cost you ~60 bytes.

config FREETZ_BUSYBOX_FEATURE_USE_SENDFILE
	bool "Use sendfile system call"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	depends on FREETZ_DISABLE_OPTION_BY_MAKING_IT_DEPEND_ON_NONEXISTING_SYMBOL
	help
	  When enabled, busybox will use the kernel sendfile() function
	  instead of read/write loops to copy data between file descriptors
	  (for example, cp command does this a lot).
	  If sendfile() doesn't work, copying code falls back to read/write
	  loop. sendfile() was originally implemented for faster I/O
	  from files to sockets, but since Linux 2.6.33 it was extended
	  to work for many more file types.

config FREETZ_BUSYBOX_FEATURE_COPYBUF_KB
	int "Copy buffer size, in kilobytes"
	range 1 1024
	default 64
	help
	  Size of buffer used by cp, mv, install, wget etc.
	  Buffers which are 4 kb or less will be allocated on stack.
	  Bigger buffers will be allocated with mmap, with fallback to 4 kb
	  stack buffer if mmap fails.

config FREETZ_BUSYBOX_FEATURE_SKIP_ROOTFS
	bool "Skip rootfs in mount table"
	default n
	help
	  Ignore rootfs entry in mount table.

	  In Linux, kernel has a special filesystem, rootfs, which is initially
	  mounted on /. It contains initramfs data, if kernel is configured
	  to have one. Usually, another file system is mounted over / early
	  in boot process, and therefore most tools which manipulate
	  mount table, such as df, will skip rootfs entry.

	  However, some systems do not mount anything on /.
	  If you need to configure busybox for one of these systems,
	  you may find it useful to turn this option off to make df show
	  initramfs statistics.

	  Otherwise, choose Y.

config FREETZ_BUSYBOX_MONOTONIC_SYSCALL
	bool "Use clock_gettime(CLOCK_MONOTONIC) syscall"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Use clock_gettime(CLOCK_MONOTONIC) syscall for measuring
	  time intervals (time, ping, traceroute etc need this).
	  Probably requires Linux 2.6+. If not selected, gettimeofday
	  will be used instead (which gives wrong results if date/time
	  is reset).

config FREETZ_BUSYBOX_IOCTL_HEX2STR_ERROR
	bool "Use ioctl names rather than hex values in error messages"
	default n
	help
	  Use ioctl names rather than hex values in error messages
	  (e.g. VT_DISALLOCATE rather than 0x5608). If disabled this
	  saves about 1400 bytes.

config FREETZ_BUSYBOX_FEATURE_HWIB
	bool "Support infiniband HW"
	default n
	help
	  Support for printing infiniband addresses in
	  network applets.

endmenu

# INCLUDE_END libbb/Config.in

comment "Applets"

# INCLUDE_BEGIN archival/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Archival Utilities"

config FREETZ_BUSYBOX_FEATURE_SEAMLESS_XZ
	bool "Make tar, rpm, modprobe etc understand .xz data"
	default n

config FREETZ_BUSYBOX_FEATURE_SEAMLESS_LZMA
	bool "Make tar, rpm, modprobe etc understand .lzma data"
	default n

config FREETZ_BUSYBOX_FEATURE_SEAMLESS_BZ2
	bool "Make tar, rpm, modprobe etc understand .bz2 data"
	default n

config FREETZ_BUSYBOX_FEATURE_SEAMLESS_GZ
	bool "Make tar, rpm, modprobe etc understand .gz data"
	default n

config FREETZ_BUSYBOX_FEATURE_SEAMLESS_LZ
	bool "Make tar, rpm, modprobe etc understand .lz data"
	default n

config FREETZ_BUSYBOX_FEATURE_SEAMLESS_Z
	bool "Make tar, rpm, modprobe etc understand .Z data"
	default n  # it is ancient

config FREETZ_BUSYBOX_AR
	bool "ar"
	default n  # needs to be improved to be able to replace binutils ar
	help
	  ar is an archival utility program used to create, modify, and
	  extract contents from archives. In practice, it is used exclusively
	  for object module archives used by compilers.

	  On an x86 system, the ar applet adds about 1K.

	  Unless you have a specific application which requires ar, you should
	  probably say N here: most compilers come with their own ar utility.

config FREETZ_BUSYBOX_FEATURE_AR_LONG_FILENAMES
	bool "Support long filenames (not needed for debs)"
	default n
	depends on FREETZ_BUSYBOX_AR
	help
	  By default the ar format can only store the first 15 characters
	  of the filename, this option removes that limitation.
	  It supports the GNU ar long filename method which moves multiple long
	  filenames into a the data section of a new ar entry.

config FREETZ_BUSYBOX_FEATURE_AR_CREATE
	bool "Support archive creation"
	default n
	depends on FREETZ_BUSYBOX_AR
	help
	  This enables archive creation (-c and -r) with busybox ar.
config FREETZ_BUSYBOX_UNCOMPRESS
	bool "uncompress"
	default n  # ancient
	help
	  uncompress is used to decompress archives created by compress.
	  Not much used anymore, replaced by gzip/gunzip.
config FREETZ_BUSYBOX_GUNZIP
	bool "gunzip"
	default n
	select FREETZ_BUSYBOX_FEATURE_GZIP_DECOMPRESS
	help
	  gunzip is used to decompress archives created by gzip.
	  You can use the `-t' option to test the integrity of
	  an archive, without decompressing it.

config FREETZ_BUSYBOX_ZCAT
	bool "zcat"
	default n
	select FREETZ_BUSYBOX_FEATURE_GZIP_DECOMPRESS
	help
	  Alias to "gunzip -c".

config FREETZ_BUSYBOX_FEATURE_GUNZIP_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on (FREETZ_BUSYBOX_GUNZIP || FREETZ_BUSYBOX_ZCAT) && FREETZ_BUSYBOX_LONG_OPTS
config FREETZ_BUSYBOX_BUNZIP2
	bool "bunzip2"
	default n
	select FREETZ_BUSYBOX_FEATURE_BZIP2_DECOMPRESS
	help
	  bunzip2 is a compression utility using the Burrows-Wheeler block
	  sorting text compression algorithm, and Huffman coding. Compression
	  is generally considerably better than that achieved by more
	  conventional LZ77/LZ78-based compressors, and approaches the
	  performance of the PPM family of statistical compressors.

	  Unless you have a specific application which requires bunzip2, you
	  should probably say N here.

config FREETZ_BUSYBOX_BZCAT
	bool "bzcat"
	default n
	select FREETZ_BUSYBOX_FEATURE_BZIP2_DECOMPRESS
	help
	  Alias to "bunzip2 -c".
config FREETZ_BUSYBOX_LUNZIP
	bool "lunzip"
	default n
	help
	  lunzip is used to decompress archives created by lzip.
	  You can use the '-t' option to test the integrity of an archive,
	  without decompressing it.
config FREETZ_BUSYBOX_UNLZMA
	bool "unlzma"
	default n
	help
	  unlzma is a compression utility using the Lempel-Ziv-Markov chain
	  compression algorithm, and range coding. Compression
	  is generally considerably better than that achieved by the bzip2
	  compressors.

	  The BusyBox unlzma applet is limited to decompression only.
	  On an x86 system, this applet adds about 4K.

config FREETZ_BUSYBOX_LZCAT
	bool "lzcat"
	default n
	help
	  unlzma is a compression utility using the Lempel-Ziv-Markov chain
	  compression algorithm, and range coding. Compression
	  is generally considerably better than that achieved by the bzip2
	  compressors.

	  The BusyBox unlzma applet is limited to decompression only.
	  On an x86 system, this applet adds about 4K.

config FREETZ_BUSYBOX_LZMA
	bool "lzma -d"
	default n
	help
	  Enable this option if you want commands like "lzma -d" to work.
	  IOW: you'll get lzma applet, but it will always require -d option.

config FREETZ_BUSYBOX_FEATURE_LZMA_FAST
	bool "Optimize for speed"
	default n
	depends on FREETZ_BUSYBOX_UNLZMA || FREETZ_BUSYBOX_LZCAT || FREETZ_BUSYBOX_LZMA
	help
	  This option reduces decompression time by about 25% at the cost of
	  a 1K bigger binary.
config FREETZ_BUSYBOX_UNXZ
	bool "unxz"
	default n
	help
	  unxz is a unlzma successor.

config FREETZ_BUSYBOX_XZCAT
	bool "xzcat"
	default n
	help
	  Alias to "unxz -c".

config FREETZ_BUSYBOX_XZ
	bool "xz -d"
	default n
	depends on !FREETZ_PACKAGE_XZ
	help
	  Enable this option if you want commands like "xz -d" to work.
	  IOW: you'll get xz applet, but it will always require -d option.
config FREETZ_BUSYBOX_BZIP2
	bool "bzip2"
	default n
	help
	  bzip2 is a compression utility using the Burrows-Wheeler block
	  sorting text compression algorithm, and Huffman coding. Compression
	  is generally considerably better than that achieved by more
	  conventional LZ77/LZ78-based compressors, and approaches the
	  performance of the PPM family of statistical compressors.

	  Unless you have a specific application which requires bzip2, you
	  should probably say N here.

config FREETZ_BUSYBOX_FEATURE_BZIP2_DECOMPRESS
	bool "Enable decompression"
	default n
	depends on FREETZ_BUSYBOX_BZIP2 || FREETZ_BUSYBOX_BUNZIP2 || FREETZ_BUSYBOX_BZCAT
	help
	  Enable -d (--decompress) and -t (--test) options for bzip2.
	  This will be automatically selected if bunzip2 or bzcat is
	  enabled.
config FREETZ_BUSYBOX_CPIO
	bool "cpio"
	default n
	help
	  cpio is an archival utility program used to create, modify, and
	  extract contents from archives.
	  cpio has 110 bytes of overheads for every stored file.

	  This implementation of cpio can extract cpio archives created in the
	  "newc" or "crc" format.

	  Unless you have a specific application which requires cpio, you
	  should probably say N here.

config FREETZ_BUSYBOX_FEATURE_CPIO_O
	bool "Support archive creation"
	default n
	depends on FREETZ_BUSYBOX_CPIO
	help
	  This implementation of cpio can create cpio archives in the "newc"
	  format only.

config FREETZ_BUSYBOX_FEATURE_CPIO_P
	bool "Support passthrough mode"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_CPIO_O
	help
	  Passthrough mode. Rarely used.
config FREETZ_BUSYBOX_DPKG
	bool "dpkg"
	default n
	select FREETZ_BUSYBOX_FEATURE_SEAMLESS_GZ
	help
	  dpkg is a medium-level tool to install, build, remove and manage
	  Debian packages.

	  This implementation of dpkg has a number of limitations,
	  you should use the official dpkg if possible.
config FREETZ_BUSYBOX_DPKG_DEB
	bool "dpkg_deb"
	default n
	select FREETZ_BUSYBOX_FEATURE_SEAMLESS_GZ
	help
	  dpkg-deb unpacks and provides information about Debian archives.

	  This implementation of dpkg-deb cannot pack archives.

	  Unless you have a specific application which requires dpkg-deb,
	  say N here.
config FREETZ_BUSYBOX_GZIP
	bool "gzip"
	default n
	help
	  gzip is used to compress files.
	  It's probably the most widely used UNIX compression program.

config FREETZ_BUSYBOX_FEATURE_GZIP_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_GZIP && FREETZ_BUSYBOX_LONG_OPTS

config FREETZ_BUSYBOX_GZIP_FAST
	int "Trade memory for speed (0:small,slow - 2:fast,big)"
	default 0
	range 0 2
	depends on FREETZ_BUSYBOX_GZIP
	help
	  Enable big memory options for gzip.
	  0: small buffers, small hash-tables
	  1: larger buffers, larger hash-tables
	  2: larger buffers, largest hash-tables
	  Larger models may give slightly better compression

config FREETZ_BUSYBOX_FEATURE_GZIP_LEVELS
	bool "Enable compression levels"
	default n
	depends on FREETZ_BUSYBOX_GZIP
	help
	  Enable support for compression levels 4-9. The default level
	  is 6. If levels 1-3 are specified, 4 is used.
	  If this option is not selected, -N options are ignored and -9
	  is used.

config FREETZ_BUSYBOX_FEATURE_GZIP_DECOMPRESS
	bool "Enable decompression"
	default n
	depends on FREETZ_BUSYBOX_GZIP || FREETZ_BUSYBOX_GUNZIP || FREETZ_BUSYBOX_ZCAT
	help
	  Enable -d (--decompress) and -t (--test) options for gzip.
	  This will be automatically selected if gunzip or zcat is
	  enabled.
config FREETZ_BUSYBOX_LZIP
	bool "lzip"
	default n
	help
	  lzip is a lossless data compressor with a user interface similar to
	  the one of gzip or bzip2. lzip can compress about as fast as gzip or
	  compress most files more than bzip2 (depending on compression level).
	  Decompression speed is intermediate between gzip and bzip2. lzip is
	  better than gzip and bzip2 from a data recovery perspective.
config FREETZ_BUSYBOX_LZOP
	bool "lzop"
	default n
	help
	  Lzop compression/decompresion.

config FREETZ_BUSYBOX_UNLZOP
	bool "unlzop"
	default n  # INCOMPAT: upstream lzop does not provide such tool
	help
	  Lzop decompresion.

config FREETZ_BUSYBOX_LZOPCAT
	bool "lzopcat"
	default n  # INCOMPAT: upstream lzop does not provide such tool
	help
	  Alias to "unlzop -c".

config FREETZ_BUSYBOX_LZOP_COMPR_HIGH
	bool "lzop compression levels 7,8,9 (not very useful)"
	default n
	depends on FREETZ_BUSYBOX_LZOP || FREETZ_BUSYBOX_UNLZOP || FREETZ_BUSYBOX_LZOPCAT
	help
	  High levels (7,8,9) of lzop compression. These levels
	  are actually slower than gzip at equivalent compression ratios
	  and take up 3.2K of code.
config FREETZ_BUSYBOX_RPM2CPIO
	bool "rpm2cpio"
	default n
	help
	  Converts a RPM file into a CPIO archive.
config FREETZ_BUSYBOX_RPM
	bool "rpm"
	default n
	help
	  Mini RPM applet - queries and extracts RPM packages.
config FREETZ_BUSYBOX_TAR
	bool "tar"
	default n
	help
	  tar is an archiving program. It's commonly used with gzip to
	  create compressed archives. It's probably the most widely used
	  UNIX archive program.

config FREETZ_BUSYBOX_FEATURE_TAR_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_TAR && FREETZ_BUSYBOX_LONG_OPTS

config FREETZ_BUSYBOX_FEATURE_TAR_CREATE
	bool "Enable -c (archive creation)"
	default n
	depends on FREETZ_BUSYBOX_TAR

config FREETZ_BUSYBOX_FEATURE_TAR_AUTODETECT
	bool "Autodetect compressed tarballs"
	default n
	depends on FREETZ_BUSYBOX_TAR && (FREETZ_BUSYBOX_FEATURE_SEAMLESS_Z || FREETZ_BUSYBOX_FEATURE_SEAMLESS_GZ || FREETZ_BUSYBOX_FEATURE_SEAMLESS_BZ2 || FREETZ_BUSYBOX_FEATURE_SEAMLESS_LZ || FREETZ_BUSYBOX_FEATURE_SEAMLESS_LZMA || FREETZ_BUSYBOX_FEATURE_SEAMLESS_XZ)
	help
	  With this option tar can automatically detect compressed
	  tarballs. Currently it works only on files (not pipes etc).

config FREETZ_BUSYBOX_FEATURE_TAR_FROM
	bool "Enable -X (exclude from) and -T (include from) options)"
	default n
	depends on FREETZ_BUSYBOX_TAR
	help
	  If you enable this option you'll be able to specify
	  a list of files to include or exclude from an archive.

config FREETZ_BUSYBOX_FEATURE_TAR_OLDGNU_COMPATIBILITY
	bool "Support old tar header format"
	default n
	depends on FREETZ_BUSYBOX_TAR || FREETZ_BUSYBOX_DPKG
	help
	  This option is required to unpack archives created in
	  the old GNU format; help to kill this old format by
	  repacking your ancient archives with the new format.

config FREETZ_BUSYBOX_FEATURE_TAR_OLDSUN_COMPATIBILITY
	bool "Enable untarring of tarballs with checksums produced by buggy Sun tar"
	default n
	depends on FREETZ_BUSYBOX_TAR || FREETZ_BUSYBOX_DPKG
	help
	  This option is required to unpack archives created by some old
	  version of Sun's tar (it was calculating checksum using signed
	  arithmetic). It is said to be fixed in newer Sun tar, but "old"
	  tarballs still exist.

config FREETZ_BUSYBOX_FEATURE_TAR_GNU_EXTENSIONS
	bool "Support GNU tar extensions (long filenames)"
	default n
	depends on FREETZ_BUSYBOX_TAR || FREETZ_BUSYBOX_DPKG

config FREETZ_BUSYBOX_FEATURE_TAR_TO_COMMAND
	bool "Support writing to an external program (--to-command)"
	default n
	depends on FREETZ_BUSYBOX_TAR && FREETZ_BUSYBOX_FEATURE_TAR_LONG_OPTIONS
	help
	  If you enable this option you'll be able to instruct tar to send
	  the contents of each extracted file to the standard input of an
	  external program.

config FREETZ_BUSYBOX_FEATURE_TAR_UNAME_GNAME
	bool "Enable use of user and group names"
	default n
	depends on FREETZ_BUSYBOX_TAR
	help
	  Enable use of user and group names in tar. This affects contents
	  listings (-t) and preserving permissions when unpacking (-p).
	  +200 bytes.

config FREETZ_BUSYBOX_FEATURE_TAR_NOPRESERVE_TIME
	bool "Enable -m (do not preserve time) GNU option"
	default n
	depends on FREETZ_BUSYBOX_TAR

config FREETZ_BUSYBOX_FEATURE_TAR_SELINUX
	bool "Support extracting SELinux labels"
	default n
	depends on FREETZ_BUSYBOX_TAR && FREETZ_BUSYBOX_SELINUX
	help
	  With this option busybox supports restoring SELinux labels
	  when extracting files from tar archives.
config FREETZ_BUSYBOX_UNZIP
	bool "unzip"
	default n
	help
	  unzip will list or extract files from a ZIP archive,
	  commonly found on DOS/WIN systems. The default behavior
	  (with no options) is to extract the archive into the
	  current directory.

config FREETZ_BUSYBOX_FEATURE_UNZIP_CDF
	bool "Read and use Central Directory data"
	default n
	depends on FREETZ_BUSYBOX_UNZIP
	help
	  If you know that you only need to deal with simple
	  ZIP files without deleted/updated files, SFX archives etc,
	  you can reduce code size by unselecting this option.
	  To support less trivial ZIPs, say Y.

config FREETZ_BUSYBOX_FEATURE_UNZIP_BZIP2
	bool "Support compression method 12 (bzip2)"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_UNZIP_CDF && FREETZ_BUSYBOX_DESKTOP

config FREETZ_BUSYBOX_FEATURE_UNZIP_LZMA
	bool "Support compression method 14 (lzma)"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_UNZIP_CDF && FREETZ_BUSYBOX_DESKTOP

config FREETZ_BUSYBOX_FEATURE_UNZIP_XZ
	bool "Support compression method 95 (xz)"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_UNZIP_CDF && FREETZ_BUSYBOX_DESKTOP

config FREETZ_BUSYBOX_FEATURE_UNZIP_J_NUM
	bool "Provide non-standard -J NUM option"
	default n
	depends on FREETZ_BUSYBOX_UNZIP
	help
	Add support for a non-standard (busybox only) -J NUM option.
	Its behavior is the same as that of tar's --strip-components=NUM.

endmenu

# INCLUDE_END archival/Config.in
# INCLUDE_BEGIN coreutils/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Coreutils"

config FREETZ_BUSYBOX_BASENAME
	bool "basename"
	default n
	help
	  basename is used to strip the directory and suffix from filenames,
	  leaving just the filename itself. Enable this option if you wish
	  to enable the 'basename' utility.
config FREETZ_BUSYBOX_CAT
	bool "cat"
	default n
	help
	  cat is used to concatenate files and print them to the standard
	  output. Enable this option if you wish to enable the 'cat' utility.

config FREETZ_BUSYBOX_FEATURE_CATV
	bool "cat -v[etA]"
	default n
	depends on FREETZ_BUSYBOX_CAT
	help
	  Display nonprinting characters as escape sequences
config FREETZ_BUSYBOX_CHGRP
	bool "chgrp"
	default n
	help
	  chgrp is used to change the group ownership of files.
config FREETZ_BUSYBOX_CHMOD
	bool "chmod"
	default n
	help
	  chmod is used to change the access permission of files.
config FREETZ_BUSYBOX_CHOWN
	bool "chown"
	default n
	help
	  chown is used to change the user and/or group ownership
	  of files.

config FREETZ_BUSYBOX_FEATURE_CHOWN_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_CHOWN && FREETZ_BUSYBOX_LONG_OPTS
config FREETZ_BUSYBOX_CHROOT
	bool "chroot"
	default n
	help
	  chroot is used to change the root directory and run a command.
	  The default command is `/bin/sh'.
config FREETZ_BUSYBOX_CKSUM
	bool "cksum"
	default n
	help
	  cksum is used to calculate the CRC32 checksum of a file.
config FREETZ_BUSYBOX_COMM
	bool "comm"
	default n
	help
	  comm is used to compare two files line by line and return
	  a three-column output.
config FREETZ_BUSYBOX_CP
	bool "cp"
	default n
	help
	  cp is used to copy files and directories.

config FREETZ_BUSYBOX_FEATURE_CP_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_CP && FREETZ_BUSYBOX_LONG_OPTS
	help
	  Enable long options.
	  Also add support for --parents option.
config FREETZ_BUSYBOX_CUT
	bool "cut"
	default n
	help
	  cut is used to print selected parts of lines from
	  each file to stdout.
config FREETZ_BUSYBOX_DATE
	bool "date"
	default n
	help
	  date is used to set the system date or display the
	  current time in the given format.

config FREETZ_BUSYBOX_FEATURE_DATE_ISOFMT
	bool "Enable ISO date format output (-I)"
	default n
	depends on FREETZ_BUSYBOX_DATE
	help
	  Enable option (-I) to output an ISO-8601 compliant
	  date/time string.

# defaults to "no": stat's nanosecond field is a bit non-portable
config FREETZ_BUSYBOX_FEATURE_DATE_NANO
	bool "Support %[num]N nanosecond format specifier"
	default n
	depends on FREETZ_BUSYBOX_DATE  # syscall(__NR_clock_gettime)
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Support %[num]N format specifier. Adds ~250 bytes of code.

config FREETZ_BUSYBOX_FEATURE_DATE_COMPAT
	bool "Support weird 'date MMDDhhmm[[YY]YY][.ss]' format"
	default n
	depends on FREETZ_BUSYBOX_DATE
	help
	  System time can be set by 'date -s DATE' and simply 'date DATE',
	  but formats of DATE string are different. 'date DATE' accepts
	  a rather weird MMDDhhmm[[YY]YY][.ss] format with completely
	  unnatural placement of year between minutes and seconds.
	  date -s (and other commands like touch -d) use more sensible
	  formats (for one, ISO format YYYY-MM-DD hh:mm:ss.ssssss).

	  With this option off, 'date DATE' is 'date -s DATE' support
	  the same format. With it on, 'date DATE' additionally supports
	  MMDDhhmm[[YY]YY][.ss] format.
config FREETZ_BUSYBOX_DD
	bool "dd"
	default n
	help
	  dd copies a file (from standard input to standard output,
	  by default) using specific input and output blocksizes,
	  while optionally performing conversions on it.

config FREETZ_BUSYBOX_FEATURE_DD_SIGNAL_HANDLING
	bool "Enable signal handling for status reporting"
	default n
	depends on FREETZ_BUSYBOX_DD
	help
	  Sending a SIGUSR1 signal to a running `dd' process makes it
	  print to standard error the number of records read and written
	  so far, then to resume copying.

	  $ dd if=/dev/zero of=/dev/null &
	  $ pid=$!; kill -USR1 $pid; sleep 1; kill $pid
	  10899206+0 records in
	  10899206+0 records out

config FREETZ_BUSYBOX_FEATURE_DD_THIRD_STATUS_LINE
	bool "Enable the third status line upon signal"
	default n
	depends on FREETZ_BUSYBOX_DD && FREETZ_BUSYBOX_FEATURE_DD_SIGNAL_HANDLING
	help
	  Displays a coreutils-like third status line with transferred bytes,
	  elapsed time and speed.

config FREETZ_BUSYBOX_FEATURE_DD_IBS_OBS
	bool "Enable ibs, obs and conv options"
	default n
	depends on FREETZ_BUSYBOX_DD
	help
	  Enable support for writing a certain number of bytes in and out,
	  at a time, and performing conversions on the data stream.

config FREETZ_BUSYBOX_FEATURE_DD_STATUS
	bool "Enable status display options"
	default n
	depends on FREETZ_BUSYBOX_DD
	help
	  Enable support for status=noxfer/none option.
config FREETZ_BUSYBOX_DF
	bool "df"
	default n
	help
	  df reports the amount of disk space used and available
	  on filesystems.

config FREETZ_BUSYBOX_FEATURE_DF_FANCY
	bool "Enable -a, -i, -B"
	default n
	depends on FREETZ_BUSYBOX_DF
	help
	  -a Show all filesystems
	  -i Inodes
	  -B <SIZE> Blocksize
config FREETZ_BUSYBOX_DIRNAME
	bool "dirname"
	default n
	help
	  dirname is used to strip a non-directory suffix from
	  a file name.
config FREETZ_BUSYBOX_DOS2UNIX
	bool "dos2unix"
	default n
	help
	  dos2unix is used to convert a text file from DOS format to
	  UNIX format, and vice versa.

config FREETZ_BUSYBOX_UNIX2DOS
	bool "unix2dos"
	default n
	help
	  unix2dos is used to convert a text file from UNIX format to
	  DOS format, and vice versa.
config FREETZ_BUSYBOX_DU
	bool "du (default blocksize of 512 bytes)"
	default n
	help
	  du is used to report the amount of disk space used
	  for specified files.

config FREETZ_BUSYBOX_FEATURE_DU_DEFAULT_BLOCKSIZE_1K
	bool "Use a default blocksize of 1024 bytes (1K)"
	default n
	depends on FREETZ_BUSYBOX_DU
	help
	  Use a blocksize of (1K) instead of the default 512b.
config FREETZ_BUSYBOX_ECHO
	bool "echo (basic SuSv3 version taking no options)"
	default n
	help
	  echo is used to print a specified string to stdout.

# this entry also appears in shell/Config.in, next to the echo builtin
config FREETZ_BUSYBOX_FEATURE_FANCY_ECHO
	bool "Enable -n and -e options"
	default n
	depends on FREETZ_BUSYBOX_ECHO || FREETZ_BUSYBOX_ASH_ECHO || FREETZ_BUSYBOX_HUSH_ECHO
config FREETZ_BUSYBOX_ENV
	bool "env"
	default n
	help
	  env is used to set an environment variable and run
	  a command; without options it displays the current
	  environment.

config FREETZ_BUSYBOX_FEATURE_ENV_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_ENV && FREETZ_BUSYBOX_LONG_OPTS
config FREETZ_BUSYBOX_EXPAND
	bool "expand"
	default n
	help
	  By default, convert all tabs to spaces.

config FREETZ_BUSYBOX_FEATURE_EXPAND_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_EXPAND && FREETZ_BUSYBOX_LONG_OPTS

config FREETZ_BUSYBOX_UNEXPAND
	bool "unexpand"
	default n
	help
	  By default, convert only leading sequences of blanks to tabs.

config FREETZ_BUSYBOX_FEATURE_UNEXPAND_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_UNEXPAND && FREETZ_BUSYBOX_LONG_OPTS
config FREETZ_BUSYBOX_EXPR
	bool "expr"
	default n
	help
	  expr is used to calculate numbers and print the result
	  to standard output.

config FREETZ_BUSYBOX_EXPR_MATH_SUPPORT_64
	bool "Extend Posix numbers support to 64 bit"
	default n
	depends on FREETZ_BUSYBOX_EXPR
	help
	  Enable 64-bit math support in the expr applet. This will make
	  the applet slightly larger, but will allow computation with very
	  large numbers.
config FREETZ_BUSYBOX_FACTOR
	bool "factor"
	default n
	help
	  factor factorizes integers
config FREETZ_BUSYBOX_FALSE
	bool "false"
	default n
	help
	  false returns an exit code of FALSE (1).
config FREETZ_BUSYBOX_FOLD
	bool "fold"
	default n
	help
	  Wrap text to fit a specific width.
config FREETZ_BUSYBOX_FSYNC
	bool "fsync"
	default n
	help
	  fsync is used to flush file-related cached blocks to disk.
config FREETZ_BUSYBOX_HEAD
	bool "head"
	default n
	help
	  head is used to print the first specified number of lines
	  from files.

config FREETZ_BUSYBOX_FEATURE_FANCY_HEAD
	bool "Enable -c, -q, and -v"
	default n
	depends on FREETZ_BUSYBOX_HEAD
config FREETZ_BUSYBOX_HOSTID
	bool "hostid"
	default n
	help
	  hostid prints the numeric identifier (in hexadecimal) for
	  the current host.
config FREETZ_BUSYBOX_ID
	bool "id"
	default n
	help
	  id displays the current user and group ID names.

config FREETZ_BUSYBOX_GROUPS
	bool "groups"
	default n
	help
	  Print the group names associated with current user id.
config FREETZ_BUSYBOX_INSTALL
	bool "install"
	default n
	help
	  Copy files and set attributes.

config FREETZ_BUSYBOX_FEATURE_INSTALL_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_INSTALL && FREETZ_BUSYBOX_LONG_OPTS
config FREETZ_BUSYBOX_LINK
	bool "link"
	default n
	help
	  link creates hard links between files.
config FREETZ_BUSYBOX_LN
	bool "ln"
	default n
	help
	  ln is used to create hard or soft links between files.
config FREETZ_BUSYBOX_LOGNAME
	bool "logname"
	default n
	help
	  logname is used to print the current user's login name.
config FREETZ_BUSYBOX_LS
	bool "ls"
	default n
	help
	  ls is used to list the contents of directories.

config FREETZ_BUSYBOX_FEATURE_LS_FILETYPES
	bool "Enable filetyping options (-p and -F)"
	default n
	depends on FREETZ_BUSYBOX_LS

config FREETZ_BUSYBOX_FEATURE_LS_FOLLOWLINKS
	bool "Enable symlinks dereferencing (-L)"
	default n
	depends on FREETZ_BUSYBOX_LS

config FREETZ_BUSYBOX_FEATURE_LS_RECURSIVE
	bool "Enable recursion (-R)"
	default n
	depends on FREETZ_BUSYBOX_LS

config FREETZ_BUSYBOX_FEATURE_LS_WIDTH
	bool "Enable -w WIDTH and window size autodetection"
	default n
	depends on FREETZ_BUSYBOX_LS

config FREETZ_BUSYBOX_FEATURE_LS_SORTFILES
	bool "Sort the file names"
	default n
	depends on FREETZ_BUSYBOX_LS
	help
	  Allow ls to sort file names alphabetically.

config FREETZ_BUSYBOX_FEATURE_LS_TIMESTAMPS
	bool "Show file timestamps"
	default n
	depends on FREETZ_BUSYBOX_LS
	help
	  Allow ls to display timestamps for files.

config FREETZ_BUSYBOX_FEATURE_LS_USERNAME
	bool "Show username/groupnames"
	default n
	depends on FREETZ_BUSYBOX_LS
	help
	  Allow ls to display username/groupname for files.

config FREETZ_BUSYBOX_FEATURE_LS_COLOR
	bool "Allow use of color to identify file types"
	default n
	depends on FREETZ_BUSYBOX_LS && FREETZ_BUSYBOX_LONG_OPTS
	help
	  This enables the --color option to ls.

config FREETZ_BUSYBOX_FEATURE_LS_COLOR_IS_DEFAULT
	bool "Produce colored ls output by default"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_LS_COLOR
	help
	  Saying yes here will turn coloring on by default,
	  even if no "--color" option is given to the ls command.
	  This is not recommended, since the colors are not
	  configurable, and the output may not be legible on
	  many output screens.
config FREETZ_BUSYBOX_MD5SUM
	bool "md5sum"
	default y
	help
	  md5sum is used to print or check MD5 checksums.

config FREETZ_BUSYBOX_SHA1SUM
	bool "sha1sum"
	default n
	help
	  Compute and check SHA1 message digest

config FREETZ_BUSYBOX_SHA256SUM
	bool "sha256sum"
	default n
	help
	  Compute and check SHA256 message digest

config FREETZ_BUSYBOX_SHA512SUM
	bool "sha512sum"
	default n
	help
	  Compute and check SHA512 message digest

config FREETZ_BUSYBOX_SHA3SUM
	bool "sha3sum"
	default n
	help
	  Compute and check SHA3 message digest

comment "Common options for md5sum, sha1sum, sha256sum, sha512sum, sha3sum"
	depends on FREETZ_BUSYBOX_MD5SUM || FREETZ_BUSYBOX_SHA1SUM || FREETZ_BUSYBOX_SHA256SUM || FREETZ_BUSYBOX_SHA512SUM || FREETZ_BUSYBOX_SHA3SUM

config FREETZ_BUSYBOX_FEATURE_MD5_SHA1_SUM_CHECK
	bool "Enable -c, -s and -w options"
	default n
	depends on FREETZ_BUSYBOX_MD5SUM || FREETZ_BUSYBOX_SHA1SUM || FREETZ_BUSYBOX_SHA256SUM || FREETZ_BUSYBOX_SHA512SUM || FREETZ_BUSYBOX_SHA3SUM
	help
	  Enabling the -c options allows files to be checked
	  against pre-calculated hash values.
	  -s and -w are useful options when verifying checksums.
config FREETZ_BUSYBOX_MKDIR
	bool "mkdir"
	default n
	help
	  mkdir is used to create directories with the specified names.

config FREETZ_BUSYBOX_FEATURE_MKDIR_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_MKDIR && FREETZ_BUSYBOX_LONG_OPTS
config FREETZ_BUSYBOX_MKFIFO
	bool "mkfifo"
	default n
	help
	  mkfifo is used to create FIFOs (named pipes).
	  The 'mknod' program can also create FIFOs.
config FREETZ_BUSYBOX_MKNOD
	bool "mknod"
	default n
	help
	  mknod is used to create FIFOs or block/character special
	  files with the specified names.
config FREETZ_BUSYBOX_MKTEMP
	bool "mktemp"
	default n
	help
	  mktemp is used to create unique temporary files
config FREETZ_BUSYBOX_MV
	bool "mv"
	default n
	help
	  mv is used to move or rename files or directories.

config FREETZ_BUSYBOX_FEATURE_MV_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_MV && FREETZ_BUSYBOX_LONG_OPTS
config FREETZ_BUSYBOX_NICE
	bool "nice"
	default n
	help
	  nice runs a program with modified scheduling priority.
config FREETZ_BUSYBOX_NL
	bool "nl"
	default n
	help
	  nl is used to number lines of files.
config FREETZ_BUSYBOX_NOHUP
	bool "nohup"
	default n
	help
	  run a command immune to hangups, with output to a non-tty.
config FREETZ_BUSYBOX_NPROC
	bool "nproc"
	default n
	help
	  Print number of CPUs
config FREETZ_BUSYBOX_OD
	bool "od"
	default n
	help
	  od is used to dump binary files in octal and other formats.
config FREETZ_BUSYBOX_PASTE
	bool "paste"
	default n
	help
	  paste is used to paste lines of different files together
	  and write the result to stdout
config FREETZ_BUSYBOX_PRINTENV
	bool "printenv"
	default n
	help
	  printenv is used to print all or part of environment.
config FREETZ_BUSYBOX_PRINTF
	bool "printf"
	default n
	help
	  printf is used to format and print specified strings.
	  It's similar to `echo' except it has more options.
config FREETZ_BUSYBOX_PWD
	bool "pwd"
	default n
	help
	  pwd is used to print the current directory.
config FREETZ_BUSYBOX_READLINK
	bool "readlink"
	default n
	help
	  This program reads a symbolic link and returns the name
	  of the file it points to

config FREETZ_BUSYBOX_FEATURE_READLINK_FOLLOW
	bool "Enable canonicalization by following all symlinks (-f)"
	default n
	depends on FREETZ_BUSYBOX_READLINK
	help
	  Enable the readlink option (-f).
config FREETZ_BUSYBOX_REALPATH
	bool "realpath"
	default n
	help
	  Return the canonicalized absolute pathname.
	  This isn't provided by GNU shellutils, but where else does it belong.
config FREETZ_BUSYBOX_RM
	bool "rm"
	default n
	help
	  rm is used to remove files or directories.
config FREETZ_BUSYBOX_RMDIR
	bool "rmdir"
	default n
	help
	  rmdir is used to remove empty directories.

config FREETZ_BUSYBOX_FEATURE_RMDIR_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_RMDIR && FREETZ_BUSYBOX_LONG_OPTS
	help
	  Support long options for the rmdir applet, including
	  --ignore-fail-on-non-empty for compatibility with GNU rmdir.
config FREETZ_BUSYBOX_SEQ
	bool "seq"
	default n
	help
	  print a sequence of numbers
config FREETZ_BUSYBOX_SHRED
	bool "shred"
	default n
	help
	  Overwrite a file to hide its contents, and optionally delete it
config FREETZ_BUSYBOX_SHUF
	bool "shuf"
	default n
	help
	  Generate random permutations
config FREETZ_BUSYBOX_SLEEP
	bool "sleep"
	default n
	help
	  sleep is used to pause for a specified number of seconds.
	  It comes in 3 versions:
	  - small: takes one integer parameter
	  - fancy: takes multiple integer arguments with suffixes:
	    sleep 1d 2h 3m 15s
	  - fancy with fractional numbers:
	    sleep 2.3s 4.5h sleeps for 16202.3 seconds
	  Last one is "the most compatible" with coreutils sleep,
	  but it adds around 1k of code.

config FREETZ_BUSYBOX_FEATURE_FANCY_SLEEP
	bool "Enable multiple arguments and s/m/h/d suffixes"
	default n
	depends on FREETZ_BUSYBOX_SLEEP
	help
	  Allow sleep to pause for specified minutes, hours, and days.

config FREETZ_BUSYBOX_FEATURE_FLOAT_SLEEP
	bool "Enable fractional arguments"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_FANCY_SLEEP
	help
	  Allow for fractional numeric parameters.
config FREETZ_BUSYBOX_SORT
	bool "sort"
	default n
	help
	  sort is used to sort lines of text in specified files.

config FREETZ_BUSYBOX_FEATURE_SORT_BIG
	bool "Full SuSv3 compliant sort (support -ktcsbdfiozgM)"
	default n
	depends on FREETZ_BUSYBOX_SORT
	help
	  Without this, sort only supports -r, -u, and an integer version
	  of -n. Selecting this adds sort keys, floating point support, and
	  more. This adds a little over 3k to a nonstatic build on x86.

	  The SuSv3 sort standard is available at:
	  http://www.opengroup.org/onlinepubs/007904975/utilities/sort.html
config FREETZ_BUSYBOX_SPLIT
	bool "split"
	default n
	help
	  Split a file into pieces.

config FREETZ_BUSYBOX_FEATURE_SPLIT_FANCY
	bool "Fancy extensions"
	default n
	depends on FREETZ_BUSYBOX_SPLIT
	help
	  Add support for features not required by SUSv3.
	  Supports additional suffixes 'b' for 512 bytes,
	  'g' for 1GiB for the -b option.
config FREETZ_BUSYBOX_STAT
	bool "stat"
	default n
	help
	  display file or filesystem status.

config FREETZ_BUSYBOX_FEATURE_STAT_FORMAT
	bool "Enable custom formats (-c)"
	default n
	depends on FREETZ_BUSYBOX_STAT
	help
	  Without this, stat will not support the '-c format' option where
	  users can pass a custom format string for output. This adds about
	  7k to a nonstatic build on amd64.

config FREETZ_BUSYBOX_FEATURE_STAT_FILESYSTEM
	bool "Enable display of filesystem status (-f)"
	default n
	depends on FREETZ_BUSYBOX_STAT
	select FREETZ_BUSYBOX_PLATFORM_LINUX # statfs()
	help
	  Without this, stat will not support the '-f' option to display
	  information about filesystem status.
config FREETZ_BUSYBOX_STTY
	bool "stty"
	default n
	help
	  stty is used to change and print terminal line settings.
config FREETZ_BUSYBOX_SUM
	bool "sum"
	default n
	help
	  checksum and count the blocks in a file
config FREETZ_BUSYBOX_SYNC
	bool "sync"
	default n
	help
	  sync is used to flush filesystem buffers.
config FREETZ_BUSYBOX_FEATURE_SYNC_FANCY
	bool "Enable -d and -f flags (requires syncfs(2) in libc)"
	default n
	depends on FREETZ_BUSYBOX_SYNC
	help
	  sync -d FILE... executes fdatasync() on each FILE.
	  sync -f FILE... executes syncfs() on each FILE.
config FREETZ_BUSYBOX_TAC
	bool "tac"
	default n
	help
	  tac is used to concatenate and print files in reverse.
config FREETZ_BUSYBOX_TAIL
	bool "tail"
	default n
	help
	  tail is used to print the last specified number of lines
	  from files.

config FREETZ_BUSYBOX_FEATURE_FANCY_TAIL
	bool "Enable -q, -s, -v, and -F options"
	default n
	depends on FREETZ_BUSYBOX_TAIL
	help
	  These options are provided by GNU tail, but
	  are not specific in the SUSv3 standard:
	    -q      Never output headers giving file names
	    -s SEC  Wait SEC seconds between reads with -f
	    -v      Always output headers giving file names
	    -F      Same as -f, but keep retrying
config FREETZ_BUSYBOX_TEE
	bool "tee"
	default n
	help
	  tee is used to read from standard input and write
	  to standard output and files.

config FREETZ_BUSYBOX_FEATURE_TEE_USE_BLOCK_IO
	bool "Enable block I/O (larger/faster) instead of byte I/O"
	default n
	depends on FREETZ_BUSYBOX_TEE
	help
	  Enable this option for a faster tee, at expense of size.
config FREETZ_BUSYBOX_TEST
	bool "test"
	default n
	help
	  test is used to check file types and compare values,
	  returning an appropriate exit code. The bash shell
	  has test built in, ash can build it in optionally.

config FREETZ_BUSYBOX_TEST1
	bool "test as ["
	default n
	help
	  Provide test command in the "[ EXPR ]" form

config FREETZ_BUSYBOX_TEST2
	bool "test as [["
	default n
	help
	  Provide test command in the "[[ EXPR ]]" form

config FREETZ_BUSYBOX_FEATURE_TEST_64
	bool "Extend test to 64 bit"
	default n
	depends on FREETZ_BUSYBOX_TEST || FREETZ_BUSYBOX_TEST1 || FREETZ_BUSYBOX_TEST2 || FREETZ_BUSYBOX_ASH_TEST || FREETZ_BUSYBOX_HUSH_TEST
	help
	  Enable 64-bit support in test.
config FREETZ_BUSYBOX_TIMEOUT
	bool "timeout"
	default n
	help
	  Runs a program and watches it. If it does not terminate in
	  specified number of seconds, it is sent a signal.
config FREETZ_BUSYBOX_TOUCH
	bool "touch"
	default n
	help
	  touch is used to create or change the access and/or
	  modification timestamp of specified files.

config FREETZ_BUSYBOX_FEATURE_TOUCH_NODEREF
	bool "Add support for -h"
	default n
	depends on FREETZ_BUSYBOX_TOUCH
	help
	  Enable touch to have the -h option.
	  This requires libc support for lutimes() function.

config FREETZ_BUSYBOX_FEATURE_TOUCH_SUSV3
	bool "Add support for SUSV3 features (-d -t -r)"
	default n
	depends on FREETZ_BUSYBOX_TOUCH
	help
	  Enable touch to use a reference file or a given date/time argument.
config FREETZ_BUSYBOX_TR
	bool "tr"
	default n
	help
	  tr is used to squeeze, and/or delete characters from standard
	  input, writing to standard output.

config FREETZ_BUSYBOX_FEATURE_TR_CLASSES
	bool "Enable character classes (such as [:upper:])"
	default n
	depends on FREETZ_BUSYBOX_TR
	help
	  Enable character classes, enabling commands such as:
	  tr [:upper:] [:lower:] to convert input into lowercase.

config FREETZ_BUSYBOX_FEATURE_TR_EQUIV
	bool "Enable equivalence classes"
	default n
	depends on FREETZ_BUSYBOX_TR
	help
	  Enable equivalence classes, which essentially add the enclosed
	  character to the current set. For instance, tr [=a=] xyz would
	  replace all instances of 'a' with 'xyz'. This option is mainly
	  useful for cases when no other way of expressing a character
	  is possible.
config FREETZ_BUSYBOX_TRUE
	bool "true"
	default n
	help
	  true returns an exit code of TRUE (0).
config FREETZ_BUSYBOX_TRUNCATE
	bool "truncate"
	default n
	help
	  truncate truncates files to a given size. If a file does
	  not exist, it is created unless told otherwise.
config FREETZ_BUSYBOX_TTY
	bool "tty"
	default n
	help
	  tty is used to print the name of the current terminal to
	  standard output.
config FREETZ_BUSYBOX_UNAME
	bool "uname"
	default n
	help
	  uname is used to print system information.

config FREETZ_BUSYBOX_UNAME_OSNAME
	string "Operating system name"
	default "GNU/Linux"
	depends on FREETZ_BUSYBOX_UNAME
	help
	  Sets the operating system name reported by uname -o.  The
	  default is "GNU/Linux".
config FREETZ_BUSYBOX_UNIQ
	bool "uniq"
	default n
	help
	  uniq is used to remove duplicate lines from a sorted file.
config FREETZ_BUSYBOX_UNLINK
	bool "unlink"
	default n
	help
	  unlink deletes a file by calling unlink()
config FREETZ_BUSYBOX_USLEEP
	bool "usleep"
	default n
	help
	  usleep is used to pause for a specified number of microseconds.
config FREETZ_BUSYBOX_UUDECODE
	bool "uudecode"
	default n
	help
	  uudecode is used to decode a uuencoded file.
config FREETZ_BUSYBOX_BASE64
	bool "base64"
	default n
	help
	  Base64 encode and decode
config FREETZ_BUSYBOX_UUENCODE
	bool "uuencode"
	default n
	help
	  uuencode is used to uuencode a file.
config FREETZ_BUSYBOX_WC
	bool "wc"
	default n
	help
	  wc is used to print the number of bytes, words, and lines,
	  in specified files.

config FREETZ_BUSYBOX_FEATURE_WC_LARGE
	bool "Support very large counts"
	default n
	depends on FREETZ_BUSYBOX_WC
	help
	  Use "unsigned long long" for counter variables.
config FREETZ_BUSYBOX_WHOAMI
	bool "whoami"
	default n
	help
	  whoami is used to print the username of the current
	  user id (same as id -un).
config FREETZ_BUSYBOX_WHO
      bool "who"
      default n
      depends on FREETZ_BUSYBOX_FEATURE_UTMP
      help
        who is used to show who is logged on.

config FREETZ_BUSYBOX_W
      bool "w"
      default n
      depends on FREETZ_BUSYBOX_FEATURE_UTMP
      help
        w is used to show who is logged on.

config FREETZ_BUSYBOX_USERS
      bool "users"
      default n
      depends on FREETZ_BUSYBOX_FEATURE_UTMP
      help
        Print users currently logged on.
config FREETZ_BUSYBOX_YES
	bool "yes"
	default n
	help
	  yes is used to repeatedly output a specific string, or
	  the default string `y'.

comment "Common options"

config FREETZ_BUSYBOX_FEATURE_VERBOSE
	bool "Support verbose options (usually -v) for various applets"
	default n
	help
	  Enable cp -v, rm -v and similar messages.
	  Also enables long option (--verbose) if it exists.
	  Without this option, -v is accepted but ignored.

comment "Common options for cp and mv"
	depends on FREETZ_BUSYBOX_CP || FREETZ_BUSYBOX_MV

config FREETZ_BUSYBOX_FEATURE_PRESERVE_HARDLINKS
	bool "Preserve hard links"
	default n
	depends on FREETZ_BUSYBOX_CP || FREETZ_BUSYBOX_MV
	help
	  Allow cp and mv to preserve hard links.

comment "Common options for df, du, ls"
	depends on FREETZ_BUSYBOX_DF || FREETZ_BUSYBOX_DU || FREETZ_BUSYBOX_LS

config FREETZ_BUSYBOX_FEATURE_HUMAN_READABLE
	bool "Support human readable output (example 13k, 23M, 235G)"
	default n
	depends on FREETZ_BUSYBOX_DF || FREETZ_BUSYBOX_DU || FREETZ_BUSYBOX_LS
	help
	  Allow df, du, and ls to have human readable output.

endmenu

# INCLUDE_END coreutils/Config.in
# INCLUDE_BEGIN console-tools/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Console Utilities"

config FREETZ_BUSYBOX_CHVT
	bool "chvt"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This program is used to change to another terminal.
	  Example: chvt 4 (change to terminal /dev/tty4)
config FREETZ_BUSYBOX_CLEAR
	bool "clear"
	default n
	help
	  This program clears the terminal screen.
config FREETZ_BUSYBOX_DEALLOCVT
	bool "deallocvt"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This program deallocates unused virtual consoles.
config FREETZ_BUSYBOX_DUMPKMAP
	bool "dumpkmap"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This program dumps the kernel's keyboard translation table to
	  stdout, in binary format. You can then use loadkmap to load it.
config FREETZ_BUSYBOX_FGCONSOLE
	bool "fgconsole"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This program prints active (foreground) console number.
config FREETZ_BUSYBOX_KBD_MODE
	bool "kbd_mode"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This program reports and sets keyboard mode.
config FREETZ_BUSYBOX_LOADFONT
	bool "loadfont"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This program loads a console font from standard input.

config FREETZ_BUSYBOX_SETFONT
	bool "setfont"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Allows to load console screen map. Useful for i18n.

config FREETZ_BUSYBOX_FEATURE_SETFONT_TEXTUAL_MAP
	bool "Support reading textual screen maps"
	default n
	depends on FREETZ_BUSYBOX_SETFONT
	help
	  Support reading textual screen maps.

config FREETZ_BUSYBOX_DEFAULT_SETFONT_DIR
	string "Default directory for console-tools files"
	default ""
	depends on FREETZ_BUSYBOX_SETFONT
	help
	  Directory to use if setfont's params are simple filenames
	  (not /path/to/file or ./file). Default is "" (no default directory).

comment "Common options for loadfont and setfont"
	depends on FREETZ_BUSYBOX_LOADFONT || FREETZ_BUSYBOX_SETFONT

config FREETZ_BUSYBOX_FEATURE_LOADFONT_PSF2
	bool "Support PSF2 console fonts"
	default n
	depends on FREETZ_BUSYBOX_LOADFONT || FREETZ_BUSYBOX_SETFONT

config FREETZ_BUSYBOX_FEATURE_LOADFONT_RAW
	bool "Support old (raw) console fonts"
	default n
	depends on FREETZ_BUSYBOX_LOADFONT || FREETZ_BUSYBOX_SETFONT
config FREETZ_BUSYBOX_LOADKMAP
	bool "loadkmap"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This program loads a keyboard translation table from
	  standard input.
config FREETZ_BUSYBOX_OPENVT
	bool "openvt"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This program is used to start a command on an unused
	  virtual terminal.
config FREETZ_BUSYBOX_RESET
	bool "reset"
	default n
	help
	  This program is used to reset the terminal screen, if it
	  gets messed up.
config FREETZ_BUSYBOX_RESIZE
	bool "resize"
	default n
	help
	  This program is used to (re)set the width and height of your current
	  terminal.

config FREETZ_BUSYBOX_FEATURE_RESIZE_PRINT
	bool "Print environment variables"
	default n
	depends on FREETZ_BUSYBOX_RESIZE
	help
	  Prints the newly set size (number of columns and rows) of
	  the terminal.
	  E.g.:
	  COLUMNS=80;LINES=44;export COLUMNS LINES;
config FREETZ_BUSYBOX_SETCONSOLE
	bool "setconsole"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This program redirects the system console to another device,
	  like the current tty while logged in via telnet.

config FREETZ_BUSYBOX_FEATURE_SETCONSOLE_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_SETCONSOLE && FREETZ_BUSYBOX_LONG_OPTS
config FREETZ_BUSYBOX_SETKEYCODES
	bool "setkeycodes"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This program loads entries into the kernel's scancode-to-keycode
	  map, allowing unusual keyboards to generate usable keycodes.
config FREETZ_BUSYBOX_SETLOGCONS
	bool "setlogcons"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This program redirects the output console of kernel messages.
config FREETZ_BUSYBOX_SHOWKEY
	bool "showkey"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Shows keys pressed.

endmenu

# INCLUDE_END console-tools/Config.in
# INCLUDE_BEGIN debianutils/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Debian Utilities"

config FREETZ_BUSYBOX_PIPE_PROGRESS
	bool "pipe_progress"
	default n
	help
	  Display a dot to indicate pipe activity.
config FREETZ_BUSYBOX_RUN_PARTS
	bool "run-parts"
	default n
	help
	  run-parts is a utility designed to run all the scripts in a directory.

	  It is useful to set up a directory like cron.daily, where you need to
	  execute all the scripts in that directory.

	  In this implementation of run-parts some features (such as report
	  mode) are not implemented.

	  Unless you know that run-parts is used in some of your scripts
	  you can safely say N here.

config FREETZ_BUSYBOX_FEATURE_RUN_PARTS_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_RUN_PARTS && FREETZ_BUSYBOX_LONG_OPTS

config FREETZ_BUSYBOX_FEATURE_RUN_PARTS_FANCY
	bool "Support additional arguments"
	default n
	depends on FREETZ_BUSYBOX_RUN_PARTS
	help
	  Support additional options:
	  -l --list print the names of the all matching files (not
	            limited to executables), but don't actually run them.
config FREETZ_BUSYBOX_START_STOP_DAEMON
	bool "start-stop-daemon"
	default n
	help
	  start-stop-daemon is used to control the creation and
	  termination of system-level processes, usually the ones
	  started during the startup of the system.

config FREETZ_BUSYBOX_FEATURE_START_STOP_DAEMON_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_START_STOP_DAEMON && FREETZ_BUSYBOX_LONG_OPTS

config FREETZ_BUSYBOX_FEATURE_START_STOP_DAEMON_FANCY
	bool "Support additional arguments"
	default n
	depends on FREETZ_BUSYBOX_START_STOP_DAEMON
	help
	  -o|--oknodo ignored since we exit with 0 anyway
	  -v|--verbose
	  -N|--nicelevel N
config FREETZ_BUSYBOX_WHICH
	bool "which"
	default n
	help
	  which is used to find programs in your PATH and
	  print out their pathnames.

endmenu

# INCLUDE_END debianutils/Config.in
# INCLUDE_BEGIN editors/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Editors"

config FREETZ_BUSYBOX_AWK
	bool "awk"
	default n
	help
	  Awk is used as a pattern scanning and processing language. This is
	  the BusyBox implementation of that programming language.

config FREETZ_BUSYBOX_FEATURE_AWK_LIBM
	bool "Enable math functions (requires libm)"
	default n
	depends on FREETZ_BUSYBOX_AWK
	help
	  Enable math functions of the Awk programming language.
	  NOTE: This will require libm to be present for linking.

config FREETZ_BUSYBOX_FEATURE_AWK_GNU_EXTENSIONS
	bool "Enable a few GNU extensions"
	default n
	depends on FREETZ_BUSYBOX_AWK
	help
	  Enable a few features from gawk:
	  * command line option -e AWK_PROGRAM
	  * simultaneous use of -f and -e on the command line.
	    This enables the use of awk library files.
	    Ex: awk -f mylib.awk -e '{print myfunction($1);}' ...
config FREETZ_BUSYBOX_CMP
	bool "cmp"
	default n
	help
	  cmp is used to compare two files and returns the result
	  to standard output.
config FREETZ_BUSYBOX_DIFF
	bool "diff"
	default n
	help
	  diff compares two files or directories and outputs the
	  differences between them in a form that can be given to
	  the patch command.

config FREETZ_BUSYBOX_FEATURE_DIFF_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_DIFF && FREETZ_BUSYBOX_LONG_OPTS

config FREETZ_BUSYBOX_FEATURE_DIFF_DIR
	bool "Enable directory support"
	default n
	depends on FREETZ_BUSYBOX_DIFF
	help
	  This option enables support for directory and subdirectory
	  comparison.
config FREETZ_BUSYBOX_ED
	bool "ed"
	default n
	help
	  The original 1970's Unix text editor, from the days of teletypes.
	  Small, simple, evil. Part of SUSv3. If you're not already using
	  this, you don't need it.
config FREETZ_BUSYBOX_PATCH
	bool "patch"
	default n
	help
	  Apply a unified diff formatted patch.
config FREETZ_BUSYBOX_SED
	bool "sed"
	default n
	help
	  sed is used to perform text transformations on a file
	  or input from a pipeline.
config FREETZ_BUSYBOX_VI
	bool "vi"
	default n
	help
	  'vi' is a text editor. More specifically, it is the One True
	  text editor <grin>. It does, however, have a rather steep
	  learning curve. If you are not already comfortable with 'vi'
	  you may wish to use something else.

config FREETZ_BUSYBOX_FEATURE_VI_MAX_LEN
	int "Maximum screen width"
	range 256 16384
	default 1024
	depends on FREETZ_BUSYBOX_VI
	help
	  Contrary to what you may think, this is not eating much.
	  Make it smaller than 4k only if you are very limited on memory.

config FREETZ_BUSYBOX_FEATURE_VI_8BIT
	bool "Allow to display 8-bit chars (otherwise shows dots)"
	default n
	depends on FREETZ_BUSYBOX_VI
	help
	  If your terminal can display characters with high bit set,
	  you may want to enable this. Note: vi is not Unicode-capable.
	  If your terminal combines several 8-bit bytes into one character
	  (as in Unicode mode), this will not work properly.

config FREETZ_BUSYBOX_FEATURE_VI_COLON
	bool "Enable \":\" colon commands (no \"ex\" mode)"
	default n
	depends on FREETZ_BUSYBOX_VI
	help
	  Enable a limited set of colon commands. This does not
	  provide an "ex" mode.

config FREETZ_BUSYBOX_FEATURE_VI_YANKMARK
	bool "Enable yank/put commands and mark cmds"
	default n
	depends on FREETZ_BUSYBOX_VI
	help
	  This will enable you to use yank and put, as well as mark.

config FREETZ_BUSYBOX_FEATURE_VI_SEARCH
	bool "Enable search and replace cmds"
	default n
	depends on FREETZ_BUSYBOX_VI
	help
	  Select this if you wish to be able to do search and replace.

config FREETZ_BUSYBOX_FEATURE_VI_REGEX_SEARCH
	bool "Enable regex in search and replace"
	default n   # Uses GNU regex, which may be unavailable. FIXME
	depends on FREETZ_BUSYBOX_FEATURE_VI_SEARCH
	help
	  Use extended regex search.

config FREETZ_BUSYBOX_FEATURE_VI_USE_SIGNALS
	bool "Catch signals"
	default n
	depends on FREETZ_BUSYBOX_VI
	help
	  Selecting this option will make vi signal aware. This will support
	  SIGWINCH to deal with Window Changes, catch ^Z and ^C and alarms.

config FREETZ_BUSYBOX_FEATURE_VI_DOT_CMD
	bool "Remember previous cmd and \".\" cmd"
	default n
	depends on FREETZ_BUSYBOX_VI
	help
	  Make vi remember the last command and be able to repeat it.

config FREETZ_BUSYBOX_FEATURE_VI_READONLY
	bool "Enable -R option and \"view\" mode"
	default n
	depends on FREETZ_BUSYBOX_VI
	help
	  Enable the read-only command line option, which allows the user to
	  open a file in read-only mode.

config FREETZ_BUSYBOX_FEATURE_VI_SETOPTS
	bool "Enable settable options, ai ic showmatch"
	default n
	depends on FREETZ_BUSYBOX_VI
	help
	  Enable the editor to set some (ai, ic, showmatch) options.

config FREETZ_BUSYBOX_FEATURE_VI_SET
	bool "Support :set"
	default n
	depends on FREETZ_BUSYBOX_VI

config FREETZ_BUSYBOX_FEATURE_VI_WIN_RESIZE
	bool "Handle window resize"
	default n
	depends on FREETZ_BUSYBOX_VI
	help
	  Behave nicely with terminals that get resized.

config FREETZ_BUSYBOX_FEATURE_VI_ASK_TERMINAL
	bool "Use 'tell me cursor position' ESC sequence to measure window"
	default n
	depends on FREETZ_BUSYBOX_VI
	help
	  If terminal size can't be retrieved and $LINES/$COLUMNS are not set,
	  this option makes vi perform a last-ditch effort to find it:
	  position cursor to 999,999 and ask terminal to report real
	  cursor position using "ESC [ 6 n" escape sequence, then read stdin.
	  This is not clean but helps a lot on serial lines and such.

config FREETZ_BUSYBOX_FEATURE_VI_UNDO
	bool "Support undo command \"u\""
	default n
	depends on FREETZ_BUSYBOX_VI
	help
	  Support the 'u' command to undo insertion, deletion, and replacement
	  of text.

config FREETZ_BUSYBOX_FEATURE_VI_UNDO_QUEUE
	bool "Enable undo operation queuing"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_VI_UNDO
	help
	  The vi undo functions can use an intermediate queue to greatly lower
	  malloc() calls and overhead. When the maximum size of this queue is
	  reached, the contents of the queue are committed to the undo stack.
	  This increases the size of the undo code and allows some undo
	  operations (especially un-typing/backspacing) to be far more useful.

config FREETZ_BUSYBOX_FEATURE_VI_UNDO_QUEUE_MAX
	int "Maximum undo character queue size"
	default 256
	range 32 65536
	depends on FREETZ_BUSYBOX_FEATURE_VI_UNDO_QUEUE
	help
	  This option sets the number of bytes used at runtime for the queue.
	  Smaller values will create more undo objects and reduce the amount
	  of typed or backspaced characters that are grouped into one undo
	  operation; larger values increase the potential size of each undo
	  and will generally malloc() larger objects and less frequently.
	  Unless you want more (or less) frequent "undo points" while typing,
	  you should probably leave this unchanged.

config FREETZ_BUSYBOX_FEATURE_ALLOW_EXEC
	bool "Allow vi and awk to execute shell commands"
	default n
	depends on FREETZ_BUSYBOX_VI || FREETZ_BUSYBOX_AWK
	help
	  Enables vi and awk features which allow user to execute
	  shell commands (using system() C call).

endmenu

# INCLUDE_END editors/Config.in
# INCLUDE_BEGIN findutils/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Finding Utilities"

config FREETZ_BUSYBOX_FIND
	bool "find"
	default n
	help
	  find is used to search your system to find specified files.

config FREETZ_BUSYBOX_FEATURE_FIND_PRINT0
	bool "Enable -print0: NUL-terminated output"
	default n
	depends on FREETZ_BUSYBOX_FIND
	help
	  Causes output names to be separated by a NUL character
	  rather than a newline. This allows names that contain
	  newlines and other whitespace to be more easily
	  interpreted by other programs.

config FREETZ_BUSYBOX_FEATURE_FIND_MTIME
	bool "Enable -mtime: modified time matching"
	default n
	depends on FREETZ_BUSYBOX_FIND
	help
	  Allow searching based on the modification time of
	  files, in days.

config FREETZ_BUSYBOX_FEATURE_FIND_MMIN
	bool "Enable -mmin: modified time matching by minutes"
	default n
	depends on FREETZ_BUSYBOX_FIND
	help
	  Allow searching based on the modification time of
	  files, in minutes.

config FREETZ_BUSYBOX_FEATURE_FIND_PERM
	bool "Enable -perm: permissions matching"
	default n
	depends on FREETZ_BUSYBOX_FIND

config FREETZ_BUSYBOX_FEATURE_FIND_TYPE
	bool "Enable -type: file type matching (file/dir/link/...)"
	default n
	depends on FREETZ_BUSYBOX_FIND
	help
	  Enable searching based on file type (file,
	  directory, socket, device, etc.).

config FREETZ_BUSYBOX_FEATURE_FIND_XDEV
	bool "Enable -xdev: 'stay in filesystem'"
	default n
	depends on FREETZ_BUSYBOX_FIND

config FREETZ_BUSYBOX_FEATURE_FIND_MAXDEPTH
	bool "Enable -mindepth N and -maxdepth N"
	default n
	depends on FREETZ_BUSYBOX_FIND

config FREETZ_BUSYBOX_FEATURE_FIND_NEWER
	bool "Enable -newer: compare file modification times"
	default n
	depends on FREETZ_BUSYBOX_FIND
	help
	  Support the 'find -newer' option for finding any files which have
	  modification time that is more recent than the specified FILE.

config FREETZ_BUSYBOX_FEATURE_FIND_INUM
	bool "Enable -inum: inode number matching"
	default n
	depends on FREETZ_BUSYBOX_FIND

config FREETZ_BUSYBOX_FEATURE_FIND_EXEC
	bool "Enable -exec: execute commands"
	default n
	depends on FREETZ_BUSYBOX_FIND
	help
	  Support the 'find -exec' option for executing commands based upon
	  the files matched.

config FREETZ_BUSYBOX_FEATURE_FIND_EXEC_PLUS
	bool "Enable -exec ... {} +"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_FIND_EXEC
	help
	  Support the 'find -exec ... {} +' option for executing commands
	  for all matched files at once.
	  Without this option, -exec + is a synonym for -exec ;
	  (IOW: it works correctly, but without expected speedup)

config FREETZ_BUSYBOX_FEATURE_FIND_USER
	bool "Enable -user: username/uid matching"
	default n
	depends on FREETZ_BUSYBOX_FIND

config FREETZ_BUSYBOX_FEATURE_FIND_GROUP
	bool "Enable -group: group/gid matching"
	default n
	depends on FREETZ_BUSYBOX_FIND

config FREETZ_BUSYBOX_FEATURE_FIND_NOT
	bool "Enable the 'not' (!) operator"
	default n
	depends on FREETZ_BUSYBOX_FIND
	help
	  Support the '!' operator to invert the test results.
	  If 'Enable full-blown desktop' is enabled, then will also support
	  the non-POSIX notation '-not'.

config FREETZ_BUSYBOX_FEATURE_FIND_DEPTH
	bool "Enable -depth"
	default n
	depends on FREETZ_BUSYBOX_FIND
	help
	  Process each directory's contents before the directory itself.

config FREETZ_BUSYBOX_FEATURE_FIND_PAREN
	bool "Enable parens in options"
	default n
	depends on FREETZ_BUSYBOX_FIND
	help
	  Enable usage of parens '(' to specify logical order of arguments.

config FREETZ_BUSYBOX_FEATURE_FIND_SIZE
	bool "Enable -size: file size matching"
	default n
	depends on FREETZ_BUSYBOX_FIND

config FREETZ_BUSYBOX_FEATURE_FIND_PRUNE
	bool "Enable -prune: exclude subdirectories"
	default n
	depends on FREETZ_BUSYBOX_FIND
	help
	  If the file is a directory, don't descend into it. Useful for
	  exclusion .svn and CVS directories.

config FREETZ_BUSYBOX_FEATURE_FIND_DELETE
	bool "Enable -delete: delete files/dirs"
	default n
	depends on FREETZ_BUSYBOX_FIND && FREETZ_BUSYBOX_FEATURE_FIND_DEPTH
	help
	  Support the 'find -delete' option for deleting files and directories.
	  WARNING: This option can do much harm if used wrong. Busybox will not
	  try to protect the user from doing stupid things. Use with care.

config FREETZ_BUSYBOX_FEATURE_FIND_PATH
	bool "Enable -path: match pathname with shell pattern"
	default n
	depends on FREETZ_BUSYBOX_FIND
	help
	  The -path option matches whole pathname instead of just filename.

config FREETZ_BUSYBOX_FEATURE_FIND_REGEX
	bool "Enable -regex: match pathname with regex"
	default n
	depends on FREETZ_BUSYBOX_FIND
	help
	  The -regex option matches whole pathname against regular expression.

config FREETZ_BUSYBOX_FEATURE_FIND_CONTEXT
	bool "Enable -context: security context matching"
	default n
	depends on FREETZ_BUSYBOX_FIND && FREETZ_BUSYBOX_SELINUX
	help
	  Support the 'find -context' option for matching security context.

config FREETZ_BUSYBOX_FEATURE_FIND_LINKS
	bool "Enable -links: link count matching"
	default n
	depends on FREETZ_BUSYBOX_FIND
	help
	  Support the 'find -links' option for matching number of links.
config FREETZ_BUSYBOX_GREP
	bool "grep"
	default n
	help
	  grep is used to search files for a specified pattern.

config FREETZ_BUSYBOX_EGREP
	bool "egrep"
	default n
	help
	  Alias to "grep -E"

config FREETZ_BUSYBOX_FGREP
	bool "fgrep"
	default n
	help
	  Alias to "grep -F"

config FREETZ_BUSYBOX_FEATURE_GREP_CONTEXT
	bool "Enable before and after context flags (-A, -B and -C)"
	default n
	depends on FREETZ_BUSYBOX_GREP || FREETZ_BUSYBOX_EGREP || FREETZ_BUSYBOX_FGREP
	help
	  Print the specified number of leading (-B) and/or trailing (-A)
	  context surrounding our matching lines.
	  Print the specified number of context lines (-C).
config FREETZ_BUSYBOX_XARGS
	bool "xargs"
	default n
	help
	  xargs is used to execute a specified command for
	  every item from standard input.

config FREETZ_BUSYBOX_FEATURE_XARGS_SUPPORT_CONFIRMATION
	bool "Enable -p: prompt and confirmation"
	default n
	depends on FREETZ_BUSYBOX_XARGS
	help
	  Support -p: prompt the user whether to run each command
	  line and read a line from the terminal.

config FREETZ_BUSYBOX_FEATURE_XARGS_SUPPORT_QUOTES
	bool "Enable single and double quotes and backslash"
	default n
	depends on FREETZ_BUSYBOX_XARGS
	help
	  Support quoting in the input.

config FREETZ_BUSYBOX_FEATURE_XARGS_SUPPORT_TERMOPT
	bool "Enable -x: exit if -s or -n is exceeded"
	default n
	depends on FREETZ_BUSYBOX_XARGS
	help
	  Support -x: exit if the command size (see the -s or -n option)
	  is exceeded.

config FREETZ_BUSYBOX_FEATURE_XARGS_SUPPORT_ZERO_TERM
	bool "Enable -0: NUL-terminated input"
	default n
	depends on FREETZ_BUSYBOX_XARGS
	help
	  Support -0: input items are terminated by a NUL character
	  instead of whitespace, and the quotes and backslash
	  are not special.

config FREETZ_BUSYBOX_FEATURE_XARGS_SUPPORT_REPL_STR
	bool "Enable -I STR: string to replace"
	default n
	depends on FREETZ_BUSYBOX_XARGS
	help
	  Support -I STR and -i[STR] options.

endmenu

# INCLUDE_END findutils/Config.in
# INCLUDE_BEGIN init/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Init Utilities"

config FREETZ_BUSYBOX_BOOTCHARTD
	bool "bootchartd"
	default n
	help
	  bootchartd is commonly used to profile the boot process
	  for the purpose of speeding it up. In this case, it is started
	  by the kernel as the init process. This is configured by adding
	  the init=/sbin/bootchartd option to the kernel command line.

	  It can also be used to monitor the resource usage of a specific
	  application or the running system in general. In this case,
	  bootchartd is started interactively by running bootchartd start
	  and stopped using bootchartd stop.

config FREETZ_BUSYBOX_FEATURE_BOOTCHARTD_BLOATED_HEADER
	bool "Compatible, bloated header"
	default n
	depends on FREETZ_BUSYBOX_BOOTCHARTD
	help
	  Create extended header file compatible with "big" bootchartd.
	  "Big" bootchartd is a shell script and it dumps some
	  "convenient" info int the header, such as:
	    title = Boot chart for `hostname` (`date`)
	    system.uname = `uname -srvm`
	    system.release = `cat /etc/DISTRO-release`
	    system.cpu = `grep '^model name' /proc/cpuinfo | head -1` ($cpucount)
	    system.kernel.options = `cat /proc/cmdline`
	  This data is not mandatory for bootchart graph generation,
	  and is considered bloat. Nevertheless, this option
	  makes bootchartd applet to dump a subset of it.

config FREETZ_BUSYBOX_FEATURE_BOOTCHARTD_CONFIG_FILE
	bool "Support bootchartd.conf"
	default n
	depends on FREETZ_BUSYBOX_BOOTCHARTD
	help
	  Enable reading and parsing of $PWD/bootchartd.conf
	  and /etc/bootchartd.conf files.
config FREETZ_BUSYBOX_HALT
	bool "halt"
	default n
	help
	  Stop all processes and halt the system.

config FREETZ_BUSYBOX_POWEROFF
	bool "poweroff"
	default n
	help
	  Stop all processes and power off the system.

config FREETZ_BUSYBOX_REBOOT
	bool "reboot"
	default n
	help
	  Stop all processes and reboot the system.

config FREETZ_BUSYBOX_FEATURE_CALL_TELINIT
	bool "Call telinit on shutdown and reboot"
	default n
	depends on (FREETZ_BUSYBOX_HALT || FREETZ_BUSYBOX_POWEROFF || FREETZ_BUSYBOX_REBOOT) && !FREETZ_BUSYBOX_INIT
	help
	  Call an external program (normally telinit) to facilitate
	  a switch to a proper runlevel.

	  This option is only available if you selected halt and friends,
	  but did not select init.

config FREETZ_BUSYBOX_TELINIT_PATH
	string "Path to telinit executable"
	default "/sbin/telinit"
	depends on FREETZ_BUSYBOX_FEATURE_CALL_TELINIT
	help
	  When busybox halt and friends have to call external telinit
	  to facilitate proper shutdown, this path is to be used when
	  locating telinit executable.
config FREETZ_BUSYBOX_INIT
	bool "init"
	default n
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  init is the first program run when the system boots.

config FREETZ_BUSYBOX_LINUXRC
	bool "linuxrc: support running init from initrd (not initramfs)"
	default n
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  Legacy support for running init under the old-style initrd. Allows
	  the name linuxrc to act as init, and it doesn't assume init is PID 1.

	  This does not apply to initramfs, which runs /init as PID 1 and
	  requires no special support.

config FREETZ_BUSYBOX_FEATURE_USE_INITTAB
	bool "Support reading an inittab file"
	default n
	depends on FREETZ_BUSYBOX_INIT || FREETZ_BUSYBOX_LINUXRC
	help
	  Allow init to read an inittab file when the system boot.

config FREETZ_BUSYBOX_FEATURE_KILL_REMOVED
	bool "Support killing processes that have been removed from inittab"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_USE_INITTAB
	help
	  When respawn entries are removed from inittab and a SIGHUP is
	  sent to init, this option will make init kill the processes
	  that have been removed.

config FREETZ_BUSYBOX_FEATURE_KILL_DELAY
	int "How long to wait between TERM and KILL (0 - send TERM only)" if FREETZ_BUSYBOX_FEATURE_KILL_REMOVED
	range 0 1024
	default 0
	depends on FREETZ_BUSYBOX_FEATURE_KILL_REMOVED
	help
	  With nonzero setting, init sends TERM, forks, child waits N
	  seconds, sends KILL and exits. Setting it too high is unwise
	  (child will hang around for too long and could actually kill
	  the wrong process!)

config FREETZ_BUSYBOX_FEATURE_INIT_SCTTY
	bool "Run commands with leading dash with controlling tty"
	default n
	depends on FREETZ_BUSYBOX_INIT || FREETZ_BUSYBOX_LINUXRC
	help
	  If this option is enabled, init will try to give a controlling
	  tty to any command which has leading hyphen (often it's "-/bin/sh").
	  More precisely, init will do "ioctl(STDIN_FILENO, TIOCSCTTY, 0)".
	  If device attached to STDIN_FILENO can be a ctty but is not yet
	  a ctty for other session, it will become this process' ctty.
	  This is not the traditional init behavour, but is often what you want
	  in an embedded system where the console is only accessed during
	  development or for maintenance.
	  NB: using cttyhack applet may work better.

config FREETZ_BUSYBOX_FEATURE_INIT_SYSLOG
	bool "Enable init to write to syslog"
	default n
	depends on FREETZ_BUSYBOX_INIT || FREETZ_BUSYBOX_LINUXRC
	help
	  If selected, some init messages are sent to syslog.
	  Otherwise, they are sent to VT #5 if linux virtual tty is detected
	  (if not, no separate logging is done).

config FREETZ_BUSYBOX_FEATURE_INIT_QUIET
	bool "Be quiet on boot (no 'init started:' message)"
	default n
	depends on FREETZ_BUSYBOX_INIT || FREETZ_BUSYBOX_LINUXRC

config FREETZ_BUSYBOX_FEATURE_INIT_COREDUMPS
	bool "Support dumping core for child processes (debugging only)"
	default n	# not Y because this is a debug option
	depends on FREETZ_BUSYBOX_INIT || FREETZ_BUSYBOX_LINUXRC
	help
	  If this option is enabled and the file /.init_enable_core
	  exists, then init will call setrlimit() to allow unlimited
	  core file sizes. If this option is disabled, processes
	  will not generate any core files.

config FREETZ_BUSYBOX_INIT_TERMINAL_TYPE
	string "Initial terminal type"
	default "linux"
	depends on FREETZ_BUSYBOX_INIT || FREETZ_BUSYBOX_LINUXRC
	help
	  This is the initial value set by init for the TERM environment
	  variable. This variable is used by programs which make use of
	  extended terminal capabilities.

	  Note that on Linux, init attempts to detect serial terminal and
	  sets TERM to "vt102" if one is found.

config FREETZ_BUSYBOX_FEATURE_INIT_MODIFY_CMDLINE
	bool "Clear init's command line"
	default n
	depends on FREETZ_BUSYBOX_INIT || FREETZ_BUSYBOX_LINUXRC
	help
	  When launched as PID 1 and after parsing its arguments, init
	  wipes all the arguments but argv[0] and rewrites argv[0] to
	  contain only "init", so that its command line appears solely as
	  "init" in tools such as ps.
	  If this option is set to Y, init will keep its original behavior,
	  otherwise, all the arguments including argv[0] will be preserved,
	  be they parsed or ignored by init.
	  The original command-line used to launch init can then be
	  retrieved in /proc/1/cmdline on Linux, for example.

endmenu

# INCLUDE_END init/Config.in
# INCLUDE_BEGIN loginutils/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Login/Password Management Utilities"

config FREETZ_BUSYBOX_FEATURE_SHADOWPASSWDS
	bool "Support shadow passwords"
	default n
	help
	  Build support for shadow password in /etc/shadow. This file is only
	  readable by root and thus the encrypted passwords are no longer
	  publicly readable.

config FREETZ_BUSYBOX_USE_BB_PWD_GRP
	bool "Use internal password and group functions rather than system functions"
	default n
	help
	  If you leave this disabled, busybox will use the system's password
	  and group functions. And if you are using the GNU C library
	  (glibc), you will then need to install the /etc/nsswitch.conf
	  configuration file and the required /lib/libnss_* libraries in
	  order for the password and group functions to work. This generally
	  makes your embedded system quite a bit larger.

	  Enabling this option will cause busybox to directly access the
	  system's /etc/password, /etc/group files (and your system will be
	  smaller, and I will get fewer emails asking about how glibc NSS
	  works). When this option is enabled, you will not be able to use
	  PAM to access remote LDAP password servers and whatnot. And if you
	  want hostname resolution to work with glibc, you still need the
	  /lib/libnss_* libraries.

	  If you need to use glibc's nsswitch.conf mechanism
	  (e.g. if user/group database is NOT stored in /etc/passwd etc),
	  you must NOT use this option.

	  If you enable this option, it will add about 1.5k.

config FREETZ_BUSYBOX_USE_BB_SHADOW
	bool "Use internal shadow password functions"
	default n
	depends on FREETZ_BUSYBOX_USE_BB_PWD_GRP && FREETZ_BUSYBOX_FEATURE_SHADOWPASSWDS
	help
	  If you leave this disabled, busybox will use the system's shadow
	  password handling functions. And if you are using the GNU C library
	  (glibc), you will then need to install the /etc/nsswitch.conf
	  configuration file and the required /lib/libnss_* libraries in
	  order for the shadow password functions to work. This generally
	  makes your embedded system quite a bit larger.

	  Enabling this option will cause busybox to directly access the
	  system's /etc/shadow file when handling shadow passwords. This
	  makes your system smaller (and I will get fewer emails asking about
	  how glibc NSS works). When this option is enabled, you will not be
	  able to use PAM to access shadow passwords from remote LDAP
	  password servers and whatnot.

config FREETZ_BUSYBOX_USE_BB_CRYPT
	bool "Use internal crypt functions"
	default n
	help
	  Busybox has internal DES and MD5 crypt functions.
	  They produce results which are identical to corresponding
	  standard C library functions.

	  If you leave this disabled, busybox will use the system's
	  crypt functions. Most C libraries use large (~70k)
	  static buffers there, and also combine them with more general
	  DES encryption/decryption.

	  For busybox, having large static buffers is undesirable,
	  especially on NOMMU machines. Busybox also doesn't need
	  DES encryption/decryption and can do with smaller code.

	  If you enable this option, it will add about 4.8k of code
	  if you are building dynamically linked executable.
	  In static build, it makes code _smaller_ by about 1.2k,
	  and likely many kilobytes less of bss.

config FREETZ_BUSYBOX_USE_BB_CRYPT_SHA
	bool "Enable SHA256/512 crypt functions"
	default n
	depends on FREETZ_BUSYBOX_USE_BB_CRYPT
	help
	  Enable this if you have passwords starting with "$5$" or "$6$"
	  in your /etc/passwd or /etc/shadow files. These passwords
	  are hashed using SHA256 and SHA512 algorithms. Support for them
	  was added to glibc in 2008.
	  With this option off, login will fail password check for any
	  user which has password encrypted with these algorithms.

config FREETZ_BUSYBOX_ADDGROUP
	bool "addgroup"
	default n
	help
	  Utility for creating a new group account.

config FREETZ_BUSYBOX_FEATURE_ADDGROUP_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_ADDGROUP && FREETZ_BUSYBOX_LONG_OPTS

config FREETZ_BUSYBOX_FEATURE_ADDUSER_TO_GROUP
	bool "Support adding users to groups"
	default n
	depends on FREETZ_BUSYBOX_ADDGROUP
	help
	  If called with two non-option arguments,
	  addgroup will add an existing user to an
	  existing group.
config FREETZ_BUSYBOX_ADD_SHELL
       bool "add-shell"
       default n if FREETZ_BUSYBOX_DESKTOP
       help
         Add shells to /etc/shells.

config FREETZ_BUSYBOX_REMOVE_SHELL
       bool "remove-shell"
       default n if FREETZ_BUSYBOX_DESKTOP
       help
         Remove shells from /etc/shells.
config FREETZ_BUSYBOX_ADDUSER
	bool "adduser"
	default n
	help
	  Utility for creating a new user account.

config FREETZ_BUSYBOX_FEATURE_ADDUSER_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_ADDUSER && FREETZ_BUSYBOX_LONG_OPTS

config FREETZ_BUSYBOX_FEATURE_CHECK_NAMES
	bool "Enable sanity check on user/group names in adduser and addgroup"
	default n
	depends on FREETZ_BUSYBOX_ADDUSER || FREETZ_BUSYBOX_ADDGROUP
	help
	  Enable sanity check on user and group names in adduser and addgroup.
	  To avoid problems, the user or group name should consist only of
	  letters, digits, underscores, periods, at signs and dashes,
	  and not start with a dash (as defined by IEEE Std 1003.1-2001).
	  For compatibility with Samba machine accounts "$" is also supported
	  at the end of the user or group name.

config FREETZ_BUSYBOX_LAST_ID
	int "Last valid uid or gid for adduser and addgroup"
	depends on FREETZ_BUSYBOX_ADDUSER || FREETZ_BUSYBOX_ADDGROUP
	default 60000
	help
	  Last valid uid or gid for adduser and addgroup

config FREETZ_BUSYBOX_FIRST_SYSTEM_ID
	int "First valid system uid or gid for adduser and addgroup"
	depends on FREETZ_BUSYBOX_ADDUSER || FREETZ_BUSYBOX_ADDGROUP
	range 0 FREETZ_BUSYBOX_LAST_ID
	default 100
	help
	  First valid system uid or gid for adduser and addgroup

config FREETZ_BUSYBOX_LAST_SYSTEM_ID
	int "Last valid system uid or gid for adduser and addgroup"
	depends on FREETZ_BUSYBOX_ADDUSER || FREETZ_BUSYBOX_ADDGROUP
	range FREETZ_BUSYBOX_FIRST_SYSTEM_ID FREETZ_BUSYBOX_LAST_ID
	default 999
	help
	  Last valid system uid or gid for adduser and addgroup
config FREETZ_BUSYBOX_CHPASSWD
	bool "chpasswd"
	default n
	help
	  Reads a file of user name and password pairs from standard input
	  and uses this information to update a group of existing users.

config FREETZ_BUSYBOX_FEATURE_DEFAULT_PASSWD_ALGO
	string "Default encryption method (passwd -a, cryptpw -m, chpasswd -c ALG)"
	default "des"
	depends on FREETZ_BUSYBOX_PASSWD || FREETZ_BUSYBOX_CRYPTPW || FREETZ_BUSYBOX_CHPASSWD
	help
	  Possible choices are "d[es]", "m[d5]", "s[ha256]" or "sha512".
config FREETZ_BUSYBOX_CRYPTPW
	bool "cryptpw"
	default n
	help
	  Encrypts the given password with the crypt(3) libc function
	  using the given salt.

config FREETZ_BUSYBOX_MKPASSWD
	bool "mkpasswd"
	default n
	help
	  Encrypts the given password with the crypt(3) libc function
	  using the given salt. Debian has this utility under mkpasswd
	  name. Busybox provides mkpasswd as an alias for cryptpw.
config FREETZ_BUSYBOX_DELUSER
	bool "deluser"
	default n
	help
	  Utility for deleting a user account.

config FREETZ_BUSYBOX_DELGROUP
	bool "delgroup"
	default n
	help
	  Utility for deleting a group account.

config FREETZ_BUSYBOX_FEATURE_DEL_USER_FROM_GROUP
	bool "Support removing users from groups"
	default n
	depends on FREETZ_BUSYBOX_DELGROUP
	help
	  If called with two non-option arguments, deluser
	  or delgroup will remove an user from a specified group.
config FREETZ_BUSYBOX_GETTY
	bool "getty"
	default n
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  getty lets you log in on a tty. It is normally invoked by init.

	  Note that you can save a few bytes by disabling it and
	  using login applet directly.
	  If you need to reset tty attributes before calling login,
	  this script approximates getty:

	  exec </dev/$1 >/dev/$1 2>&1 || exit 1
	  reset
	  stty sane; stty ispeed 38400; stty ospeed 38400
	  printf "%s login: " "`hostname`"
	  read -r login
	  exec /bin/login "$login"
config FREETZ_BUSYBOX_LOGIN
	bool "login"
	default n
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  login is used when signing onto a system.

	  Note that Busybox binary must be setuid root for this applet to
	  work properly.

config FREETZ_BUSYBOX_LOGIN_SESSION_AS_CHILD
	bool "Run logged in session in a child process"
	default n if FREETZ_BUSYBOX_PAM
	depends on FREETZ_BUSYBOX_LOGIN
	help
	  Run the logged in session in a child process.  This allows
	  login to clean up things such as utmp entries or PAM sessions
	  when the login session is complete.  If you use PAM, you
	  almost always would want this to be set to Y, else PAM session
	  will not be cleaned up.

config FREETZ_BUSYBOX_LOGIN_SCRIPTS
	bool "Support login scripts"
	depends on FREETZ_BUSYBOX_LOGIN
	default n
	help
	  Enable this if you want login to execute $LOGIN_PRE_SUID_SCRIPT
	  just prior to switching from root to logged-in user.

config FREETZ_BUSYBOX_FEATURE_NOLOGIN
	bool "Support /etc/nologin"
	default n
	depends on FREETZ_BUSYBOX_LOGIN
	help
	  The file /etc/nologin is used by (some versions of) login(1).
	  If it exists, non-root logins are prohibited.

config FREETZ_BUSYBOX_FEATURE_SECURETTY
	bool "Support /etc/securetty"
	default n
	depends on FREETZ_BUSYBOX_LOGIN
	help
	  The file /etc/securetty is used by (some versions of) login(1).
	  The file contains the device names of tty lines (one per line,
	  without leading /dev/) on which root is allowed to login.
config FREETZ_BUSYBOX_PASSWD
	bool "passwd"
	default n
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  passwd changes passwords for user and group accounts. A normal user
	  may only change the password for his/her own account, the super user
	  may change the password for any account. The administrator of a group
	  may change the password for the group.

	  Note that Busybox binary must be setuid root for this applet to
	  work properly.

config FREETZ_BUSYBOX_FEATURE_PASSWD_WEAK_CHECK
	bool "Check new passwords for weakness"
	default n
	depends on FREETZ_BUSYBOX_PASSWD
	help
	  With this option passwd will refuse new passwords which are "weak".
config FREETZ_BUSYBOX_SU
	bool "su"
	default n
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  su is used to become another user during a login session.
	  Invoked without a username, su defaults to becoming the super user.
	  Note that busybox binary must be setuid root for this applet to
	  work properly.

config FREETZ_BUSYBOX_FEATURE_SU_SYSLOG
	bool "Log to syslog all attempts to use su"
	default n
	depends on FREETZ_BUSYBOX_SU

config FREETZ_BUSYBOX_FEATURE_SU_CHECKS_SHELLS
	bool "If user's shell is not in /etc/shells, disallow -s PROG"
	default n
	depends on FREETZ_BUSYBOX_SU

config FREETZ_BUSYBOX_FEATURE_SU_BLANK_PW_NEEDS_SECURE_TTY
	bool "Allow blank passwords only on TTYs in /etc/securetty"
	default n
	depends on FREETZ_BUSYBOX_SU
config FREETZ_BUSYBOX_SULOGIN
	bool "sulogin"
	default n
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  sulogin is invoked when the system goes into single user
	  mode (this is done through an entry in inittab).
config FREETZ_BUSYBOX_VLOCK
	bool "vlock"
	default n
	help
	  Build the "vlock" applet which allows you to lock (virtual) terminals.

	  Note that Busybox binary must be setuid root for this applet to
	  work properly.

endmenu

# INCLUDE_END loginutils/Config.in
# INCLUDE_BEGIN e2fsprogs/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Linux Ext2 FS Progs"

config FREETZ_BUSYBOX_CHATTR
	bool "chattr"
	default n
	help
	  chattr changes the file attributes on a second extended file system.
config FREETZ_BUSYBOX_FSCK
	bool "fsck"
	default n
	help
	  fsck is used to check and optionally repair one or more filesystems.
	  In actuality, fsck is simply a front-end for the various file system
	  checkers (fsck.fstype) available under Linux.
config FREETZ_BUSYBOX_LSATTR
	bool "lsattr"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  lsattr lists the file attributes on a second extended file system.
config FREETZ_BUSYBOX_TUNE2FS
	bool "tune2fs"
	default n  # off: it is too limited compared to upstream version
	help
	  tune2fs allows the system administrator to adjust various tunable
	  filesystem parameters on Linux ext2/ext3 filesystems.

### config E2FSCK
###	bool "e2fsck"
###	default n
###	help
###	  e2fsck is used to check Linux second extended file systems (ext2fs).
###	  e2fsck also supports ext2 filesystems countaining a journal (ext3).
###	  The normal compat symlinks 'fsck.ext2' and 'fsck.ext3' are also
###	  provided.

### config FREETZ_BUSYBOX_MKE2FS
###	bool "mke2fs"
###	default n
###	help
###	  mke2fs is used to create an ext2/ext3 filesystem. The normal compat
###	  symlinks 'mkfs.ext2' and 'mkfs.ext3' are also provided.

### config E2LABEL
###	bool "e2label"
###	default n
###	depends on FREETZ_BUSYBOX_TUNE2FS
###	help
###	  e2label will display or change the filesystem label on the ext2
###	  filesystem located on device.

### NB: this one is now provided by util-linux/volume_id/*
### config FREETZ_BUSYBOX_FINDFS
###	bool "findfs"
###	default n
###	depends on FREETZ_BUSYBOX_TUNE2FS
###	help
###	  findfs will search the disks in the system looking for a filesystem
###	  which has a label matching label or a UUID equal to uuid.

endmenu

# INCLUDE_END e2fsprogs/Config.in
# INCLUDE_BEGIN modutils/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Linux Module Utilities"

config FREETZ_BUSYBOX_MODPROBE_SMALL
	bool "Simplified modutils"
	default n
	help
	  Build smaller (~1.5 kbytes), simplified module tools.

	  This option by itself does not enable any applets -
	  you need to select applets individually below.

	  With this option modprobe does not require modules.dep file
	  and does not use /etc/modules.conf file.
	  It scans module files in /lib/modules/`uname -r` and
	  determines dependencies and module alias names on the fly.
	  This may make module loading slower, most notably
	  when one needs to load module by alias (this requires
	  scanning through module _bodies_).

	  At the first attempt to load a module by alias modprobe
	  will try to generate modules.dep.bb file in order to speed up
	  future loads by alias. Failure to do so (read-only /lib/modules,
	  etc) is not reported, and future modprobes will be slow too.

	  NB: modules.dep.bb file format is not compatible
	  with modules.dep file as created/used by standard module tools.

	  Additional module parameters can be stored in
	  /etc/modules/$module_name files.

config FREETZ_BUSYBOX_DEPMOD
	bool "depmod"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  depmod generates modules.dep (and potentially modules.alias
	  and modules.symbols) that contain dependency information
	  for modprobe.
config FREETZ_BUSYBOX_INSMOD
	bool "insmod"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  insmod is used to load specified modules in the running kernel.
config FREETZ_BUSYBOX_LSMOD
	bool "lsmod"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  lsmod is used to display a list of loaded modules.

config FREETZ_BUSYBOX_FEATURE_LSMOD_PRETTY_2_6_OUTPUT
	bool "Pretty output"
	default n
	depends on FREETZ_BUSYBOX_LSMOD && !FREETZ_BUSYBOX_MODPROBE_SMALL
	help
	  This option makes output format of lsmod adjusted to
	  the format of module-init-tools for Linux kernel 2.6.
	  Increases size somewhat.
config FREETZ_BUSYBOX_MODINFO
	bool "modinfo"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Show information about a Linux Kernel module
config FREETZ_BUSYBOX_MODPROBE
	bool "modprobe"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Handle the loading of modules, and their dependencies on a high
	  level.

config FREETZ_BUSYBOX_FEATURE_MODPROBE_BLACKLIST
	bool "Blacklist support"
	default n
	depends on FREETZ_BUSYBOX_MODPROBE && !FREETZ_BUSYBOX_MODPROBE_SMALL
	help
	  Say 'y' here to enable support for the 'blacklist' command in
	  modprobe.conf. This prevents the alias resolver to resolve
	  blacklisted modules. This is useful if you want to prevent your
	  hardware autodetection scripts to load modules like evdev, frame
	  buffer drivers etc.
config FREETZ_BUSYBOX_RMMOD
	bool "rmmod"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  rmmod is used to unload specified modules from the kernel.

comment "Options common to multiple modutils"

config FREETZ_BUSYBOX_FEATURE_CMDLINE_MODULE_OPTIONS
	bool "Accept module options on modprobe command line"
	default n
	depends on FREETZ_BUSYBOX_INSMOD || FREETZ_BUSYBOX_MODPROBE
	help
	  Allow insmod and modprobe take module options from the applets'
	  command line.

config FREETZ_BUSYBOX_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED
	bool "Skip loading of already loaded modules"
	default n
	depends on FREETZ_BUSYBOX_MODPROBE_SMALL && (FREETZ_BUSYBOX_DEPMOD || FREETZ_BUSYBOX_INSMOD || FREETZ_BUSYBOX_MODPROBE)
	help
	  Check if the module is already loaded.

config FREETZ_BUSYBOX_FEATURE_2_4_MODULES
	bool "Support version 2.2/2.4 Linux kernels"
	default n
	depends on (FREETZ_BUSYBOX_INSMOD || FREETZ_BUSYBOX_LSMOD || FREETZ_BUSYBOX_MODPROBE || FREETZ_BUSYBOX_RMMOD) && !FREETZ_BUSYBOX_MODPROBE_SMALL
	help
	  Support module loading for 2.2.x and 2.4.x Linux kernels.
	  This increases size considerably. Say N unless you plan
	  to run ancient kernels.

config FREETZ_BUSYBOX_FEATURE_INSMOD_VERSION_CHECKING
	bool "Enable module version checking"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_2_4_MODULES && (FREETZ_BUSYBOX_INSMOD || FREETZ_BUSYBOX_MODPROBE)
	help
	  Support checking of versions for modules. This is used to
	  ensure that the kernel and module are made for each other.

config FREETZ_BUSYBOX_FEATURE_INSMOD_KSYMOOPS_SYMBOLS
	bool "Add module symbols to kernel symbol table"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_2_4_MODULES && (FREETZ_BUSYBOX_INSMOD || FREETZ_BUSYBOX_MODPROBE)
	help
	  By adding module symbols to the kernel symbol table, Oops messages
	  occurring within kernel modules can be properly debugged. By enabling
	  this feature, module symbols will always be added to the kernel symbol
	  table for proper debugging support. If you are not interested in
	  Oops messages from kernel modules, say N.

config FREETZ_BUSYBOX_FEATURE_INSMOD_LOADINKMEM
	bool "In kernel memory optimization (uClinux only)"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_2_4_MODULES && (FREETZ_BUSYBOX_INSMOD || FREETZ_BUSYBOX_MODPROBE)
	help
	  This is a special uClinux only memory optimization that lets insmod
	  load the specified kernel module directly into kernel space, reducing
	  memory usage by preventing the need for two copies of the module
	  being loaded into memory.

config FREETZ_BUSYBOX_FEATURE_INSMOD_LOAD_MAP
	bool "Enable insmod load map (-m) option"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_2_4_MODULES && FREETZ_BUSYBOX_INSMOD
	help
	  Enabling this, one would be able to get a load map
	  output on stdout. This makes kernel module debugging
	  easier.
	  If you don't plan to debug kernel modules, you
	  don't need this option.

config FREETZ_BUSYBOX_FEATURE_INSMOD_LOAD_MAP_FULL
	bool "Symbols in load map"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_INSMOD_LOAD_MAP
	help
	  Without this option, -m will only output section
	  load map. With this option, -m will also output
	  symbols load map.

config FREETZ_BUSYBOX_FEATURE_CHECK_TAINTED_MODULE
	bool "Support tainted module checking with new kernels"
	default n
	depends on (FREETZ_BUSYBOX_LSMOD || FREETZ_BUSYBOX_FEATURE_2_4_MODULES) && !FREETZ_BUSYBOX_MODPROBE_SMALL
	help
	  Support checking for tainted modules. These are usually binary
	  only modules that will make the linux-kernel list ignore your
	  support request.
	  This option is required to support GPLONLY modules.

config FREETZ_BUSYBOX_FEATURE_INSMOD_TRY_MMAP
	bool "Try to load module from a mmap'ed area"
	default n
	depends on (FREETZ_BUSYBOX_INSMOD || FREETZ_BUSYBOX_MODPROBE) && !FREETZ_BUSYBOX_MODPROBE_SMALL
	help
	  This option causes module loading code to try to mmap
	  module first. If it does not work (for example,
	  it does not work for compressed modules), module will be read
	  (and unpacked if needed) into a memory block allocated by malloc.

	  The only case when mmap works but malloc does not is when
	  you are trying to load a big module on a very memory-constrained
	  machine. Malloc will momentarily need 2x as much memory as mmap.

	  Choosing N saves about 250 bytes of code (on 32-bit x86).

config FREETZ_BUSYBOX_FEATURE_MODUTILS_ALIAS
	bool "Support module.aliases file"
	default n
	depends on (FREETZ_BUSYBOX_DEPMOD || FREETZ_BUSYBOX_MODPROBE) && !FREETZ_BUSYBOX_MODPROBE_SMALL
	help
	  Generate and parse modules.alias containing aliases for bus
	  identifiers:
	    alias pcmcia:m*c*f03fn*pfn*pa*pb*pc*pd* parport_cs

	  and aliases for logical modules names e.g.:
	    alias padlock_aes aes
	    alias aes_i586 aes
	    alias aes_generic aes

	  Say Y if unsure.

config FREETZ_BUSYBOX_FEATURE_MODUTILS_SYMBOLS
	bool "Support module.symbols file"
	default n
	depends on (FREETZ_BUSYBOX_DEPMOD || FREETZ_BUSYBOX_MODPROBE) && !FREETZ_BUSYBOX_MODPROBE_SMALL
	help
	  Generate and parse modules.symbols containing aliases for
	  symbol_request() kernel calls, such as:
	    alias symbol:usb_sg_init usbcore

	  Say Y if unsure.

config FREETZ_BUSYBOX_DEFAULT_MODULES_DIR
	string "Default directory containing modules"
	default "/lib/modules"
	depends on FREETZ_BUSYBOX_DEPMOD || FREETZ_BUSYBOX_MODPROBE || FREETZ_BUSYBOX_MODINFO
	help
	  Directory that contains kernel modules.
	  Defaults to "/lib/modules"

config FREETZ_BUSYBOX_DEFAULT_DEPMOD_FILE
	string "Default name of modules.dep"
	default "modules.dep"
	depends on FREETZ_BUSYBOX_DEPMOD || FREETZ_BUSYBOX_MODPROBE || FREETZ_BUSYBOX_MODINFO
	help
	  Filename that contains kernel modules dependencies.
	  Defaults to "modules.dep".
	  If you configured the "simplified modutils" (MODPROBE_SMALL), a
	  ".bb" suffix will be added after this name. Do not specify ".bb"
	  here unless you intend your depmod or modprobe to work on
	  "modules.dep.bb.bb" or such.

endmenu

# INCLUDE_END modutils/Config.in
# INCLUDE_BEGIN util-linux/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Linux System Utilities"

config FREETZ_BUSYBOX_ACPID
	bool "acpid"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  acpid listens to ACPI events coming either in textual form from
	  /proc/acpi/event (though it is marked deprecated it is still widely
	  used and _is_ a standard) or in binary form from specified evdevs
	  (just use /dev/input/event*).

	  It parses the event to retrieve ACTION and a possible PARAMETER.
	  It then spawns /etc/acpi/<ACTION>[/<PARAMETER>] either via run-parts
	  (if the resulting path is a directory) or directly as an executable.

	  N.B. acpid relies on run-parts so have the latter installed.

config FREETZ_BUSYBOX_FEATURE_ACPID_COMPAT
	bool "Accept and ignore redundant options"
	default n
	depends on FREETZ_BUSYBOX_ACPID
	help
	  Accept and ignore compatibility options -g -m -s -S -v.
config FREETZ_BUSYBOX_BLKDISCARD
	bool "blkdiscard"
	default n
	help
	  blkdiscard discards sectors on a given device.
config FREETZ_BUSYBOX_BLKID
	bool "blkid"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	select FREETZ_BUSYBOX_VOLUMEID
	help
	  Lists labels and UUIDs of all filesystems.
	  WARNING:
	  With all submodules selected, it will add ~8k to busybox.

config FREETZ_BUSYBOX_FEATURE_BLKID_TYPE
	bool "Print filesystem type"
	default n
	depends on FREETZ_BUSYBOX_BLKID
	help
	  Show TYPE="filesystem type"
config FREETZ_BUSYBOX_BLOCKDEV
	bool "blockdev"
	default n
	help
	  Performs some ioctls with block devices.
config FREETZ_BUSYBOX_CAL
	bool "cal"
	default n
	help
	  cal is used to display a monthly calendar.
config FREETZ_BUSYBOX_CHRT
	bool "chrt"
	default n
	help
	  manipulate real-time attributes of a process.
	  This requires sched_{g,s}etparam support in your libc.
config FREETZ_BUSYBOX_DMESG
	bool "dmesg"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  dmesg is used to examine or control the kernel ring buffer. When the
	  Linux kernel prints messages to the system log, they are stored in
	  the kernel ring buffer. You can use dmesg to print the kernel's ring
	  buffer, clear the kernel ring buffer, change the size of the kernel
	  ring buffer, and change the priority level at which kernel messages
	  are also logged to the system console. Enable this option if you
	  wish to enable the 'dmesg' utility.

config FREETZ_BUSYBOX_FEATURE_DMESG_PRETTY
	bool "Pretty output"
	default n
	depends on FREETZ_BUSYBOX_DMESG
	help
	  If you wish to scrub the syslog level from the output, say 'Y' here.
	  The syslog level is a string prefixed to every line with the form
	  "<#>".

	  With this option you will see:
	    # dmesg
	    Linux version 2.6.17.4 .....
	    BIOS-provided physical RAM map:
	     BIOS-e820: 0000000000000000 - 000000000009f000 (usable)

	  Without this option you will see:
	    # dmesg
	    <5>Linux version 2.6.17.4 .....
	    <6>BIOS-provided physical RAM map:
	    <6> BIOS-e820: 0000000000000000 - 000000000009f000 (usable)
config FREETZ_BUSYBOX_EJECT
	bool "eject"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Used to eject cdroms. (defaults to /dev/cdrom)

config FREETZ_BUSYBOX_FEATURE_EJECT_SCSI
	bool "SCSI support"
	default n
	depends on FREETZ_BUSYBOX_EJECT
	help
	  Add the -s option to eject, this allows to eject SCSI-Devices and
	  usb-storage devices.
config FREETZ_BUSYBOX_FALLOCATE
	bool "fallocate"
	default n
	depends on FREETZ_TARGET_UCLIBC_0_9_33
	help
	  Preallocate space for files.
config FREETZ_BUSYBOX_FATATTR
	bool "fatattr"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  fatattr lists or changes the file attributes on a fat file system.
config FREETZ_BUSYBOX_FBSET
	bool "fbset"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  fbset is used to show or change the settings of a Linux frame buffer
	  device. The frame buffer device provides a simple and unique
	  interface to access a graphics display. Enable this option
	  if you wish to enable the 'fbset' utility.

config FREETZ_BUSYBOX_FEATURE_FBSET_FANCY
	bool "Enable extra options"
	default n
	depends on FREETZ_BUSYBOX_FBSET
	help
	  This option enables extended fbset options, allowing one to set the
	  framebuffer size, color depth, etc. interface to access a graphics
	  display. Enable this option if you wish to enable extended fbset
	  options.

config FREETZ_BUSYBOX_FEATURE_FBSET_READMODE
	bool "Enable readmode support"
	default n
	depends on FREETZ_BUSYBOX_FBSET
	help
	  This option allows fbset to read the video mode database stored by
	  default as /etc/fb.modes, which can be used to set frame buffer
	  device to pre-defined video modes.
config FREETZ_BUSYBOX_FDFORMAT
	bool "fdformat"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  fdformat is used to low-level format a floppy disk.
config FREETZ_BUSYBOX_FDISK
	bool "fdisk"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  The fdisk utility is used to divide hard disks into one or more
	  logical disks, which are generally called partitions. This utility
	  can be used to list and edit the set of partitions or BSD style
	  'disk slices' that are defined on a hard drive.

config FREETZ_BUSYBOX_FDISK_SUPPORT_LARGE_DISKS
	bool "Support over 4GB disks"
	default n
	depends on FREETZ_BUSYBOX_FDISK
	depends on !FREETZ_BUSYBOX_LFS   # with FREETZ_BUSYBOX_LFS no special code is needed

config FREETZ_BUSYBOX_FEATURE_FDISK_WRITABLE
	bool "Write support"
	default n
	depends on FREETZ_BUSYBOX_FDISK
	help
	  Enabling this option allows you to create or change a partition table
	  and write those changes out to disk. If you leave this option
	  disabled, you will only be able to view the partition table.

config FREETZ_BUSYBOX_FEATURE_AIX_LABEL
	bool "Support AIX disklabels"
	default n
	depends on FREETZ_BUSYBOX_FDISK && FREETZ_BUSYBOX_FEATURE_FDISK_WRITABLE
	help
	  Enabling this option allows you to create or change AIX disklabels.
	  Most people can safely leave this option disabled.

config FREETZ_BUSYBOX_FEATURE_SGI_LABEL
	bool "Support SGI disklabels"
	default n
	depends on FREETZ_BUSYBOX_FDISK && FREETZ_BUSYBOX_FEATURE_FDISK_WRITABLE
	help
	  Enabling this option allows you to create or change SGI disklabels.
	  Most people can safely leave this option disabled.

config FREETZ_BUSYBOX_FEATURE_SUN_LABEL
	bool "Support SUN disklabels"
	default n
	depends on FREETZ_BUSYBOX_FDISK && FREETZ_BUSYBOX_FEATURE_FDISK_WRITABLE
	help
	  Enabling this option allows you to create or change SUN disklabels.
	  Most people can safely leave this option disabled.

config FREETZ_BUSYBOX_FEATURE_OSF_LABEL
	bool "Support BSD disklabels"
	default n
	depends on FREETZ_BUSYBOX_FDISK && FREETZ_BUSYBOX_FEATURE_FDISK_WRITABLE
	help
	  Enabling this option allows you to create or change BSD disklabels
	  and define and edit BSD disk slices.

config FREETZ_BUSYBOX_FEATURE_GPT_LABEL
	bool "Support GPT disklabels"
	default n
	depends on FREETZ_BUSYBOX_FDISK && FREETZ_BUSYBOX_FEATURE_FDISK_WRITABLE
	help
	  Enabling this option allows you to view GUID Partition Table
	  disklabels.

config FREETZ_BUSYBOX_FEATURE_FDISK_ADVANCED
	bool "Support expert mode"
	default n
	depends on FREETZ_BUSYBOX_FDISK && FREETZ_BUSYBOX_FEATURE_FDISK_WRITABLE
	help
	  Enabling this option allows you to do terribly unsafe things like
	  define arbitrary drive geometry, move the beginning of data in a
	  partition, and similarly evil things. Unless you have a very good
	  reason you would be wise to leave this disabled.
config FREETZ_BUSYBOX_FINDFS
	bool "findfs"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	select FREETZ_BUSYBOX_VOLUMEID
	help
	  Prints the name of a filesystem with given label or UUID.
	  WARNING:
	  With all submodules selected, it will add ~8k to busybox.
config FREETZ_BUSYBOX_FLOCK
	bool "flock"
	default n
	help
	  Manage locks from shell scripts
config FREETZ_BUSYBOX_FDFLUSH
	bool "fdflush"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  fdflush is only needed when changing media on slightly-broken
	  removable media drives. It is used to make Linux believe that a
	  hardware disk-change switch has been actuated, which causes Linux to
	  forget anything it has cached from the previous media. If you have
	  such a slightly-broken drive, you will need to run fdflush every time
	  you change a disk. Most people have working hardware and can safely
	  leave this disabled.

config FREETZ_BUSYBOX_FREERAMDISK
	bool "freeramdisk"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Linux allows you to create ramdisks. This utility allows you to
	  delete them and completely free all memory that was used for the
	  ramdisk. For example, if you boot Linux into a ramdisk and later
	  pivot_root, you may want to free the memory that is allocated to the
	  ramdisk. If you have no use for freeing memory from a ramdisk, leave
	  this disabled.
config FREETZ_BUSYBOX_FSCK_MINIX
	bool "fsck_minix"
	default n
	help
	  The minix filesystem is a nice, small, compact, read-write filesystem
	  with little overhead. It is not a journaling filesystem however and
	  can experience corruption if it is not properly unmounted or if the
	  power goes off in the middle of a write. This utility allows you to
	  check for and attempt to repair any corruption that occurs to a minix
	  filesystem.
config FREETZ_BUSYBOX_FSFREEZE
	bool "fsfreeze"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	select FREETZ_BUSYBOX_LONG_OPTS
	help
	  Halt new accesses and flush writes on a mounted filesystem.
config FREETZ_BUSYBOX_FSTRIM
	bool "fstrim"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Discard unused blocks on a mounted filesystem.
config FREETZ_BUSYBOX_GETOPT
	bool "getopt"
	default n
	help
	  The getopt utility is used to break up (parse) options in command
	  lines to make it easy to write complex shell scripts that also check
	  for legal (and illegal) options. If you want to write horribly
	  complex shell scripts, or use some horribly complex shell script
	  written by others, this utility may be for you. Most people will
	  wisely leave this disabled.

config FREETZ_BUSYBOX_FEATURE_GETOPT_LONG
	bool "Support option -l"
	default n if FREETZ_BUSYBOX_LONG_OPTS
	depends on FREETZ_BUSYBOX_GETOPT
	help
	  Enable support for long options (option -l).
config FREETZ_BUSYBOX_HEXDUMP
	bool "hexdump"
	default n
	help
	  The hexdump utility is used to display binary data in a readable
	  way that is comparable to the output from most hex editors.

config FREETZ_BUSYBOX_FEATURE_HEXDUMP_REVERSE
	bool "Support -R, reverse of 'hexdump -Cv'"
	default n
	depends on FREETZ_BUSYBOX_HEXDUMP
	help
	  The hexdump utility is used to display binary data in an ascii
	  readable way. This option creates binary data from an ascii input.
	  NB: this option is non-standard. It's unwise to use it in scripts
	  aimed to be portable.

config FREETZ_BUSYBOX_HD
	bool "hd"
	default n
	help
	  hd is an alias to hexdump -C.
config FREETZ_BUSYBOX_XXD
	bool "xxd"
	default n
	help
	  The xxd utility is used to display binary data in a readable
	  way that is comparable to the output from most hex editors.
config FREETZ_BUSYBOX_HWCLOCK
	bool "hwclock"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  The hwclock utility is used to read and set the hardware clock
	  on a system. This is primarily used to set the current time on
	  shutdown in the hardware clock, so the hardware will keep the
	  correct time when Linux is _not_ running.

config FREETZ_BUSYBOX_FEATURE_HWCLOCK_LONG_OPTIONS
	bool "Support long options (--hctosys,...)"
	default n
	depends on FREETZ_BUSYBOX_HWCLOCK && FREETZ_BUSYBOX_LONG_OPTS

config FREETZ_BUSYBOX_FEATURE_HWCLOCK_ADJTIME_FHS
	bool "Use FHS /var/lib/hwclock/adjtime"
	default n  # util-linux-ng in Fedora 13 still uses /etc/adjtime
	depends on FREETZ_BUSYBOX_HWCLOCK
	help
	  Starting with FHS 2.3, the adjtime state file is supposed to exist
	  at /var/lib/hwclock/adjtime instead of /etc/adjtime. If you wish
	  to use the FHS behavior, answer Y here, otherwise answer N for the
	  classic /etc/adjtime path.

	  pathname.com/fhs/pub/fhs-2.3.html#VARLIBHWCLOCKSTATEDIRECTORYFORHWCLO
config FREETZ_BUSYBOX_IONICE
	bool "ionice"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Set/set program io scheduling class and priority
	  Requires kernel >= 2.6.13
config FREETZ_BUSYBOX_IPCRM
	bool "ipcrm"
	default n
	help
	  The ipcrm utility allows the removal of System V interprocess
	  communication (IPC) objects and the associated data structures
	  from the system.
config FREETZ_BUSYBOX_IPCS
	bool "ipcs"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  The ipcs utility is used to provide information on the currently
	  allocated System V interprocess (IPC) objects in the system.
config FREETZ_BUSYBOX_LAST
	bool "last"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_WTMP
	help
	  'last' displays a list of the last users that logged into the system.

config FREETZ_BUSYBOX_FEATURE_LAST_FANCY
	bool "Output extra information"
	default n
	depends on FREETZ_BUSYBOX_LAST
	help
	  'last' displays detailed information about the last users that
	  logged into the system (mimics sysvinit last). +900 bytes.
config FREETZ_BUSYBOX_LOSETUP
	bool "losetup"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  losetup is used to associate or detach a loop device with a regular
	  file or block device, and to query the status of a loop device. This
	  version does not currently support enabling data encryption.
config FREETZ_BUSYBOX_LSPCI
	bool "lspci"
	default n
	#select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  lspci is a utility for displaying information about PCI buses in the
	  system and devices connected to them.

	  This version uses sysfs (/sys/bus/pci/devices) only.
config FREETZ_BUSYBOX_LSUSB
	bool "lsusb"
	default n
	#select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  lsusb is a utility for displaying information about USB buses in the
	  system and devices connected to them.

	  This version uses sysfs (/sys/bus/usb/devices) only.
config FREETZ_BUSYBOX_MDEV
	bool "mdev"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	depends on FREETZ_KERNEL_VERSION_2_6_28_MIN
	help
	  mdev is a mini-udev implementation for dynamically creating device
	  nodes in the /dev directory.

	  For more information, please see docs/mdev.txt

config FREETZ_BUSYBOX_FEATURE_MDEV_CONF
	bool "Support /etc/mdev.conf"
	default n
	depends on FREETZ_BUSYBOX_MDEV
	help
	  Add support for the mdev config file to control ownership and
	  permissions of the device nodes.

	  For more information, please see docs/mdev.txt

config FREETZ_BUSYBOX_FEATURE_MDEV_RENAME
	bool "Support subdirs/symlinks"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_MDEV_CONF
	help
	  Add support for renaming devices and creating symlinks.

	  For more information, please see docs/mdev.txt

config FREETZ_BUSYBOX_FEATURE_MDEV_RENAME_REGEXP
	bool "Support regular expressions substitutions when renaming device"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_MDEV_RENAME
	help
	  Add support for regular expressions substitutions when renaming
	  device.

config FREETZ_BUSYBOX_FEATURE_MDEV_EXEC
	bool "Support command execution at device addition/removal"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_MDEV_CONF
	help
	  This adds support for an optional field to /etc/mdev.conf for
	  executing commands when devices are created/removed.

	  For more information, please see docs/mdev.txt

config FREETZ_BUSYBOX_FEATURE_MDEV_LOAD_FIRMWARE
	bool "Support loading of firmwares"
	default n
	depends on FREETZ_BUSYBOX_MDEV
	help
	  Some devices need to load firmware before they can be usable.

	  These devices will request userspace look up the files in
	  /lib/firmware/ and if it exists, send it to the kernel for
	  loading into the hardware.
config FREETZ_BUSYBOX_MESG
	bool "mesg"
	default n
	help
	  Mesg controls access to your terminal by others. It is typically
	  used to allow or disallow other users to write to your terminal

config FREETZ_BUSYBOX_FEATURE_MESG_ENABLE_ONLY_GROUP
	bool "Enable writing to tty only by group, not by everybody"
	default n
	depends on FREETZ_BUSYBOX_MESG
	help
	  Usually, ttys are owned by group "tty", and "write" tool is
	  setgid to this group. This way, "mesg y" only needs to enable
	  "write by owning group" bit in tty mode.

	  If you set this option to N, "mesg y" will enable writing
	  by anybody at all. This is not recommended.
config FREETZ_BUSYBOX_MKE2FS
	bool "mke2fs"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	depends on !FREETZ_PACKAGE_E2FSPROGS_E2MAKING
	help
	  Utility to create EXT2 filesystems.

config FREETZ_BUSYBOX_MKFS_EXT2
	bool "mkfs.ext2"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	depends on !FREETZ_PACKAGE_E2FSPROGS_E2MAKING
	help
	  Alias to "mke2fs".
config FREETZ_BUSYBOX_MKFS_MINIX
	bool "mkfs_minix"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  The minix filesystem is a nice, small, compact, read-write filesystem
	  with little overhead. If you wish to be able to create minix
	  filesystems this utility will do the job for you.

config FREETZ_BUSYBOX_FEATURE_MINIX2
	bool "Support Minix fs v2 (fsck_minix/mkfs_minix)"
	default n
	depends on FREETZ_BUSYBOX_FSCK_MINIX || FREETZ_BUSYBOX_MKFS_MINIX
	help
	  If you wish to be able to create version 2 minix filesystems, enable
	  this. If you enabled 'mkfs_minix' then you almost certainly want to
	  be using the version 2 filesystem support.
config FREETZ_BUSYBOX_MKFS_REISER
	bool "mkfs_reiser"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Utility to create ReiserFS filesystems.
	  Note: this applet needs a lot of testing and polishing.
config FREETZ_BUSYBOX_MKDOSFS
	bool "mkdosfs"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Utility to create FAT32 filesystems.

config FREETZ_BUSYBOX_MKFS_VFAT
	bool "mkfs.vfat"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Alias to "mkdosfs".
config FREETZ_BUSYBOX_MKSWAP
	bool "mkswap"
	default n
	help
	  The mkswap utility is used to configure a file or disk partition as
	  Linux swap space. This allows Linux to use the entire file or
	  partition as if it were additional RAM, which can greatly increase
	  the capability of low-memory machines. This additional memory is
	  much slower than real RAM, but can be very helpful at preventing your
	  applications being killed by the Linux out of memory (OOM) killer.
	  Once you have created swap space using 'mkswap' you need to enable
	  the swap space using the 'swapon' utility.

config FREETZ_BUSYBOX_FEATURE_MKSWAP_UUID
	bool "UUID support"
	default n
	depends on FREETZ_BUSYBOX_MKSWAP
	help
	  Generate swap spaces with universally unique identifiers.
config FREETZ_BUSYBOX_MORE
	bool "more"
	default n
	help
	  more is a simple utility which allows you to read text one screen
	  sized page at a time. If you want to read text that is larger than
	  the screen, and you are using anything faster than a 300 baud modem,
	  you will probably find this utility very helpful. If you don't have
	  any need to reading text files, you can leave this disabled.
config FREETZ_BUSYBOX_MOUNT
	bool "mount"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  All files and filesystems in Unix are arranged into one big directory
	  tree. The 'mount' utility is used to graft a filesystem onto a
	  particular part of the tree. A filesystem can either live on a block
	  device, or it can be accessible over the network, as is the case with
	  NFS filesystems. Most people using BusyBox will also want to enable
	  the 'mount' utility.

config FREETZ_BUSYBOX_FEATURE_MOUNT_FAKE
	bool "Support option -f"
	default n
	depends on FREETZ_BUSYBOX_MOUNT
	help
	  Enable support for faking a file system mount.

config FREETZ_BUSYBOX_FEATURE_MOUNT_VERBOSE
	bool "Support option -v"
	default n
	depends on FREETZ_BUSYBOX_MOUNT
	help
	  Enable multi-level -v[vv...] verbose messages. Useful if you
	  debug mount problems and want to see what is exactly passed
	  to the kernel.

config FREETZ_BUSYBOX_FEATURE_MOUNT_HELPERS
	bool "Support mount helpers"
	default n
	depends on FREETZ_BUSYBOX_MOUNT
	help
	  Enable mounting of virtual file systems via external helpers.
	  E.g. "mount obexfs#-b00.11.22.33.44.55 /mnt" will in effect call
	  "obexfs -b00.11.22.33.44.55 /mnt"
	  Also "mount -t sometype [-o opts] fs /mnt" will try
	  "sometype [-o opts] fs /mnt" if simple mount syscall fails.
	  The idea is to use such virtual filesystems in /etc/fstab.

config FREETZ_BUSYBOX_FEATURE_MOUNT_LABEL
	bool "Support specifying devices by label or UUID"
	default n
	depends on FREETZ_BUSYBOX_MOUNT
	select FREETZ_BUSYBOX_VOLUMEID
	help
	  This allows for specifying a device by label or uuid, rather than by
	  name. This feature utilizes the same functionality as blkid/findfs.
	  This also enables label or uuid support for swapon.

config FREETZ_BUSYBOX_FEATURE_MOUNT_NFS
	bool "Support mounting NFS file systems on Linux < 2.6.23"
	default n
	depends on FREETZ_BUSYBOX_MOUNT
	select FREETZ_BUSYBOX_FEATURE_HAVE_RPC
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  Enable mounting of NFS file systems on Linux kernels prior
	  to version 2.6.23. Note that in this case mounting of NFS
	  over IPv6 will not be possible.

	  Note that this option links in RPC support from libc,
	  which is rather large (~10 kbytes on uclibc).

config FREETZ_BUSYBOX_FEATURE_MOUNT_CIFS
	bool "Support mounting CIFS/SMB file systems"
	default n
	depends on FREETZ_BUSYBOX_MOUNT
	help
	  Enable support for samba mounts.

config FREETZ_BUSYBOX_FEATURE_MOUNT_FLAGS
	depends on FREETZ_BUSYBOX_MOUNT
	bool "Support lots of -o flags"
	default n
	help
	  Without this, mount only supports ro/rw/remount. With this, it
	  supports nosuid, suid, dev, nodev, exec, noexec, sync, async, atime,
	  noatime, diratime, nodiratime, loud, bind, move, shared, slave,
	  private, unbindable, rshared, rslave, rprivate, and runbindable.

config FREETZ_BUSYBOX_FEATURE_MOUNT_FSTAB
	depends on FREETZ_BUSYBOX_MOUNT
	bool "Support /etc/fstab and -a"
	default n
	help
	  Support mount all and looking for files in /etc/fstab.

config FREETZ_BUSYBOX_FEATURE_MOUNT_OTHERTAB
	depends on FREETZ_BUSYBOX_FEATURE_MOUNT_FSTAB
	bool "Support -T <alt_fstab>"
	default n
	help
	  Support mount -T (specifying an alternate fstab)
config FREETZ_BUSYBOX_MOUNTPOINT
	bool "mountpoint"
	default n
	help
	  mountpoint checks if the directory is a mountpoint.
config FREETZ_BUSYBOX_NSENTER
	bool "nsenter"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	depends on FREETZ_KERNEL_VERSION_3_10_MIN && FREETZ_AVM_UCLIBC_1_0_14
	help
	  Run program with namespaces of other processes.

config FREETZ_BUSYBOX_FEATURE_NSENTER_LONG_OPTS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_NSENTER && FREETZ_BUSYBOX_LONG_OPTS
	help
	  Support long options for the nsenter applet. This makes
	  the busybox implementation more compatible with upstream.
config FREETZ_BUSYBOX_PIVOT_ROOT
	bool "pivot_root"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  The pivot_root utility swaps the mount points for the root filesystem
	  with some other mounted filesystem. This allows you to do all sorts
	  of wild and crazy things with your Linux system and is far more
	  powerful than 'chroot'.

	  Note: This is for initrd in linux 2.4. Under initramfs (introduced
	  in linux 2.6) use switch_root instead.
config FREETZ_BUSYBOX_RDATE
	bool "rdate"
	default n
	help
	  The rdate utility allows you to synchronize the date and time of your
	  system clock with the date and time of a remote networked system using
	  the RFC868 protocol, which is built into the inetd daemon on most
	  systems.
config FREETZ_BUSYBOX_RDEV
	bool "rdev"
	default n
	help
	  Print the device node associated with the filesystem mounted at '/'.
config FREETZ_BUSYBOX_READPROFILE
	bool "readprofile"
	default n
	#select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This allows you to parse /proc/profile for basic profiling.
config FREETZ_BUSYBOX_RENICE
	bool "renice"
	default n
	help
	  Renice alters the scheduling priority of one or more running
	  processes.
config FREETZ_BUSYBOX_REV
	bool "rev"
	default n
	help
	  Reverse lines of a file or files.
config FREETZ_BUSYBOX_RTCWAKE
	bool "rtcwake"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Enter a system sleep state until specified wakeup time.
config FREETZ_BUSYBOX_SCRIPT
	bool "script"
	default n
	help
	  The script makes typescript of terminal session.
config FREETZ_BUSYBOX_SCRIPTREPLAY
	bool "scriptreplay"
	default n
	help
	  This program replays a typescript, using timing information
	  given by script -t.
config FREETZ_BUSYBOX_SETARCH
	bool "setarch"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  The linux32 utility is used to create a 32bit environment for the
	  specified program (usually a shell). It only makes sense to have
	  this util on a system that supports both 64bit and 32bit userland
	  (like amd64/x86, ppc64/ppc, sparc64/sparc, etc...).

config FREETZ_BUSYBOX_LINUX32
	bool "linux32"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Alias to "setarch linux32".

config FREETZ_BUSYBOX_LINUX64
	bool "linux64"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Alias to "setarch linux64".
config FREETZ_BUSYBOX_SETPRIV
	bool "setpriv"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	select FREETZ_BUSYBOX_LONG_OPTS
	help
	  Run a program with different Linux privilege settings.
	  Requires kernel >= 3.5
config FREETZ_BUSYBOX_SETSID
	bool "setsid"
	default n
	help
	  setsid runs a program in a new session
config FREETZ_BUSYBOX_SWAPON
	bool "swapon"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This option enables the 'swapon' utility.
	  Once you have created some swap space using 'mkswap', you also need
	  to enable your swap space with the 'swapon' utility. The 'swapoff'
	  utility is used, typically at system shutdown, to disable any swap
	  space. If you are not using any swap space, you can leave this
	  option disabled.

config FREETZ_BUSYBOX_FEATURE_SWAPON_DISCARD
	bool "Support discard option -d"
	default n
	depends on FREETZ_BUSYBOX_SWAPON
	help
	  Enable support for discarding swap area blocks at swapon and/or as
	  the kernel frees them. This option enables both the -d option on
	  'swapon' and the 'discard' option for swap entries in /etc/fstab.

config FREETZ_BUSYBOX_FEATURE_SWAPON_PRI
	bool "Support priority option -p"
	default n
	depends on FREETZ_BUSYBOX_SWAPON
	help
	  Enable support for setting swap device priority in swapon.

config FREETZ_BUSYBOX_SWAPOFF
	bool "swapoff"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This option enables the 'swapoff' utility.
config FREETZ_BUSYBOX_SWITCH_ROOT
	bool "switch_root"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  The switch_root utility is used from initramfs to select a new
	  root device. Under initramfs, you have to use this instead of
	  pivot_root. (Stop reading here if you don't care why.)

	  Booting with initramfs extracts a gzipped cpio archive into rootfs
	  (which is a variant of ramfs/tmpfs). Because rootfs can't be moved
	  or unmounted*, pivot_root will not work from initramfs. Instead,
	  switch_root deletes everything out of rootfs (including itself),
	  does a mount --move that overmounts rootfs with the new root, and
	  then execs the specified init program.

	  * Because the Linux kernel uses rootfs internally as the starting
	  and ending point for searching through the kernel's doubly linked
	  list of active mount points. That's why.
config FREETZ_BUSYBOX_TASKSET
	bool "taskset"
	default n
	help
	  Retrieve or set a processes's CPU affinity.
	  This requires sched_{g,s}etaffinity support in your libc.

config FREETZ_BUSYBOX_FEATURE_TASKSET_FANCY
	bool "Fancy output"
	default n
	depends on FREETZ_BUSYBOX_TASKSET
	help
	  Needed for machines with more than 32-64 CPUs:
	  affinity parameter 0xHHHHHHHHHHHHHHHHHHHH can be arbitrarily long
	  in this case. Otherwise, it is limited to sizeof(long).
config FREETZ_BUSYBOX_UEVENT
	bool "uevent"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  uevent is a netlink listener for kernel uevent notifications
	  sent via netlink. It is usually used for dynamic device creation.
config FREETZ_BUSYBOX_UMOUNT
	bool "umount"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  When you want to remove a mounted filesystem from its current mount
	  point, for example when you are shutting down the system, the
	  'umount' utility is the tool to use. If you enabled the 'mount'
	  utility, you almost certainly also want to enable 'umount'.

config FREETZ_BUSYBOX_FEATURE_UMOUNT_ALL
	bool "Support option -a"
	default n
	depends on FREETZ_BUSYBOX_UMOUNT
	help
	  Support -a option to unmount all currently mounted filesystems.
config FREETZ_BUSYBOX_UNSHARE
	bool "unshare"
	default n
	depends on !FREETZ_BUSYBOX_NOMMU
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	select FREETZ_BUSYBOX_LONG_OPTS
	help
	  Run program with some namespaces unshared from parent.
config FREETZ_BUSYBOX_WALL
	bool "wall"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_UTMP
	help
	  Write a message to all users that are logged in.

comment "Common options for mount/umount"
	depends on FREETZ_BUSYBOX_MOUNT || FREETZ_BUSYBOX_UMOUNT

config FREETZ_BUSYBOX_FEATURE_MOUNT_LOOP
	bool "Support loopback mounts"
	default n
	depends on FREETZ_BUSYBOX_MOUNT || FREETZ_BUSYBOX_UMOUNT
	help
	  Enabling this feature allows automatic mounting of files (containing
	  filesystem images) via the linux kernel's loopback devices.
	  The mount command will detect you are trying to mount a file instead
	  of a block device, and transparently associate the file with a
	  loopback device. The umount command will also free that loopback
	  device.

	  You can still use the 'losetup' utility (to manually associate files
	  with loop devices) if you need to do something advanced, such as
	  specify an offset or cryptographic options to the loopback device.
	  (If you don't want umount to free the loop device, use "umount -D".)

config FREETZ_BUSYBOX_FEATURE_MOUNT_LOOP_CREATE
	bool "Create new loopback devices if needed"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_MOUNT_LOOP
	help
	  Linux kernels >= 2.6.24 support unlimited loopback devices. They are
	  allocated for use when trying to use a loop device. The loop device
	  must however exist.

	  This feature lets mount to try to create next /dev/loopN device
	  if it does not find a free one.

config FREETZ_BUSYBOX_FEATURE_MTAB_SUPPORT
	bool "Support old /etc/mtab file"
	default n
	depends on FREETZ_BUSYBOX_MOUNT || FREETZ_BUSYBOX_UMOUNT
	select FREETZ_BUSYBOX_FEATURE_MOUNT_FAKE
	help
	  Historically, Unix systems kept track of the currently mounted
	  partitions in the file "/etc/mtab". These days, the kernel exports
	  the list of currently mounted partitions in "/proc/mounts", rendering
	  the old mtab file obsolete. (In modern systems, /etc/mtab should be
	  a symlink to /proc/mounts.)

	  The only reason to have mount maintain an /etc/mtab file itself is if
	  your stripped-down embedded system does not have a /proc directory.
	  If you must use this, keep in mind it's inherently brittle (for
	  example a mount under chroot won't update it), can't handle modern
	  features like separate per-process filesystem namespaces, requires
	  that your /etc directory be writable, tends to get easily confused
	  by --bind or --move mounts, won't update if you rename a directory
	  that contains a mount point, and so on. (In brief: avoid.)

	  About the only reason to use this is if you've removed /proc from
	  your kernel.

# INCLUDE_BEGIN util-linux/volume_id/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

config FREETZ_BUSYBOX_VOLUMEID
	bool #No description makes it a hidden option
	default n

menu "Filesystem/Volume identification"
	depends on FREETZ_BUSYBOX_VOLUMEID

config FREETZ_BUSYBOX_FEATURE_VOLUMEID_BCACHE
	bool "bcache filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_BTRFS
	bool "btrfs filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_CRAMFS
	bool "cramfs filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_EXFAT
	bool "exFAT filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
	help
	  exFAT (extended FAT) is a proprietary file system designed especially
	  for flash drives. It has many features from NTFS, but with less
	  overhead. exFAT is used on most SDXC cards for consumer electronics.
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_EXT
	bool "Ext filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_F2FS
	bool "f2fs filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
	help
	  F2FS (aka Flash-Friendly File System) is a log-structured file system,
	  which is adapted to newer forms of storage. F2FS also remedies some
	  known issues of the older log structured file systems, such as high
	  cleaning overhead.
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_FAT
	bool "fat filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_HFS
	bool "hfs filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_ISO9660
	bool "iso9660 filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_JFS
	bool "jfs filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_LINUXRAID
	bool "linuxraid"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_LINUXSWAP
	bool "linux swap filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_LUKS
	bool "luks filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_NILFS
	bool "nilfs filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
	help
	  NILFS is a New Implementation of a Log-Structured File System (LFS)
	  that supports continuous snapshots. This provides features like
	  versioning of the entire filesystem, restoration of files that
	  were deleted a few minutes ago. NILFS keeps consistency like
	  conventional LFS, so it provides quick recovery after system crashes.

	  The possible use of NILFS includes versioning, tamper detection,
	  SOX compliance logging, and so forth. It can serve as an alternative
	  filesystem for Linux desktop environment, or as a basis of advanced
	  storage appliances.
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_NTFS
	bool "ntfs filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_OCFS2
	bool "ocfs2 filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_REISERFS
	bool "Reiser filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_ROMFS
	bool "romfs filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_SQUASHFS
	bool "SquashFS filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID && FREETZ_BUSYBOX_FEATURE_BLKID_TYPE
	help
	  Squashfs is a compressed read-only filesystem for Linux. Squashfs is
	  intended for general read-only filesystem use and in constrained block
	  device/memory systems (e.g. embedded systems) where low overhead is
	  needed.
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_SYSV
	bool "sysv filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_UBIFS
	bool "UBIFS filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
	help
	  UBIFS (Unsorted Block Image File System) is a file
	  system for use with raw flash memory media.
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_UDF
	bool "udf filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID
### config FEATURE_VOLUMEID_HIGHPOINTRAID
###	bool "highpoint raid"
###	default n
###	depends on FREETZ_BUSYBOX_VOLUMEID
### config FEATURE_VOLUMEID_HPFS
###	bool "hpfs filesystem"
###	default n
###	depends on FREETZ_BUSYBOX_VOLUMEID
### config FEATURE_VOLUMEID_ISWRAID
###	bool "intel raid"
###	default n
###	depends on FREETZ_BUSYBOX_VOLUMEID
### config FEATURE_VOLUMEID_LSIRAID
###	bool "lsi raid"
###	default n
###	depends on FREETZ_BUSYBOX_VOLUMEID
### config FEATURE_VOLUMEID_LVM
###	bool "lvm"
###	default n
###	depends on FREETZ_BUSYBOX_VOLUMEID
### config FEATURE_VOLUMEID_MAC
###	bool "mac filesystem"
###	default n
###	depends on FREETZ_BUSYBOX_VOLUMEID
### config FEATURE_VOLUMEID_MINIX
###	bool "minix filesystem"
###	default n
###	depends on FREETZ_BUSYBOX_VOLUMEID
### config FEATURE_VOLUMEID_MSDOS
###	bool "msdos filesystem"
###	default n
###	depends on FREETZ_BUSYBOX_VOLUMEID
### config FEATURE_VOLUMEID_NVIDIARAID
###	bool "nvidia raid"
###	default n
###	depends on FREETZ_BUSYBOX_VOLUMEID
### config FEATURE_VOLUMEID_PROMISERAID
###	bool "promise raid"
###	default n
###	depends on FREETZ_BUSYBOX_VOLUMEID
### config FEATURE_VOLUMEID_SILICONRAID
###	bool "silicon raid"
###	default n
###	depends on FREETZ_BUSYBOX_VOLUMEID
### config FEATURE_VOLUMEID_UFS
###	bool "ufs filesystem"
###	default n
###	depends on FREETZ_BUSYBOX_VOLUMEID
### config FEATURE_VOLUMEID_VIARAID
###	bool "via raid"
###	default n
###	depends on FREETZ_BUSYBOX_VOLUMEID
config FREETZ_BUSYBOX_FEATURE_VOLUMEID_XFS
	bool "xfs filesystem"
	default n
	depends on FREETZ_BUSYBOX_VOLUMEID

endmenu

# INCLUDE_END util-linux/volume_id/Config.in

endmenu

# INCLUDE_END util-linux/Config.in
# INCLUDE_BEGIN miscutils/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Miscellaneous Utilities"

config FREETZ_BUSYBOX_ADJTIMEX
	bool "adjtimex"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Adjtimex reads and optionally sets adjustment parameters for
	  the Linux clock adjustment algorithm.
config FREETZ_BUSYBOX_BBCONFIG
	bool "bbconfig"
	default n
	help
	  The bbconfig applet will print the config file with which
	  busybox was built.

config FREETZ_BUSYBOX_FEATURE_COMPRESS_BBCONFIG
	bool "Compress bbconfig data"
	default n
	depends on FREETZ_BUSYBOX_BBCONFIG
	help
	  Store bbconfig data in compressed form, uncompress them on-the-fly
	  before output.

	  If you have a really tiny busybox with few applets enabled (and
	  bunzip2 isn't one of them), the overhead of the decompressor might
	  be noticeable. Also, if you run executables directly from ROM
	  and have very little memory, this might not be a win. Otherwise,
	  you probably want this.
config FREETZ_BUSYBOX_BEEP
	bool "beep"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  The beep applets beeps in a given freq/Hz.

config FREETZ_BUSYBOX_FEATURE_BEEP_FREQ
	int "default frequency"
	range 20 50000	# allowing 0 here breaks the build
	default 4000
	depends on FREETZ_BUSYBOX_BEEP
	help
	  Frequency for default beep.

config FREETZ_BUSYBOX_FEATURE_BEEP_LENGTH_MS
	int "default length"
	range 0 2147483647
	default 30
	depends on FREETZ_BUSYBOX_BEEP
	help
	  Length in ms for default beep.
config FREETZ_BUSYBOX_CHAT
	bool "chat"
	default n
	help
	  Simple chat utility.

config FREETZ_BUSYBOX_FEATURE_CHAT_NOFAIL
	bool "Enable NOFAIL expect strings"
	depends on FREETZ_BUSYBOX_CHAT
	default n
	help
	  When enabled expect strings which are started with a dash trigger
	  no-fail mode. That is when expectation is not met within timeout
	  the script is not terminated but sends next SEND string and waits
	  for next EXPECT string. This allows to compose far more flexible
	  scripts.

config FREETZ_BUSYBOX_FEATURE_CHAT_TTY_HIFI
	bool "Force STDIN to be a TTY"
	depends on FREETZ_BUSYBOX_CHAT
	default n
	help
	  Original chat always treats STDIN as a TTY device and sets for it
	  so-called raw mode. This option turns on such behaviour.

config FREETZ_BUSYBOX_FEATURE_CHAT_IMPLICIT_CR
	bool "Enable implicit Carriage Return"
	depends on FREETZ_BUSYBOX_CHAT
	default n
	help
	  When enabled make chat to terminate all SEND strings with a "\r"
	  unless "\c" is met anywhere in the string.

config FREETZ_BUSYBOX_FEATURE_CHAT_SWALLOW_OPTS
	bool "Swallow options"
	depends on FREETZ_BUSYBOX_CHAT
	default n
	help
	  Busybox chat require no options. To make it not fail when used
	  in place of original chat (which has a bunch of options) turn
	  this on.

config FREETZ_BUSYBOX_FEATURE_CHAT_SEND_ESCAPES
	bool "Support weird SEND escapes"
	depends on FREETZ_BUSYBOX_CHAT
	default n
	help
	  Original chat uses some escape sequences in SEND arguments which
	  are not sent to device but rather performs special actions.
	  E.g. "\K" means to send a break sequence to device.
	  "\d" delays execution for a second, "\p" -- for a 1/100 of second.
	  Before turning this option on think twice: do you really need them?

config FREETZ_BUSYBOX_FEATURE_CHAT_VAR_ABORT_LEN
	bool "Support variable-length ABORT conditions"
	depends on FREETZ_BUSYBOX_CHAT
	default n
	help
	  Original chat uses fixed 50-bytes length ABORT conditions. Say N here.

config FREETZ_BUSYBOX_FEATURE_CHAT_CLR_ABORT
	bool "Support revoking of ABORT conditions"
	depends on FREETZ_BUSYBOX_CHAT
	default n
	help
	  Support CLR_ABORT directive.
config FREETZ_BUSYBOX_CONSPY
	bool "conspy"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  A text-mode VNC like program for Linux virtual terminals.
	  example:  conspy NUM      shared access to console num
	  or        conspy -nd NUM  screenshot of console num
	  or        conspy -cs NUM  poor man's GNU screen like
config FREETZ_BUSYBOX_CROND
	bool "crond"
	default n
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  Crond is a background daemon that parses individual crontab
	  files and executes commands on behalf of the users in question.
	  This is a port of dcron from slackware. It uses files of the
	  format /var/spool/cron/crontabs/<username> files, for example:
	      $ cat /var/spool/cron/crontabs/root
	      # Run daily cron jobs at 4:40 every day:
	      40 4 * * * /etc/cron/daily > /dev/null 2>&1

config FREETZ_BUSYBOX_FEATURE_CROND_D
	bool "Support option -d to redirect output to stderr"
	depends on FREETZ_BUSYBOX_CROND
	default n
	help
	  -d N sets loglevel (0:most verbose) and directs all output to stderr.

config FREETZ_BUSYBOX_FEATURE_CROND_CALL_SENDMAIL
	bool "Report command output via email (using sendmail)"
	default n
	depends on FREETZ_BUSYBOX_CROND
	help
	  Command output will be sent to corresponding user via email.

config FREETZ_BUSYBOX_FEATURE_CROND_ROOT_NOLOG
	bool "Suppress logging of start information for a job (root user only)"
	default n
	depends on FREETZ_BUSYBOX_CROND
	help
	  A dash character (-) at the first position of the minute field of
	  an entry prevents crond from logging every start of that job.

config FREETZ_BUSYBOX_FEATURE_CROND_DIR
	string "crond spool directory"
	default "/var/spool/cron"
	depends on FREETZ_BUSYBOX_CROND || FREETZ_BUSYBOX_CRONTAB
	help
	  Location of crond spool.
config FREETZ_BUSYBOX_CRONTAB
	bool "crontab"
	default n
	help
	  Crontab manipulates the crontab for a particular user. Only
	  the superuser may specify a different user and/or crontab directory.
	  Note that Busybox binary must be setuid root for this applet to
	  work properly.
config FREETZ_BUSYBOX_DC
	bool "dc"
	default n
	help
	  Dc is a reverse-polish desk calculator which supports unlimited
	  precision arithmetic.

config FREETZ_BUSYBOX_FEATURE_DC_LIBM
	bool "Enable power and exp functions (requires libm)"
	default n
	depends on FREETZ_BUSYBOX_DC
	help
	  Enable power and exp functions.
	  NOTE: This will require libm to be present for linking.
config FREETZ_BUSYBOX_DEVFSD
	bool "devfsd (obsolete)"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  This is deprecated and should NOT be used anymore.
	  Use linux >= 2.6 (optionally with hotplug) and mdev instead!
	  See docs/mdev.txt for detailed instructions on how to use mdev
	  instead.

	  Provides compatibility with old device names on a devfs systems.
	  You should set it to true if you have devfs enabled.
	  The following keywords in devsfd.conf are supported:
	  "CLEAR_CONFIG", "INCLUDE", "OPTIONAL_INCLUDE", "RESTORE",
	  "PERMISSIONS", "EXECUTE", "COPY", "IGNORE",
	  "MKOLDCOMPAT", "MKNEWCOMPAT","RMOLDCOMPAT", "RMNEWCOMPAT".

	  But only if they are written UPPERCASE!!!!!!!!

config FREETZ_BUSYBOX_DEVFSD_MODLOAD
	bool "Adds support for MODLOAD keyword in devsfd.conf"
	default n
	depends on FREETZ_BUSYBOX_DEVFSD
	help
	  This actually doesn't work with busybox modutils but needs
	  the external modutils.

config FREETZ_BUSYBOX_DEVFSD_FG_NP
	bool "Enable the -fg and -np options"
	default n
	depends on FREETZ_BUSYBOX_DEVFSD
	help
	  -fg  Run the daemon in the foreground.
	  -np  Exit after parsing the configuration file.
	       Do not poll for events.

config FREETZ_BUSYBOX_DEVFSD_VERBOSE
	bool "Increases logging (and size)"
	default n
	depends on FREETZ_BUSYBOX_DEVFSD
	help
	  Increases logging to stderr or syslog.

config FREETZ_BUSYBOX_FEATURE_DEVFS
	bool "Use devfs names for all devices (obsolete)"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  This is obsolete and should NOT be used anymore.
	  Use linux >= 2.6 (optionally with hotplug) and mdev instead!

	  For legacy systems -- if there is no way around devfsd -- this
	  tells busybox to look for names like /dev/loop/0 instead of
	  /dev/loop0. If your /dev directory has normal names instead of
	  devfs names, you don't want this.
config FREETZ_BUSYBOX_DEVMEM
	bool "devmem"
	default n
	help
	  devmem is a small program that reads and writes from physical
	  memory using /dev/mem.
config FREETZ_BUSYBOX_FBSPLASH
	bool "fbsplash"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Shows splash image and progress bar on framebuffer device.
	  Can be used during boot phase of an embedded device. ~2kb.
	  Usage:
	  - use kernel option 'vga=xxx' or otherwise enable fb device.
	  - put somewhere fbsplash.cfg file and an image in .ppm format.
	  - $ setsid fbsplash [params] &
	    -c: hide cursor
	    -d /dev/fbN: framebuffer device (if not /dev/fb0)
	    -s path_to_image_file (can be "-" for stdin)
	    -i path_to_cfg_file (can be "-" for stdin)
	    -f path_to_fifo (can be "-" for stdin)
	  - if you want to run it only in presence of kernel parameter:
	    grep -q "fbsplash=on" </proc/cmdline && setsid fbsplash [params] &
	  - commands for fifo:
	    "NN" (ASCII decimal number) - percentage to show on progress bar
	    "exit" - well you guessed it
config FREETZ_BUSYBOX_FLASHCP
	bool "flashcp"
	default n  # doesn't build on Ubuntu 8.04
	help
	  The flashcp binary, inspired by mtd-utils as of git head 5eceb74f7.
	  This utility is used to copy images into a MTD device.
config FREETZ_BUSYBOX_FLASH_ERASEALL
	bool "flash_eraseall"
	default n  # doesn't build on Ubuntu 8.04
	help
	  The flash_eraseall binary from mtd-utils as of git head c4c6a59eb.
	  This utility is used to erase the whole MTD device.
config FREETZ_BUSYBOX_FLASH_LOCK
	bool "flash_lock"
	default n  # doesn't build on Ubuntu 8.04
	help
	  The flash_lock binary from mtd-utils as of git head 5ec0c10d0. This
	  utility locks part or all of the flash device.

config FREETZ_BUSYBOX_FLASH_UNLOCK
	bool "flash_unlock"
	default n  # doesn't build on Ubuntu 8.04
	help
	  The flash_unlock binary from mtd-utils as of git head 5ec0c10d0. This
	  utility unlocks part or all of the flash device.
config FREETZ_BUSYBOX_HDPARM
	bool "hdparm"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Get/Set hard drive parameters. Primarily intended for ATA
	  drives. Adds about 13k (or around 30k if you enable the
	  FREETZ_BUSYBOX_FEATURE_HDPARM_GET_IDENTITY option)....

config FREETZ_BUSYBOX_FEATURE_HDPARM_GET_IDENTITY
	bool "Support obtaining detailed information directly from drives"
	default n
	depends on FREETZ_BUSYBOX_HDPARM
	help
	  Enable the -I and -i options to obtain detailed information
	  directly from drives about their capabilities and supported ATA
	  feature set. If no device name is specified, hdparm will read
	  identify data from stdin. Enabling this option will add about 16k...

config FREETZ_BUSYBOX_FEATURE_HDPARM_HDIO_SCAN_HWIF
	bool "Register an IDE interface (DANGEROUS)"
	default n
	depends on FREETZ_BUSYBOX_HDPARM
	help
	  Enable the 'hdparm -R' option to register an IDE interface.
	  This is dangerous stuff, so you should probably say N.

config FREETZ_BUSYBOX_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF
	bool "Un-register an IDE interface (DANGEROUS)"
	default n
	depends on FREETZ_BUSYBOX_HDPARM
	help
	  Enable the 'hdparm -U' option to un-register an IDE interface.
	  This is dangerous stuff, so you should probably say N.

config FREETZ_BUSYBOX_FEATURE_HDPARM_HDIO_DRIVE_RESET
	bool "Perform device reset (DANGEROUS)"
	default n
	depends on FREETZ_BUSYBOX_HDPARM
	help
	  Enable the 'hdparm -w' option to perform a device reset.
	  This is dangerous stuff, so you should probably say N.

config FREETZ_BUSYBOX_FEATURE_HDPARM_HDIO_TRISTATE_HWIF
	bool "Tristate device for hotswap (DANGEROUS)"
	default n
	depends on FREETZ_BUSYBOX_HDPARM
	help
	  Enable the 'hdparm -x' option to tristate device for hotswap,
	  and the '-b' option to get/set bus state. This is dangerous
	  stuff, so you should probably say N.

config FREETZ_BUSYBOX_FEATURE_HDPARM_HDIO_GETSET_DMA
	bool "Get/set using_dma flag"
	default n
	depends on FREETZ_BUSYBOX_HDPARM
	help
	  Enable the 'hdparm -d' option to get/set using_dma flag.
config FREETZ_BUSYBOX_I2CGET
	bool "i2cget"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Read from I2C/SMBus chip registers.

config FREETZ_BUSYBOX_I2CSET
	bool "i2cset"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Set I2C registers.

config FREETZ_BUSYBOX_I2CDUMP
	bool "i2cdump"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Examine I2C registers.

config FREETZ_BUSYBOX_I2CDETECT
	bool "i2cdetect"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Detect I2C chips.

config FREETZ_BUSYBOX_INOTIFYD
	bool "inotifyd"
	default n  # doesn't build on Knoppix 5
	help
	  Simple inotify daemon. Reports filesystem changes. Requires
	  kernel >= 2.6.13
config FREETZ_BUSYBOX_LESS
	bool "less"
	default n
	help
	  'less' is a pager, meaning that it displays text files. It possesses
	  a wide array of features, and is an improvement over 'more'.

config FREETZ_BUSYBOX_FEATURE_LESS_MAXLINES
	int "Max number of input lines less will try to eat"
	default 9999999
	depends on FREETZ_BUSYBOX_LESS

config FREETZ_BUSYBOX_FEATURE_LESS_BRACKETS
	bool "Enable bracket searching"
	default n
	depends on FREETZ_BUSYBOX_LESS
	help
	  This option adds the capability to search for matching left and right
	  brackets, facilitating programming.

config FREETZ_BUSYBOX_FEATURE_LESS_FLAGS
	bool "Enable -m/-M"
	default n
	depends on FREETZ_BUSYBOX_LESS
	help
	  The -M/-m flag enables a more sophisticated status line.

config FREETZ_BUSYBOX_FEATURE_LESS_TRUNCATE
	bool "Enable -S"
	default n
	depends on FREETZ_BUSYBOX_LESS
	help
	  The -S flag causes long lines to be truncated rather than
	  wrapped.

config FREETZ_BUSYBOX_FEATURE_LESS_MARKS
	bool "Enable marks"
	default n
	depends on FREETZ_BUSYBOX_LESS
	help
	  Marks enable positions in a file to be stored for easy reference.

config FREETZ_BUSYBOX_FEATURE_LESS_REGEXP
	bool "Enable regular expressions"
	default n
	depends on FREETZ_BUSYBOX_LESS
	help
	  Enable regular expressions, allowing complex file searches.

config FREETZ_BUSYBOX_FEATURE_LESS_WINCH
	bool "Enable automatic resizing on window size changes"
	default n
	depends on FREETZ_BUSYBOX_LESS
	help
	  Makes less track window size changes.

config FREETZ_BUSYBOX_FEATURE_LESS_ASK_TERMINAL
	bool "Use 'tell me cursor position' ESC sequence to measure window"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_LESS_WINCH
	help
	  Makes less track window size changes.
	  If terminal size can't be retrieved and $LINES/$COLUMNS are not set,
	  this option makes less perform a last-ditch effort to find it:
	  position cursor to 999,999 and ask terminal to report real
	  cursor position using "ESC [ 6 n" escape sequence, then read stdin.
	  This is not clean but helps a lot on serial lines and such.

config FREETZ_BUSYBOX_FEATURE_LESS_DASHCMD
	bool "Enable flag changes ('-' command)"
	default n
	depends on FREETZ_BUSYBOX_LESS
	help
	  This enables the ability to change command-line flags within
	  less itself ('-' keyboard command).

config FREETZ_BUSYBOX_FEATURE_LESS_LINENUMS
	bool "Enable -N (dynamic switching of line numbers)"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_LESS_DASHCMD
config FREETZ_BUSYBOX_LSSCSI
	bool "lsscsi"
	default n
	#select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  lsscsi is a utility for displaying information about SCSI buses in the
	  system and devices connected to them.

	  This version uses sysfs (/sys/bus/scsi/devices) only.
config FREETZ_BUSYBOX_MAKEDEVS
	bool "makedevs"
	default n
	help
	  'makedevs' is a utility used to create a batch of devices with
	  one command.

	  There are two choices for command line behaviour, the interface
	  as used by LEAF/Linux Router Project, or a device table file.

	  'leaf' is traditionally what busybox follows, it allows multiple
	  devices of a particluar type to be created per command.
	  e.g. /dev/hda[0-9]
	  Device properties are passed as command line arguments.

	  'table' reads device properties from a file or stdin, allowing
	  a batch of unrelated devices to be made with one command.
	  User/group names are allowed as an alternative to uid/gid.

choice
	prompt "Choose makedevs behaviour"
	depends on FREETZ_BUSYBOX_MAKEDEVS
	default FREETZ_BUSYBOX_FEATURE_MAKEDEVS_TABLE

config FREETZ_BUSYBOX_FEATURE_MAKEDEVS_LEAF
	bool "leaf"

config FREETZ_BUSYBOX_FEATURE_MAKEDEVS_TABLE
	bool "table"

endchoice
config FREETZ_BUSYBOX_MAN
	bool "man"
	default n
	help
	  Format and display manual pages.
config FREETZ_BUSYBOX_MICROCOM
	bool "microcom"
	default n
	help
	  The poor man's minicom utility for chatting with serial port devices.
config FREETZ_BUSYBOX_MT
	bool "mt"
	default n
	help
	  mt is used to control tape devices. You can use the mt utility
	  to advance or rewind a tape past a specified number of archive
	  files on the tape.
config FREETZ_BUSYBOX_NANDWRITE
	bool "nandwrite"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Write to the specified MTD device, with bad blocks awareness

config FREETZ_BUSYBOX_NANDDUMP
	bool "nanddump"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Dump the content of raw NAND chip
config FREETZ_BUSYBOX_PARTPROBE
	bool "partprobe"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Ask kernel to rescan partition table.
config FREETZ_BUSYBOX_RAIDAUTORUN
	bool "raidautorun"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  raidautorun tells the kernel md driver to
	  search and start RAID arrays.
config FREETZ_BUSYBOX_READAHEAD
	bool "readahead"
	default n
	depends on FREETZ_BUSYBOX_LFS
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Preload the files listed on the command line into RAM cache so that
	  subsequent reads on these files will not block on disk I/O.

	  This applet just calls the readahead(2) system call on each file.
	  It is mainly useful in system startup scripts to preload files
	  or executables before they are used. When used at the right time
	  (in particular when a CPU bound process is running) it can
	  significantly speed up system startup.

	  As readahead(2) blocks until each file has been read, it is best to
	  run this applet as a background job.
config FREETZ_BUSYBOX_RFKILL
	bool "rfkill"
	default n # doesn't build on Ubuntu 9.04
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	depends on !FREETZ_KERNEL_VERSION_2_6_13
	help
	  Enable/disable wireless devices.

	  rfkill list : list all wireless devices
	  rfkill list bluetooth : list all bluetooth devices
	  rfkill list 1 : list device corresponding to the given index
	  rfkill block|unblock wlan : block/unblock all wlan(wifi) devices

config FREETZ_BUSYBOX_RUNLEVEL
	bool "runlevel"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_UTMP
	help
	  find the current and previous system runlevel.

	  This applet uses utmp but does not rely on busybox supporing
	  utmp on purpose. It is used by e.g. emdebian via /etc/init.d/rc.
config FREETZ_BUSYBOX_RX
	bool "rx"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Receive files using the Xmodem protocol.
config FREETZ_BUSYBOX_SETSERIAL
	bool "setserial"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Retrieve or set Linux serial port.
config FREETZ_BUSYBOX_STRINGS
	bool "strings"
	default n
	help
	  strings prints the printable character sequences for each file
	  specified.
config FREETZ_BUSYBOX_TIME
	bool "time"
	default n
	help
	  The time command runs the specified program with the given arguments.
	  When the command finishes, time writes a message to standard output
	  giving timing statistics about this program run.
config FREETZ_BUSYBOX_TTYSIZE
	bool "ttysize"
	default n
	help
	  A replacement for "stty size". Unlike stty, can report only width,
	  only height, or both, in any order. It also does not complain on
	  error, but returns default 80x24.
	  Usage in shell scripts: width=`ttysize w`.
config FREETZ_BUSYBOX_UBIRENAME
	bool "ubirename"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	depends on FREETZ_KERNEL_VERSION_2_6_28_MIN && !FREETZ_SYSTEM_TYPE_GRX5
	help
	  Utility to rename UBI volumes
config FREETZ_BUSYBOX_UBIATTACH
	bool "ubiattach"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	depends on FREETZ_KERNEL_VERSION_2_6_28_MIN && !FREETZ_SYSTEM_TYPE_GRX5
	help
	  Attach MTD device to an UBI device.

config FREETZ_BUSYBOX_UBIDETACH
	bool "ubidetach"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	depends on FREETZ_KERNEL_VERSION_2_6_28_MIN && !FREETZ_SYSTEM_TYPE_GRX5
	help
	  Detach MTD device from an UBI device.

config FREETZ_BUSYBOX_UBIMKVOL
	bool "ubimkvol"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	depends on FREETZ_KERNEL_VERSION_2_6_28_MIN && !FREETZ_SYSTEM_TYPE_GRX5
	help
	  Create a UBI volume.

config FREETZ_BUSYBOX_UBIRMVOL
	bool "ubirmvol"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	depends on FREETZ_KERNEL_VERSION_2_6_28_MIN && !FREETZ_SYSTEM_TYPE_GRX5
	help
	  Delete a UBI volume.

config FREETZ_BUSYBOX_UBIRSVOL
	bool "ubirsvol"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	depends on FREETZ_KERNEL_VERSION_2_6_28_MIN && !FREETZ_SYSTEM_TYPE_GRX5
	help
	  Resize a UBI volume.

config FREETZ_BUSYBOX_UBIUPDATEVOL
	bool "ubiupdatevol"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	depends on FREETZ_KERNEL_VERSION_2_6_28_MIN && !FREETZ_SYSTEM_TYPE_GRX5
	help
	  Update a UBI volume.
config FREETZ_BUSYBOX_VOLNAME
	bool "volname"
	default n
	help
	  Prints a CD-ROM volume name.
config FREETZ_BUSYBOX_WATCHDOG
	bool "watchdog"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  The watchdog utility is used with hardware or software watchdog
	  device drivers. It opens the specified watchdog device special file
	  and periodically writes a magic character to the device. If the
	  watchdog applet ever fails to write the magic character within a
	  certain amount of time, the watchdog device assumes the system has
	  hung, and will cause the hardware to reboot.

endmenu

# INCLUDE_END miscutils/Config.in
# INCLUDE_BEGIN networking/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Networking Utilities"

config FREETZ_BUSYBOX_FEATURE_IPV6
	bool "Enable IPv6 support"
	default n
	depends on FREETZ_TARGET_IPV6_SUPPORT
	help
	  Enable IPv6 support in busybox.
	  This adds IPv6 support in the networking applets.

config FREETZ_BUSYBOX_FEATURE_UNIX_LOCAL
	bool "Enable Unix domain socket support (usually not needed)"
	default n
	help
	  Enable Unix domain socket support in all busybox networking
	  applets.  Address of the form local:/path/to/unix/socket
	  will be recognized.

	  This extension is almost never used in real world usage.
	  You most likely want to say N.

config FREETZ_BUSYBOX_FEATURE_PREFER_IPV4_ADDRESS
	bool "Prefer IPv4 addresses from DNS queries"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_IPV6
	help
	  Use IPv4 address of network host if it has one.

	  If this option is off, the first returned address will be used.
	  This may cause problems when your DNS server is IPv6-capable and
	  is returning IPv6 host addresses too. If IPv6 address
	  precedes IPv4 one in DNS reply, busybox network applets
	  (e.g. wget) will use IPv6 address. On an IPv6-incapable host
	  or network applets will fail to connect to the host
	  using IPv6 address.

config FREETZ_BUSYBOX_VERBOSE_RESOLUTION_ERRORS
	bool "Verbose resolution errors"
	default n
	help
	  Enable if you are not satisfied with simplistic
	  "can't resolve 'hostname.com'" and want to know more.
	  This may increase size of your executable a bit.

config FREETZ_BUSYBOX_ARP
	bool "arp"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Manipulate the system ARP cache.
config FREETZ_BUSYBOX_ARPING
	bool "arping"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Ping hosts by ARP packets.

config FREETZ_BUSYBOX_BRCTL
	bool "brctl"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Manage ethernet bridges.
	  Supports addbr/delbr and addif/delif.

config FREETZ_BUSYBOX_FEATURE_BRCTL_FANCY
	bool "Fancy options"
	default n
	depends on FREETZ_BUSYBOX_BRCTL
	help
	  Add support for extended option like:
	    setageing, setfd, sethello, setmaxage,
	    setpathcost, setportprio, setbridgeprio,
	    stp
	  This adds about 600 bytes.

config FREETZ_BUSYBOX_FEATURE_BRCTL_SHOW
	bool "Support show"
	default n
	depends on FREETZ_BUSYBOX_BRCTL && FREETZ_BUSYBOX_FEATURE_BRCTL_FANCY
	help
	  Add support for option which prints the current config:
	    show
config FREETZ_BUSYBOX_DNSD
	bool "dnsd"
	default n
	help
	  Small and static DNS server daemon.
config FREETZ_BUSYBOX_ETHER_WAKE
	bool "ether-wake"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Send a magic packet to wake up sleeping machines.
config FREETZ_BUSYBOX_FTPD
	bool "ftpd"
	default n
	help
	  Simple FTP daemon. You have to run it via inetd.

config FREETZ_BUSYBOX_FEATURE_FTPD_WRITE
	bool "Enable upload commands"
	default n
	depends on FREETZ_BUSYBOX_FTPD
	help
	  Enable all kinds of FTP upload commands (-w option)

config FREETZ_BUSYBOX_FEATURE_FTPD_ACCEPT_BROKEN_LIST
	bool "Enable workaround for RFC-violating clients"
	default n
	depends on FREETZ_BUSYBOX_FTPD
	help
	  Some ftp clients (among them KDE's Konqueror) issue illegal
	  "LIST -l" requests. This option works around such problems.
	  It might prevent you from listing files starting with "-" and
	  it increases the code size by ~40 bytes.
	  Most other ftp servers seem to behave similar to this.

config FREETZ_BUSYBOX_FEATURE_FTPD_AUTHENTICATION
	bool "Enable authentication"
	default n
	depends on FREETZ_BUSYBOX_FTPD
	help
	  Enable basic system login as seen in telnet etc.
config FREETZ_BUSYBOX_FTPGET
	bool "ftpget"
	default n
	help
	  Retrieve a remote file via FTP.

config FREETZ_BUSYBOX_FTPPUT
	bool "ftpput"
	default n
	help
	  Store a remote file via FTP.

config FREETZ_BUSYBOX_FEATURE_FTPGETPUT_LONG_OPTIONS
	bool "Enable long options in ftpget/ftpput"
	default n
	depends on FREETZ_BUSYBOX_LONG_OPTS && (FREETZ_BUSYBOX_FTPGET || FREETZ_BUSYBOX_FTPPUT)
config FREETZ_BUSYBOX_HOSTNAME
	bool "hostname"
	default n
	help
	  Show or set the system's host name.

config FREETZ_BUSYBOX_DNSDOMAINNAME
	bool "dnsdomainname"
	default n
	help
	  Alias to "hostname -d".
config FREETZ_BUSYBOX_HTTPD
	bool "httpd"
	default n
	help
	  HTTP server.

config FREETZ_BUSYBOX_FEATURE_HTTPD_RANGES
	bool "Support 'Ranges:' header"
	default n
	depends on FREETZ_BUSYBOX_HTTPD
	help
	  Makes httpd emit "Accept-Ranges: bytes" header and understand
	  "Range: bytes=NNN-[MMM]" header. Allows for resuming interrupted
	  downloads, seeking in multimedia players etc.

config FREETZ_BUSYBOX_FEATURE_HTTPD_SETUID
	bool "Enable -u <user> option"
	default n
	depends on FREETZ_BUSYBOX_HTTPD
	help
	  This option allows the server to run as a specific user
	  rather than defaulting to the user that starts the server.
	  Use of this option requires special privileges to change to a
	  different user.

config FREETZ_BUSYBOX_FEATURE_HTTPD_BASIC_AUTH
	bool "Enable Basic http Authentication"
	default n
	depends on FREETZ_BUSYBOX_HTTPD
	help
	  Utilizes password settings from /etc/httpd.conf for basic
	  authentication on a per url basis.
	  Example for httpd.conf file:
	  /adm:toor:PaSsWd

config FREETZ_BUSYBOX_FEATURE_HTTPD_AUTH_MD5
	bool "Support MD5 crypted passwords for http Authentication"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_HTTPD_BASIC_AUTH
	help
	  Enables encrypted passwords, and wildcard user/passwords
	  in httpd.conf file.
	  User '*' means 'any system user name is ok',
	  password of '*' means 'use system password for this user'
	  Examples:
	  /adm:toor:$1$P/eKnWXS$aI1aPGxT.dJD5SzqAKWrF0
	  /adm:root:*
	  /wiki:*:*

config FREETZ_BUSYBOX_FEATURE_HTTPD_CGI
	bool "Support Common Gateway Interface (CGI)"
	default n
	depends on FREETZ_BUSYBOX_HTTPD
	help
	  This option allows scripts and executables to be invoked
	  when specific URLs are requested.

config FREETZ_BUSYBOX_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR
	bool "Support running scripts through an interpreter"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_HTTPD_CGI
	help
	  This option enables support for running scripts through an
	  interpreter. Turn this on if you want PHP scripts to work
	  properly. You need to supply an additional line in your
	  httpd.conf file:
	  *.php:/path/to/your/php

config FREETZ_BUSYBOX_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV
	bool "Set REMOTE_PORT environment variable for CGI"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_HTTPD_CGI
	help
	  Use of this option can assist scripts in generating
	  references that contain a unique port number.

config FREETZ_BUSYBOX_FEATURE_HTTPD_ENCODE_URL_STR
	bool "Enable -e option (useful for CGIs written as shell scripts)"
	default n
	depends on FREETZ_BUSYBOX_HTTPD
	help
	  This option allows html encoding of arbitrary strings for display
	  by the browser. Output goes to stdout.
	  For example, httpd -e "<Hello World>" produces
	  "&#60Hello&#32World&#62".

config FREETZ_BUSYBOX_FEATURE_HTTPD_ERROR_PAGES
	bool "Support custom error pages"
	default n
	depends on FREETZ_BUSYBOX_HTTPD
	help
	  This option allows you to define custom error pages in
	  the configuration file instead of the default HTTP status
	  error pages. For instance, if you add the line:
	        E404:/path/e404.html
	  in the config file, the server will respond the specified
	  '/path/e404.html' file instead of the terse '404 NOT FOUND'
	  message.

config FREETZ_BUSYBOX_FEATURE_HTTPD_PROXY
	bool "Support reverse proxy"
	default n
	depends on FREETZ_BUSYBOX_HTTPD
	help
	  This option allows you to define URLs that will be forwarded
	  to another HTTP server. To setup add the following line to the
	  configuration file
	        P:/url/:http://hostname[:port]/new/path/
	  Then a request to /url/myfile will be forwarded to
	  http://hostname[:port]/new/path/myfile.

config FREETZ_BUSYBOX_FEATURE_HTTPD_GZIP
	bool "Support GZIP content encoding"
	default n
	depends on FREETZ_BUSYBOX_HTTPD
	help
	  Makes httpd send files using GZIP content encoding if the
	  client supports it and a pre-compressed <file>.gz exists.
config FREETZ_BUSYBOX_IFCONFIG
	bool "ifconfig"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Ifconfig is used to configure the kernel-resident network interfaces.

config FREETZ_BUSYBOX_FEATURE_IFCONFIG_STATUS
	bool "Enable status reporting output (+7k)"
	default n
	depends on FREETZ_BUSYBOX_IFCONFIG
	help
	  If ifconfig is called with no arguments it will display the status
	  of the currently active interfaces.

config FREETZ_BUSYBOX_FEATURE_IFCONFIG_SLIP
	bool "Enable slip-specific options \"keepalive\" and \"outfill\""
	default n
	depends on FREETZ_BUSYBOX_IFCONFIG
	help
	  Allow "keepalive" and "outfill" support for SLIP. If you're not
	  planning on using serial lines, leave this unchecked.

config FREETZ_BUSYBOX_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ
	bool "Enable options \"mem_start\", \"io_addr\", and \"irq\""
	default n
	depends on FREETZ_BUSYBOX_IFCONFIG
	help
	  Allow the start address for shared memory, start address for I/O,
	  and/or the interrupt line used by the specified device.

config FREETZ_BUSYBOX_FEATURE_IFCONFIG_HW
	bool "Enable option \"hw\" (ether only)"
	default n
	depends on FREETZ_BUSYBOX_IFCONFIG
	help
	  Set the hardware address of this interface, if the device driver
	  supports  this  operation. Currently, we only support the 'ether'
	  class.

config FREETZ_BUSYBOX_FEATURE_IFCONFIG_BROADCAST_PLUS
	bool "Set the broadcast automatically"
	default n
	depends on FREETZ_BUSYBOX_IFCONFIG
	help
	  Setting this will make ifconfig attempt to find the broadcast
	  automatically if the value '+' is used.
config FREETZ_BUSYBOX_IFENSLAVE
	bool "ifenslave"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Userspace application to bind several interfaces
	  to a logical interface (use with kernel bonding driver).
config FREETZ_BUSYBOX_IFPLUGD
	bool "ifplugd"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Network interface plug detection daemon.
config FREETZ_BUSYBOX_IFUP
	bool "ifup"
	default n
	help
	  Activate the specified interfaces. This applet makes use
	  of either "ifconfig" and "route" or the "ip" command to actually
	  configure network interfaces. Therefore, you will probably also want
	  to enable either IFCONFIG and ROUTE, or enable
	  FREETZ_BUSYBOX_FEATURE_IFUPDOWN_IP and the various IP options. Of
	  course you could use non-busybox versions of these programs, so
	  against my better judgement (since this will surely result in plenty
	  of support questions on the mailing list), I do not force you to
	  enable these additional options. It is up to you to supply either
	  "ifconfig", "route" and "run-parts" or the "ip" command, either
	  via busybox or via standalone utilities.

config FREETZ_BUSYBOX_IFDOWN
	bool "ifdown"
	default n
	help
	  Deactivate the specified interfaces.

config FREETZ_BUSYBOX_IFUPDOWN_IFSTATE_PATH
	string "Absolute path to ifstate file"
	default "/var/run/ifstate"
	depends on FREETZ_BUSYBOX_IFUP || FREETZ_BUSYBOX_IFDOWN
	help
	  ifupdown keeps state information in a file called ifstate.
	  Typically it is located in /var/run/ifstate, however
	  some distributions tend to put it in other places
	  (debian, for example, uses /etc/network/run/ifstate).
	  This config option defines location of ifstate.

config FREETZ_BUSYBOX_FEATURE_IFUPDOWN_IP
	bool "Use ip tool (else ifconfig/route is used)"
	default n
	depends on FREETZ_BUSYBOX_IFUP || FREETZ_BUSYBOX_IFDOWN
	help
	  Use the iproute "ip" command to implement "ifup" and "ifdown", rather
	  than the default of using the older "ifconfig" and "route" utilities.

	  If Y: you must install either the full-blown iproute2 package
	  or enable "ip" applet in Busybox, or the "ifup" and "ifdown" applets
	  will not work.

	  If N: you must install either the full-blown ifconfig and route
	  utilities, or enable these applets in Busybox.

config FREETZ_BUSYBOX_FEATURE_IFUPDOWN_IPV4
	bool "Support IPv4"
	default n
	depends on FREETZ_BUSYBOX_IFUP || FREETZ_BUSYBOX_IFDOWN
	help
	  If you want ifup/ifdown to talk IPv4, leave this on.

config FREETZ_BUSYBOX_FEATURE_IFUPDOWN_IPV6
	bool "Support IPv6"
	default n
	depends on (FREETZ_BUSYBOX_IFUP || FREETZ_BUSYBOX_IFDOWN) && FREETZ_BUSYBOX_FEATURE_IPV6
	help
	  If you need support for IPv6, turn this option on.


config FREETZ_BUSYBOX_FEATURE_IFUPDOWN_MAPPING
	bool "Enable mapping support"
	default n
	depends on FREETZ_BUSYBOX_IFUP || FREETZ_BUSYBOX_IFDOWN
	help
	  This enables support for the "mapping" stanza, unless you have
	  a weird network setup you don't need it.

config FREETZ_BUSYBOX_FEATURE_IFUPDOWN_EXTERNAL_DHCP
	bool "Support external DHCP clients"
	default n
	depends on FREETZ_BUSYBOX_IFUP || FREETZ_BUSYBOX_IFDOWN
	help
	  This enables support for the external dhcp clients. Clients are
	  tried in the following order: dhcpcd, dhclient, pump and udhcpc.
	  Otherwise, if udhcpc applet is enabled, it is used.
	  Otherwise, ifup/ifdown will have no support for DHCP.
config FREETZ_BUSYBOX_INETD
	bool "inetd"
	default n
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  Internet superserver daemon

config FREETZ_BUSYBOX_FEATURE_INETD_SUPPORT_BUILTIN_ECHO
	bool "Support echo service"
	default n
	depends on FREETZ_BUSYBOX_INETD
	help
	  Echo received data internal inetd service

config FREETZ_BUSYBOX_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD
	bool "Support discard service"
	default n
	depends on FREETZ_BUSYBOX_INETD
	help
	  Internet /dev/null internal inetd service

config FREETZ_BUSYBOX_FEATURE_INETD_SUPPORT_BUILTIN_TIME
	bool "Support time service"
	default n
	depends on FREETZ_BUSYBOX_INETD
	help
	  Return 32 bit time since 1900 internal inetd service

config FREETZ_BUSYBOX_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME
	bool "Support daytime service"
	default n
	depends on FREETZ_BUSYBOX_INETD
	help
	  Return human-readable time internal inetd service

config FREETZ_BUSYBOX_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN
	bool "Support chargen service"
	default n
	depends on FREETZ_BUSYBOX_INETD
	help
	  Familiar character generator internal inetd service

config FREETZ_BUSYBOX_FEATURE_INETD_RPC
	bool "Support RPC services"
	default n  # very rarely used, and needs Sun RPC support in libc
	depends on FREETZ_BUSYBOX_INETD
	select FREETZ_BUSYBOX_FEATURE_HAVE_RPC
	help
	  Support Sun-RPC based services
config FREETZ_BUSYBOX_IP
	bool "ip"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  The "ip" applet is a TCP/IP interface configuration and routing
	  utility. You generally don't need "ip" to use busybox with
	  TCP/IP.

config FREETZ_BUSYBOX_IPADDR
	bool "ipaddr"
	default n
	select FREETZ_BUSYBOX_FEATURE_IP_ADDRESS
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Support short form of ip addr: ipaddr

config FREETZ_BUSYBOX_IPLINK
	bool "iplink"
	default n
	select FREETZ_BUSYBOX_FEATURE_IP_LINK
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Support short form of ip link: iplink

config FREETZ_BUSYBOX_IPROUTE
	bool "iproute"
	default n
	select FREETZ_BUSYBOX_FEATURE_IP_ROUTE
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Support short form of ip route: iproute

config FREETZ_BUSYBOX_IPTUNNEL
	bool "iptunnel"
	default n
	select FREETZ_BUSYBOX_FEATURE_IP_TUNNEL
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Support short form of ip tunnel: iptunnel

config FREETZ_BUSYBOX_IPRULE
	bool "iprule"
	default n
	select FREETZ_BUSYBOX_FEATURE_IP_RULE
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Support short form of ip rule: iprule

config FREETZ_BUSYBOX_IPNEIGH
	bool "ipneigh"
	default n
	select FREETZ_BUSYBOX_FEATURE_IP_NEIGH
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Support short form of ip neigh: ipneigh

config FREETZ_BUSYBOX_FEATURE_IP_ADDRESS
	bool "ip address"
	default n
	depends on FREETZ_BUSYBOX_IP || FREETZ_BUSYBOX_IPADDR
	help
	  Address manipulation support for the "ip" applet.

config FREETZ_BUSYBOX_FEATURE_IP_LINK
	bool "ip link"
	default n
	depends on FREETZ_BUSYBOX_IP || FREETZ_BUSYBOX_IPLINK
	help
	  Configure network devices with "ip".

config FREETZ_BUSYBOX_FEATURE_IP_ROUTE
	bool "ip route"
	default n
	depends on FREETZ_BUSYBOX_IP || FREETZ_BUSYBOX_IPROUTE
	help
	  Add support for routing table management to "ip".

config FREETZ_BUSYBOX_FEATURE_IP_ROUTE_DIR
	string "ip route configuration directory"
	default "/etc/iproute2"
	depends on FREETZ_BUSYBOX_FEATURE_IP_ROUTE
	help
	  Location of the "ip" applet routing configuration.

config FREETZ_BUSYBOX_FEATURE_IP_TUNNEL
	bool "ip tunnel"
	default n
	depends on FREETZ_BUSYBOX_IP || FREETZ_BUSYBOX_IPTUNNEL
	help
	  Add support for tunneling commands to "ip".

config FREETZ_BUSYBOX_FEATURE_IP_RULE
	bool "ip rule"
	default n
	depends on FREETZ_BUSYBOX_IP || FREETZ_BUSYBOX_IPRULE
	help
	  Add support for rule commands to "ip".

config FREETZ_BUSYBOX_FEATURE_IP_NEIGH
	bool "ip neighbor"
	default n
	depends on FREETZ_BUSYBOX_IP || FREETZ_BUSYBOX_IPNEIGH
	help
	  Add support for neighbor commands to "ip".

config FREETZ_BUSYBOX_FEATURE_IP_RARE_PROTOCOLS
	bool "Support displaying rarely used link types"
	default n
	depends on FREETZ_BUSYBOX_IP || FREETZ_BUSYBOX_IPADDR || FREETZ_BUSYBOX_IPLINK || FREETZ_BUSYBOX_IPROUTE || FREETZ_BUSYBOX_IPTUNNEL || FREETZ_BUSYBOX_IPRULE || FREETZ_BUSYBOX_IPNEIGH
	help
	  If you are not going to use links of type "frad", "econet",
	  "bif" etc, you probably don't need to enable this.
	  Ethernet, wireless, infrared, ppp/slip, ip tunnelling
	  link types are supported without this option selected.
config FREETZ_BUSYBOX_IPCALC
	bool "ipcalc"
	default n
	help
	  ipcalc takes an IP address and netmask and calculates the
	  resulting broadcast, network, and host range.

config FREETZ_BUSYBOX_FEATURE_IPCALC_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_IPCALC && FREETZ_BUSYBOX_LONG_OPTS

config FREETZ_BUSYBOX_FEATURE_IPCALC_FANCY
	bool "Fancy IPCALC, more options, adds 1 kbyte"
	default n
	depends on FREETZ_BUSYBOX_IPCALC
	help
	  Adds the options hostname, prefix and silent to the output of
	  "ipcalc".
config FREETZ_BUSYBOX_FAKEIDENTD
	bool "fakeidentd"
	default n
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  fakeidentd listens on the ident port and returns a predefined
	  fake value on any query.
config FREETZ_BUSYBOX_NAMEIF
	bool "nameif"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  nameif is used to rename network interface by its MAC address.
	  Renamed interfaces MUST be in the down state.
	  It is possible to use a file (default: /etc/mactab)
	  with list of new interface names and MACs.
	  Maximum interface name length: IFNAMSIZ = 16
	  File fields are separated by space or tab.
	  File format:
	  # Comment
	  new_interface_name    XX:XX:XX:XX:XX:XX

config FREETZ_BUSYBOX_FEATURE_NAMEIF_EXTENDED
	bool "Extended nameif"
	default n
	depends on FREETZ_BUSYBOX_NAMEIF
	help
	  This extends the nameif syntax to support the bus_info, driver,
	  phyaddr selectors. The syntax is compatible to the normal nameif.
	  File format:
	    new_interface_name  driver=asix bus=usb-0000:00:08.2-3
	    new_interface_name  bus=usb-0000:00:08.2-3 00:80:C8:38:91:B5
	    new_interface_name  phy_address=2 00:80:C8:38:91:B5
	    new_interface_name  mac=00:80:C8:38:91:B5
	    new_interface_name  00:80:C8:38:91:B5
config FREETZ_BUSYBOX_NBDCLIENT
	bool "nbd-client"
	default n
	help
	  Network block device client
config FREETZ_BUSYBOX_NC
	bool "nc"
	default n
	help
	  A simple Unix utility which reads and writes data across network
	  connections.

config FREETZ_BUSYBOX_NC_SERVER
	bool "Netcat server options (-l)"
	default n
	depends on FREETZ_BUSYBOX_NC
	help
	  Allow netcat to act as a server.

config FREETZ_BUSYBOX_NC_EXTRA
	bool "Netcat extensions (-eiw and -f FILE)"
	default n
	depends on FREETZ_BUSYBOX_NC
	help
	  Add -e (support for executing the rest of the command line after
	  making or receiving a successful connection), -i (delay interval for
	  lines sent), -w (timeout for initial connection).

config FREETZ_BUSYBOX_NC_110_COMPAT
	bool "Netcat 1.10 compatibility (+2.5k)"
	default n  # off specially for Rob
	depends on FREETZ_BUSYBOX_NC
	help
	  This option makes nc closely follow original nc-1.10.
	  The code is about 2.5k bigger. It enables
	  -s ADDR, -n, -u, -v, -o FILE, -z options, but loses
	  busybox-specific extensions: -f FILE.
config FREETZ_BUSYBOX_NETSTAT
	bool "netstat"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  netstat prints information about the Linux networking subsystem.

config FREETZ_BUSYBOX_FEATURE_NETSTAT_WIDE
	bool "Enable wide output"
	default n
	depends on FREETZ_BUSYBOX_NETSTAT
	help
	  Add support for wide columns. Useful when displaying IPv6 addresses
	  (-W option).

config FREETZ_BUSYBOX_FEATURE_NETSTAT_PRG
	bool "Enable PID/Program name output"
	default n
	depends on FREETZ_BUSYBOX_NETSTAT
	help
	  Add support for -p flag to print out PID and program name.
	  +700 bytes of code.
config FREETZ_BUSYBOX_NSLOOKUP
	bool "nslookup"
	default n
	help
	  nslookup is a tool to query Internet name servers.
config FREETZ_BUSYBOX_NTPD
	bool "ntpd"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  The NTP client/server daemon.

config FREETZ_BUSYBOX_FEATURE_NTPD_SERVER
	bool "Make ntpd usable as a NTP server"
	default n
	depends on FREETZ_BUSYBOX_NTPD
	help
	  Make ntpd usable as a NTP server. If you disable this option
	  ntpd will be usable only as a NTP client.

config FREETZ_BUSYBOX_FEATURE_NTPD_CONF
	bool "Make ntpd understand /etc/ntp.conf"
	default n
	depends on FREETZ_BUSYBOX_NTPD
	help
	  Make ntpd look in /etc/ntp.conf for peers. Only "server address"
	  is supported.
config FREETZ_BUSYBOX_PING
	bool "ping"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  ping uses the ICMP protocol's mandatory ECHO_REQUEST datagram to
	  elicit an ICMP ECHO_RESPONSE from a host or gateway.

config FREETZ_BUSYBOX_PING6
	bool "ping6"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_IPV6
	help
	  This will give you a ping that can talk IPv6.

config FREETZ_BUSYBOX_FEATURE_FANCY_PING
	bool "Enable fancy ping output"
	default n
	depends on FREETZ_BUSYBOX_PING || FREETZ_BUSYBOX_PING6
	help
	  Make the output from the ping applet include statistics, and at the
	  same time provide full support for ICMP packets.
config FREETZ_BUSYBOX_PSCAN
	bool "pscan"
	default n
	help
	  Simple network port scanner.
config FREETZ_BUSYBOX_ROUTE
	bool "route"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Route displays or manipulates the kernel's IP routing tables.
config FREETZ_BUSYBOX_SLATTACH
	bool "slattach"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  slattach is a small utility to attach network interfaces to serial
	  lines.
config FREETZ_BUSYBOX_SSL_CLIENT
	bool "ssl_client"
	default n
	select FREETZ_BUSYBOX_TLS
	help
	  This tool pipes data to/from a socket, TLS-encrypting it.
config FREETZ_BUSYBOX_STUN_IP
	bool "stun-ip"
	default n
	help
	  determine external IP address via STUN

config FREETZ_BUSYBOX_TCPSVD
	bool "tcpsvd"
	default n
	help
	  tcpsvd listens on a TCP port and runs a program for each new
	  connection.

config FREETZ_BUSYBOX_UDPSVD
	bool "udpsvd"
	default n
	help
	  udpsvd listens on an UDP port and runs a program for each new
	  connection.
config FREETZ_BUSYBOX_TELNET
	bool "telnet"
	default n
	help
	  Telnet is an interface to the TELNET protocol, but is also commonly
	  used to test other simple protocols.

config FREETZ_BUSYBOX_FEATURE_TELNET_TTYPE
	bool "Pass TERM type to remote host"
	default n
	depends on FREETZ_BUSYBOX_TELNET
	help
	  Setting this option will forward the TERM environment variable to the
	  remote host you are connecting to. This is useful to make sure that
	  things like ANSI colors and other control sequences behave.

config FREETZ_BUSYBOX_FEATURE_TELNET_AUTOLOGIN
	bool "Pass USER type to remote host"
	default n
	depends on FREETZ_BUSYBOX_TELNET
	help
	  Setting this option will forward the USER environment variable to the
	  remote host you are connecting to. This is useful when you need to
	  log into a machine without telling the username (autologin). This
	  option enables `-a' and `-l USER' arguments.

config FREETZ_BUSYBOX_FEATURE_TELNET_WIDTH
	bool "Enable window size autodetection"
	default n
	depends on FREETZ_BUSYBOX_TELNET
config FREETZ_BUSYBOX_TELNETD
	bool "telnetd"
	default n
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  A daemon for the TELNET protocol, allowing you to log onto the host
	  running the daemon. Please keep in mind that the TELNET protocol
	  sends passwords in plain text. If you can't afford the space for an
	  SSH daemon and you trust your network, you may say 'y' here. As a
	  more secure alternative, you should seriously consider installing the
	  very small Dropbear SSH daemon instead:
		http://matt.ucc.asn.au/dropbear/dropbear.html

	  Note that for busybox telnetd to work you need several things:
	  First of all, your kernel needs:
		  CONFIG_UNIX98_PTYS=y

	  Next, you need a /dev/pts directory on your root filesystem:

		  $ ls -ld /dev/pts
		  drwxr-xr-x  2 root root 0 Sep 23 13:21 /dev/pts/

	  Next you need the pseudo terminal master multiplexer /dev/ptmx:

		  $ ls -la /dev/ptmx
		  crw-rw-rw-  1 root tty 5, 2 Sep 23 13:55 /dev/ptmx

	  Any /dev/ttyp[0-9]* files you may have can be removed.
	  Next, you need to mount the devpts filesystem on /dev/pts using:

		  mount -t devpts devpts /dev/pts

	  You need to be sure that busybox has LOGIN and
	  FREETZ_BUSYBOX_FEATURE_SUID enabled. And finally, you should make
	  certain that Busybox has been installed setuid root:

		chown root.root /bin/busybox
		chmod 4755 /bin/busybox

	  with all that done, telnetd _should_ work....

config FREETZ_BUSYBOX_FEATURE_TELNETD_STANDALONE
	bool "Support standalone telnetd (not inetd only)"
	default n
	depends on FREETZ_BUSYBOX_TELNETD
	help
	  Selecting this will make telnetd able to run standalone.

config FREETZ_BUSYBOX_FEATURE_TELNETD_INETD_WAIT
	bool "Support -w SEC option (inetd wait mode)"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_TELNETD_STANDALONE
	help
	  This option allows you to run telnetd in "inet wait" mode.
	  Example inetd.conf line (note "wait", not usual "nowait"):

	  telnet stream tcp wait root /bin/telnetd telnetd -w10

	  In this example, inetd passes _listening_ socket_ as fd 0
	  to telnetd when connection appears.
	  telnetd will wait for connections until all existing
	  connections are closed, and no new connections
	  appear during 10 seconds. Then it exits, and inetd continues
	  to listen for new connections.

	  This option is rarely used. "tcp nowait" is much more usual
	  way of running tcp services, including telnetd.
	  You most probably want to say N here.
config FREETZ_BUSYBOX_TFTP
	bool "tftp"
	default n
	help
	  This enables the Trivial File Transfer Protocol client program. TFTP
	  is usually used for simple, small transfers such as a root image
	  for a network-enabled bootloader.

config FREETZ_BUSYBOX_TFTPD
	bool "tftpd"
	default n
	help
	  This enables the Trivial File Transfer Protocol server program.
	  It expects that stdin is a datagram socket and a packet
	  is already pending on it. It will exit after one transfer.
	  In other words: it should be run from inetd in nowait mode,
	  or from udpsvd. Example: "udpsvd -E 0 69 tftpd DIR"

comment "Common options for tftp/tftpd"
	depends on FREETZ_BUSYBOX_TFTP || FREETZ_BUSYBOX_TFTPD

config FREETZ_BUSYBOX_FEATURE_TFTP_GET
	bool "Enable 'tftp get' and/or tftpd upload code"
	default n
	depends on FREETZ_BUSYBOX_TFTP || FREETZ_BUSYBOX_TFTPD
	help
	  Add support for the GET command within the TFTP client. This allows
	  a client to retrieve a file from a TFTP server.
	  Also enable upload support in tftpd, if tftpd is selected.

	  Note: this option does _not_ make tftpd capable of download
	  (the usual operation people need from it)!

config FREETZ_BUSYBOX_FEATURE_TFTP_PUT
	bool "Enable 'tftp put' and/or tftpd download code"
	default n
	depends on FREETZ_BUSYBOX_TFTP || FREETZ_BUSYBOX_TFTPD
	help
	  Add support for the PUT command within the TFTP client. This allows
	  a client to transfer a file to a TFTP server.
	  Also enable download support in tftpd, if tftpd is selected.

config FREETZ_BUSYBOX_FEATURE_TFTP_BLOCKSIZE
	bool "Enable 'blksize' and 'tsize' protocol options"
	default n
	depends on FREETZ_BUSYBOX_TFTP || FREETZ_BUSYBOX_TFTPD
	help
	  Allow tftp to specify block size, and tftpd to understand
	  "blksize" and "tsize" options.

config FREETZ_BUSYBOX_FEATURE_TFTP_PROGRESS_BAR
	bool "Enable progress bar"
	default n
	depends on FREETZ_BUSYBOX_TFTP && FREETZ_BUSYBOX_FEATURE_TFTP_BLOCKSIZE

config FREETZ_BUSYBOX_TFTP_DEBUG
	bool "Enable debug"
	default n
	depends on FREETZ_BUSYBOX_TFTP || FREETZ_BUSYBOX_TFTPD
	help
	  Make tftp[d] print debugging messages on stderr.
	  This is useful if you are diagnosing a bug in tftp[d].
config FREETZ_BUSYBOX_TLS
	bool #No description makes it a hidden option
	default n
config FREETZ_BUSYBOX_TRACEROUTE
	bool "traceroute"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Utility to trace the route of IP packets.

config FREETZ_BUSYBOX_TRACEROUTE6
	bool "traceroute6"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_IPV6
	help
	  Utility to trace the route of IPv6 packets.

config FREETZ_BUSYBOX_FEATURE_TRACEROUTE_VERBOSE
	bool "Enable verbose output"
	default n
	depends on FREETZ_BUSYBOX_TRACEROUTE || FREETZ_BUSYBOX_TRACEROUTE6
	help
	  Add some verbosity to traceroute. This includes among other things
	  hostnames and ICMP response types.

config FREETZ_BUSYBOX_FEATURE_TRACEROUTE_USE_ICMP
	bool "Enable -I option (use ICMP instead of UDP)"
	default n
	depends on FREETZ_BUSYBOX_TRACEROUTE || FREETZ_BUSYBOX_TRACEROUTE6
config FREETZ_BUSYBOX_TUNCTL
	bool "tunctl"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  tunctl creates or deletes tun devices.

config FREETZ_BUSYBOX_FEATURE_TUNCTL_UG
	bool "Support owner:group assignment"
	default n
	depends on FREETZ_BUSYBOX_TUNCTL
	help
	  Allow to specify owner and group of newly created interface.
	  340 bytes of pure bloat. Say no here.
config FREETZ_BUSYBOX_VCONFIG
	bool "vconfig"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  Creates, removes, and configures VLAN interfaces
config FREETZ_BUSYBOX_WGET
	bool "wget"
	default n
	depends on !FREETZ_PACKAGE_WGET || FREETZ_WGET_ALWAYS_AVAILABLE
	help
	  wget is a utility for non-interactive download of files from HTTP
	  and FTP servers.

config FREETZ_BUSYBOX_FEATURE_WGET_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_WGET && FREETZ_BUSYBOX_LONG_OPTS

config FREETZ_BUSYBOX_FEATURE_WGET_STATUSBAR
	bool "Enable progress bar (+2k)"
	default n
	depends on FREETZ_BUSYBOX_WGET

config FREETZ_BUSYBOX_FEATURE_WGET_AUTHENTICATION
	bool "Enable HTTP authentication"
	default n
	depends on FREETZ_BUSYBOX_WGET
	help
	  Support authenticated HTTP transfers.

config FREETZ_BUSYBOX_FEATURE_WGET_TIMEOUT
	bool "Enable timeout option -T SEC"
	default n
	depends on FREETZ_BUSYBOX_WGET
	help
	  Supports network read and connect timeouts for wget,
	  so that wget will give up and timeout, through the -T
	  command line option.

	  Currently only connect and network data read timeout are
	  supported (i.e., timeout is not applied to the DNS query). When
	  FREETZ_BUSYBOX_FEATURE_WGET_LONG_OPTIONS is also enabled, the --timeout option
	  will work in addition to -T.

config FREETZ_BUSYBOX_FEATURE_WGET_HTTPS
	bool "Support HTTPS using internal TLS code"
	default n
	depends on FREETZ_BUSYBOX_WGET
	select FREETZ_BUSYBOX_TLS
	help
	  wget will use internal TLS code to connect to https:// URLs.
	  Note:
	  On NOMMU machines, ssl_helper applet should be available
	  in the $PATH for this to work. Make sure to select that applet.

	  Note: currently, TLS code only makes TLS I/O work, it
	  does *not* check that the peer is who it claims to be, etc.
	  IOW: it uses peer-supplied public keys to establish encryption
	  and signing keys, then encrypts and signs outgoing data and
	  decrypts incoming data.
	  It does not check signature hashes on the incoming data:
	  this means that attackers manipulating TCP packets can
	  send altered data and we unknowingly receive garbage.
	  (This check might be relatively easy to add).
	  It does not check public key's certificate:
	  this means that the peer may be an attacker impersonating
	  the server we think we are talking to.

	  If you think this is unacceptable, consider this. As more and more
	  servers switch to HTTPS-only operation, without such "crippled"
	  TLS code it is *impossible* to simply download a kernel source
	  from kernel.org. Which can in real world translate into
	  "my small automatic tooling to build cross-compilers from sources
	  no longer works, I need to additionally keep a local copy
	  of ~4 megabyte source tarball of a SSL library and ~2 megabyte
	  source of wget, need to compile and built both before I can
	  download anything. All this despite the fact that the build
	  is done in a QEMU sandbox on a machine with absolutely nothing
	  worth stealing, so I don't care if someone would go to a lot
	  of trouble to intercept my HTTPS download to send me an altered
	  kernel tarball".

	  If you still think this is unacceptable, send patches.

	  If you still think this is unacceptable, do not want to send
	  patches, but do want to waste bandwidth expaining how wrong
	  it is, you will be ignored.

config FREETZ_BUSYBOX_FEATURE_WGET_OPENSSL
	bool "Try to connect to HTTPS using openssl"
	default n
	depends on FREETZ_BUSYBOX_WGET
	select FREETZ_PACKAGE_OPENSSL
	help
	  Try to use openssl to handle HTTPS.

	  OpenSSL has a simple SSL client for debug purposes.
	  If you select this option, wget will effectively run:
	  "openssl s_client -quiet -connect hostname:443
	  -servername hostname 2>/dev/null" and pipe its data
	  through it. -servername is not used if hostname is numeric.
	  Note inconvenient API: host resolution is done twice,
	  and there is no guarantee openssl's idea of IPv6 address
	  format is the same as ours.
	  Another problem is that s_client prints debug information
	  to stderr, and it needs to be suppressed. This means
	  all error messages get suppressed too.
	  openssl is also a big binary, often dynamically linked
	  against ~15 libraries.

	  If openssl can't be executed, internal TLS code will be used
	  (if you enabled it); if openssl can be executed but fails later,
	  wget can't detect this, and download will fail.
config FREETZ_BUSYBOX_WHOIS
	bool "whois"
	default n
	help
	  whois is a client for the whois directory service
config FREETZ_BUSYBOX_ZCIP
	bool "zcip"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	  ZCIP provides ZeroConf IPv4 address selection, according to RFC 3927.
	  It's a daemon that allocates and defends a dynamically assigned
	  address on the 169.254/16 network, requiring no system administrator.

	  See http://www.zeroconf.org for further details, and "zcip.script"
	  in the busybox examples.

# INCLUDE_BEGIN networking/udhcp/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

config FREETZ_BUSYBOX_UDHCPC6
	bool "udhcpc6 (DHCPv6 client, EXPERIMENTAL)"
	default n  # not yet ready
	depends on FREETZ_BUSYBOX_FEATURE_IPV6
	help
	  udhcpc6 is a DHCPv6 client

config FREETZ_BUSYBOX_FEATURE_UDHCPC6_RFC3646
	bool "Support RFC 3646 (DNS server and search list)"
	default n
	depends on FREETZ_BUSYBOX_UDHCPC6
	help
	  List of DNS servers and domain search list can be requested with
	  "-O dns" and "-O search". If server gives these values,
	  they will be set in environment variables "dns" and "search".

config FREETZ_BUSYBOX_FEATURE_UDHCPC6_RFC4704
	bool "Support RFC 4704 (Client FQDN)"
	default n
	depends on FREETZ_BUSYBOX_UDHCPC6
	help
	  You can request FQDN to be given by server using "-O fqdn".

config FREETZ_BUSYBOX_FEATURE_UDHCPC6_RFC4833
	bool "Support RFC 4833 (Timezones)"
	default n
	depends on FREETZ_BUSYBOX_UDHCPC6
	help
	  You can request POSIX timezone with "-O tz" and timezone name
	  with "-O timezone".

config FREETZ_BUSYBOX_UDHCPD
	bool "udhcpd (DHCP server)"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  udhcpd is a DHCP server geared primarily toward embedded systems,
	  while striving to be fully functional and RFC compliant.

config FREETZ_BUSYBOX_FEATURE_UDHCPD_WRITE_LEASES_EARLY
	bool "Rewrite the lease file at every new acknowledge"
	default n
	depends on FREETZ_BUSYBOX_UDHCPD
	help
	  If selected, udhcpd will write a new file with leases every
	  time a new lease has been accepted, thus eliminating the need
	  to send SIGUSR1 for the initial writing or updating. Any timed
	  rewriting remains undisturbed.

config FREETZ_BUSYBOX_FEATURE_UDHCPD_BASE_IP_ON_MAC
	bool "Select IP address based on client MAC"
	default n
	depends on FREETZ_BUSYBOX_UDHCPD
	help
	  If selected, udhcpd will base its selection of IP address to offer
	  on the client's hardware address. Otherwise udhcpd uses the next
	  consecutive free address.

	  This reduces the frequency of IP address changes for clients
	  which let their lease expire, and makes consecutive DHCPOFFERS
	  for the same client to (almost always) contain the same
	  IP address.

config FREETZ_BUSYBOX_DHCPD_LEASES_FILE
	string "Absolute path to lease file"
	default "/var/lib/misc/udhcpd.leases"
	depends on FREETZ_BUSYBOX_UDHCPD
	help
	  udhcpd stores addresses in a lease file. This is the absolute path
	  of the file. Normally it is safe to leave it untouched.

config FREETZ_BUSYBOX_DUMPLEASES
	bool "dumpleases"
	default n
	help
	  dumpleases displays the leases written out by the udhcpd.
	  Lease times are stored in the file by time remaining in lease, or
	  by the absolute time that it expires in seconds from epoch.

config FREETZ_BUSYBOX_DHCPRELAY
	bool "dhcprelay"
	default n
	help
	  dhcprelay listens for dhcp requests on one or more interfaces
	  and forwards these requests to a different interface or dhcp
	  server.

config FREETZ_BUSYBOX_UDHCPC
	bool "udhcpc (DHCP client)"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  udhcpc is a DHCP client geared primarily toward embedded systems,
	  while striving to be fully functional and RFC compliant.

	  The udhcp client negotiates a lease with the DHCP server and
	  runs a script when a lease is obtained or lost.

config FREETZ_BUSYBOX_FEATURE_UDHCPC_ARPING
	bool "Verify that the offered address is free, using ARP ping"
	default n
	depends on FREETZ_BUSYBOX_UDHCPC
	help
	  If selected, udhcpc will send ARP probes and make sure
	  the offered address is really not in use by anyone. The client
	  will DHCPDECLINE the offer if the address is in use,
	  and restart the discover process.

config FREETZ_BUSYBOX_FEATURE_UDHCPC_SANITIZEOPT
	bool "Do not pass malformed host and domain names"
	default n
	depends on FREETZ_BUSYBOX_UDHCPC
	help
	  If selected, udhcpc will check some options (such as option 12 -
	  hostname) and if they don't look like valid hostnames
	  (for example, if they start with dash or contain spaces),
	  they will be replaced with string "bad" when exporting
	  to the environment.

config FREETZ_BUSYBOX_UDHCPC_DEFAULT_SCRIPT
	string "Absolute path to config script"
	default "/usr/share/udhcpc/default.script"
	depends on FREETZ_BUSYBOX_UDHCPC
	help
	  This script is called after udhcpc receives an answer. See
	  examples/udhcp for a working example. Normally it is safe
	  to leave this untouched.

config FREETZ_BUSYBOX_FEATURE_UDHCP_PORT
	bool "Enable '-P port' option for udhcpd and udhcpc"
	default n
	depends on FREETZ_BUSYBOX_UDHCPD || FREETZ_BUSYBOX_UDHCPC
	help
	  At the cost of ~300 bytes, enables -P port option.
	  This feature is typically not needed.

config FREETZ_BUSYBOX_UDHCP_DEBUG
	int "Maximum verbosity level for udhcp applets (0..9)"
	default 9
	range 0 9
	depends on FREETZ_BUSYBOX_UDHCPD || FREETZ_BUSYBOX_UDHCPC || FREETZ_BUSYBOX_DHCPRELAY
	help
	  Verbosity can be increased with multiple -v options.
	  This option controls how high it can be cranked up.

	  Bigger values result in bigger code. Levels above 1
	  are very verbose and useful for debugging only.

config FREETZ_BUSYBOX_FEATURE_UDHCP_RFC3397
	bool "Support RFC3397 domain search (experimental)"
	default n
	depends on FREETZ_BUSYBOX_UDHCPD || FREETZ_BUSYBOX_UDHCPC
	help
	  If selected, both client and server will support passing of domain
	  search lists via option 119, specified in RFC 3397,
	  and SIP servers option 120, specified in RFC 3361.

config FREETZ_BUSYBOX_FEATURE_UDHCP_8021Q
	bool "Support 802.1Q VLAN parameters"
	default n
	depends on FREETZ_BUSYBOX_UDHCPD || FREETZ_BUSYBOX_UDHCPC
	help
	  If selected, both client and server will support passing of VLAN
	  ID and priority via options 132 and 133 as per 802.1Q.

config FREETZ_BUSYBOX_UDHCPC_SLACK_FOR_BUGGY_SERVERS
	int "DHCP options slack buffer size"
	default 80
	range 0 924
	depends on FREETZ_BUSYBOX_UDHCPD || FREETZ_BUSYBOX_UDHCPC
	help
	  Some buggy DHCP servers send DHCP offer packets with option
	  field larger than we expect (which might also be considered a
	  buffer overflow attempt). These packets are normally discarded.
	  If circumstances beyond your control force you to support such
	  servers, this may help. The upper limit (924) makes dhcpc accept
	  even 1500 byte packets (maximum-sized ethernet packets).

	  This option does not make dhcp[cd] emit non-standard
	  sized packets.

	  Known buggy DHCP servers:
	  3Com OfficeConnect Remote 812 ADSL Router:
	    seems to confuse maximum allowed UDP packet size with
	    maximum size of entire IP packet, and sends packets which are
	    28 bytes too large.
	  Seednet (ISP) VDSL: sends packets 2 bytes too large.

# INCLUDE_END networking/udhcp/Config.in

config FREETZ_BUSYBOX_IFUPDOWN_UDHCPC_CMD_OPTIONS
	string "ifup udhcpc command line options"
	default "-R -n"
	depends on FREETZ_BUSYBOX_IFUP || FREETZ_BUSYBOX_IFDOWN
	help
	  Command line options to pass to udhcpc from ifup.
	  Intended to alter options not available in /etc/network/interfaces.
	  (IE: --syslog --background etc...)

endmenu

# INCLUDE_END networking/Config.in
# INCLUDE_BEGIN printutils/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Print Utilities"

config FREETZ_BUSYBOX_LPD
	bool "lpd"
	default n
	help
	  lpd is a print spooling daemon.
config FREETZ_BUSYBOX_LPR
	bool "lpr"
	default n
	help
	  lpr sends files (or standard input) to a print spooling daemon.

config FREETZ_BUSYBOX_LPQ
	bool "lpq"
	default n
	help
	  lpq is a print spool queue examination and manipulation program.

endmenu

# INCLUDE_END printutils/Config.in
# INCLUDE_BEGIN mailutils/Config.in
# DO NOT EDIT. This file is generated from Config.src
menu "Mail Utilities"

config FREETZ_BUSYBOX_MAKEMIME
	bool "makemime"
	default n
	help
	  Create MIME-formatted messages.
config FREETZ_BUSYBOX_POPMAILDIR
	bool "popmaildir"
	default n
	help
	  Simple yet powerful POP3 mail popper. Delivers content
	  of remote mailboxes to local Maildir.

config FREETZ_BUSYBOX_FEATURE_POPMAILDIR_DELIVERY
	bool "Allow message filters and custom delivery program"
	default n
	depends on FREETZ_BUSYBOX_POPMAILDIR
	help
	  Allow to use a custom program to filter the content
	  of the message before actual delivery (-F "prog [args...]").
	  Allow to use a custom program for message actual delivery
	  (-M "prog [args...]").
config FREETZ_BUSYBOX_REFORMIME
	bool "reformime"
	default n
	help
	  Parse MIME-formatted messages.

config FREETZ_BUSYBOX_FEATURE_REFORMIME_COMPAT
	bool "Accept and ignore options other than -x and -X"
	default n
	depends on FREETZ_BUSYBOX_REFORMIME
	help
	  Accept (for compatibility only) and ignore options
	  other than -x and -X.
config FREETZ_BUSYBOX_SENDMAIL
	bool "sendmail"
	default n
	help
	  Barebones sendmail.

config FREETZ_BUSYBOX_FEATURE_MIME_CHARSET
	string "Default charset"
	default "us-ascii"
	depends on FREETZ_BUSYBOX_MAKEMIME || FREETZ_BUSYBOX_REFORMIME || FREETZ_BUSYBOX_SENDMAIL
	help
	  Default charset of the message.

endmenu

# INCLUDE_END mailutils/Config.in
# INCLUDE_BEGIN procps/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Process Utilities"

config FREETZ_BUSYBOX_FREE
	bool "free"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX #sysinfo()
	help
	  free displays the total amount of free and used physical and swap
	  memory in the system, as well as the buffers used by the kernel.
	  The shared memory column should be ignored; it is obsolete.
config FREETZ_BUSYBOX_FUSER
	bool "fuser"
	default n
	help
	  fuser lists all PIDs (Process IDs) that currently have a given
	  file open. fuser can also list all PIDs that have a given network
	  (TCP or UDP) port open.
config FREETZ_BUSYBOX_IOSTAT
	bool "iostat"
	default n
	help
	  Report CPU and I/O statistics
config FREETZ_BUSYBOX_KILL
	bool "kill"
	default n
	help
	  The command kill sends the specified signal to the specified
	  process or process group. If no signal is specified, the TERM
	  signal is sent.

config FREETZ_BUSYBOX_KILLALL
	bool "killall"
	default n
	help
	  killall sends a signal to all processes running any of the
	  specified commands. If no signal name is specified, SIGTERM is
	  sent.

config FREETZ_BUSYBOX_KILLALL5
	bool "killall5"
	default n
	help
	  The SystemV killall command. killall5 sends a signal
	  to all processes except kernel threads and the processes
	  in its own session, so it won't kill the shell that is running
	  the script it was called from.
config FREETZ_BUSYBOX_LSOF
	bool "lsof"
	default n
	help
	  Show open files in the format of:
	  PID <TAB> /path/to/executable <TAB> /path/to/opened/file
config FREETZ_BUSYBOX_MPSTAT
	bool "mpstat"
	default n
	help
	  Per-processor statistics
config FREETZ_BUSYBOX_NMETER
	bool "nmeter"
	default n
	help
	  Prints selected system stats continuously, one line per update.
config FREETZ_BUSYBOX_PGREP
	bool "pgrep"
	default n
	help
	  Look for processes by name.

config FREETZ_BUSYBOX_PKILL
	bool "pkill"
	default n
	help
	  Send signals to processes by name.
config FREETZ_BUSYBOX_PIDOF
	bool "pidof"
	default n
	help
	  Pidof finds the process id's (pids) of the named programs. It prints
	  those id's on the standard output.

config FREETZ_BUSYBOX_FEATURE_PIDOF_SINGLE
	bool "Enable single shot (-s)"
	default n
	depends on FREETZ_BUSYBOX_PIDOF
	help
	  Support '-s' for returning only the first pid found.

config FREETZ_BUSYBOX_FEATURE_PIDOF_OMIT
	bool "Enable omitting pids (-o PID)"
	default n
	depends on FREETZ_BUSYBOX_PIDOF
	help
	  Support '-o PID' for omitting the given pid(s) in output.
	  The special pid %PPID can be used to name the parent process
	  of the pidof, in other words the calling shell or shell script.
config FREETZ_BUSYBOX_PMAP
       bool "pmap"
       default n
       help
         Display processes' memory mappings.
config FREETZ_BUSYBOX_POWERTOP
	bool "powertop"
	default n
	help
	  Analyze power consumption on Intel-based laptops

config FREETZ_BUSYBOX_FEATURE_POWERTOP_INTERACTIVE
	bool "Accept keyboard commands"
	default n
	depends on FREETZ_BUSYBOX_POWERTOP
	help
	  Without this, powertop will only refresh display every 10 seconds.
	  No keyboard commands will work, only ^C to terminate.
config FREETZ_BUSYBOX_PS
	bool "ps"
	default n
	help
	  ps gives a snapshot of the current processes.

config FREETZ_BUSYBOX_FEATURE_PS_WIDE
	bool "Enable wide output option (-w)"
	default n
	depends on FREETZ_BUSYBOX_PS && !FREETZ_BUSYBOX_DESKTOP
	help
	  Support argument 'w' for wide output.
	  If given once, 132 chars are printed, and if given more
	  than once, the length is unlimited.

config FREETZ_BUSYBOX_FEATURE_PS_LONG
	bool "Enable long output option (-l)"
	default n
	depends on FREETZ_BUSYBOX_PS && !FREETZ_BUSYBOX_DESKTOP
	help
	  Support argument 'l' for long output.
	  Adds fields PPID, RSS, START, TIME & TTY

config FREETZ_BUSYBOX_FEATURE_PS_TIME
	bool "Support -o time and -o etime output specifiers"
	default n
	depends on FREETZ_BUSYBOX_PS && FREETZ_BUSYBOX_DESKTOP
	select FREETZ_BUSYBOX_PLATFORM_LINUX

config FREETZ_BUSYBOX_FEATURE_PS_UNUSUAL_SYSTEMS
	bool "Support Linux prior to 2.4.0 and non-ELF systems"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_PS_TIME
	help
	  Include support for measuring HZ on old kernels and non-ELF systems
	  (if you are on Linux 2.4.0+ and use ELF, you don't need this)

config FREETZ_BUSYBOX_FEATURE_PS_ADDITIONAL_COLUMNS
	bool "Support -o rgroup, -o ruser, -o nice specifiers"
	default n
	depends on FREETZ_BUSYBOX_PS && FREETZ_BUSYBOX_DESKTOP
config FREETZ_BUSYBOX_PSTREE
	bool "pstree"
	default n
	help
	  Display a tree of processes.
config FREETZ_BUSYBOX_PWDX
	bool "pwdx"
	default n
	help
	  Report current working directory of a process
config FREETZ_BUSYBOX_SMEMCAP
	bool "smemcap"
	default n
	help
	  smemcap is a tool for capturing process data for smem,
	  a memory usage statistic tool.
config FREETZ_BUSYBOX_BB_SYSCTL
	bool "sysctl"
	default n
	help
	  Configure kernel parameters at runtime.
config FREETZ_BUSYBOX_TOP
	bool "top"
	default n
	help
	  The top program provides a dynamic real-time view of a running
	  system.

config FREETZ_BUSYBOX_FEATURE_TOP_INTERACTIVE
	bool "Accept keyboard commands"
	default n
	depends on FREETZ_BUSYBOX_TOP
	help
	  Without this, top will only refresh display every 5 seconds.
	  No keyboard commands will work, only ^C to terminate.

config FREETZ_BUSYBOX_FEATURE_TOP_CPU_USAGE_PERCENTAGE
	bool "Show CPU per-process usage percentage"
	default n
	depends on FREETZ_BUSYBOX_TOP
	help
	  Make top display CPU usage for each process.
	  This adds about 2k.

config FREETZ_BUSYBOX_FEATURE_TOP_CPU_GLOBAL_PERCENTS
	bool "Show CPU global usage percentage"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_TOP_CPU_USAGE_PERCENTAGE
	help
	  Makes top display "CPU: NN% usr NN% sys..." line.
	  This adds about 0.5k.

config FREETZ_BUSYBOX_FEATURE_TOP_SMP_CPU
	bool "SMP CPU usage display ('c' key)"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_TOP_CPU_GLOBAL_PERCENTS
	help
	  Allow 'c' key to switch between individual/cumulative CPU stats
	  This adds about 0.5k.

config FREETZ_BUSYBOX_FEATURE_TOP_DECIMALS
	bool "Show 1/10th of a percent in CPU/mem statistics"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_TOP_CPU_USAGE_PERCENTAGE
	help
	  Show 1/10th of a percent in CPU/mem statistics.
	  This adds about 0.3k.

config FREETZ_BUSYBOX_FEATURE_TOP_SMP_PROCESS
	bool "Show CPU process runs on ('j' field)"
	default n
	depends on FREETZ_BUSYBOX_TOP
	help
	  Show CPU where process was last found running on.
	  This is the 'j' field.

config FREETZ_BUSYBOX_FEATURE_TOPMEM
	bool "Topmem command ('s' key)"
	default n
	depends on FREETZ_BUSYBOX_TOP
	help
	  Enable 's' in top (gives lots of memory info).
config FREETZ_BUSYBOX_UPTIME
	bool "uptime"
	default n
	select FREETZ_BUSYBOX_PLATFORM_LINUX #sysinfo()
	help
	  uptime gives a one line display of the current time, how long
	  the system has been running, how many users are currently logged
	  on, and the system load averages for the past 1, 5, and 15 minutes.

config FREETZ_BUSYBOX_FEATURE_UPTIME_UTMP_SUPPORT
	bool "Show the number of users"
	default n
	depends on FREETZ_BUSYBOX_UPTIME && FREETZ_BUSYBOX_FEATURE_UTMP
	help
	  Display the number of users currently logged on.
config FREETZ_BUSYBOX_WATCH
	bool "watch"
	default n
	help
	  watch is used to execute a program periodically, showing
	  output to the screen.

config FREETZ_BUSYBOX_FEATURE_SHOW_THREADS
	bool "Support thread display in ps/pstree/top"
	default n
	depends on FREETZ_BUSYBOX_PS || FREETZ_BUSYBOX_TOP || FREETZ_BUSYBOX_PSTREE
	help
	  Enables the ps -T option, showing of threads in pstree,
	  and 'h' command in top.

endmenu

# INCLUDE_END procps/Config.in
# INCLUDE_BEGIN runit/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Runit Utilities"

config FREETZ_BUSYBOX_CHPST
	bool "chpst"
	default n
	help
	  chpst changes the process state according to the given options, and
	  execs specified program.

config FREETZ_BUSYBOX_SETUIDGID
	bool "setuidgid"
	default n
	help
	  Sets soft resource limits as specified by options

config FREETZ_BUSYBOX_ENVUIDGID
	bool "envuidgid"
	default n
	help
	  Sets $UID to account's uid and $GID to account's gid

config FREETZ_BUSYBOX_ENVDIR
	bool "envdir"
	default n
	help
	  Sets various environment variables as specified by files
	  in the given directory

config FREETZ_BUSYBOX_SOFTLIMIT
	bool "softlimit"
	default n
	help
	  Sets soft resource limits as specified by options
config FREETZ_BUSYBOX_RUNSV
	bool "runsv"
	default n
	help
	  runsv starts and monitors a service and optionally an appendant log
	  service.
config FREETZ_BUSYBOX_RUNSVDIR
	bool "runsvdir"
	default n
	help
	  runsvdir starts a runsv process for each subdirectory, or symlink to
	  a directory, in the services directory dir, up to a limit of 1000
	  subdirectories, and restarts a runsv process if it terminates.

config FREETZ_BUSYBOX_FEATURE_RUNSVDIR_LOG
	bool "Enable scrolling argument log"
	depends on FREETZ_BUSYBOX_RUNSVDIR
	default n
	help
	  Enable feature where second parameter of runsvdir holds last error
	  message (viewable via top/ps). Otherwise (feature is off
	  or no parameter), error messages go to stderr only.
config FREETZ_BUSYBOX_SV
	bool "sv"
	default n
	help
	  sv reports the current status and controls the state of services
	  monitored by the runsv supervisor.

config FREETZ_BUSYBOX_SV_DEFAULT_SERVICE_DIR
	string "Default directory for services"
	default "/var/service"
	depends on FREETZ_BUSYBOX_SV
	help
	  Default directory for services.
	  Defaults to "/var/service"

config FREETZ_BUSYBOX_SVC
	bool "svc"
	default n
	help
	  svc controls the state of services monitored by the runsv supervisor.
	  It is comaptible with daemontools command with the same name.
config FREETZ_BUSYBOX_SVLOGD
	bool "svlogd"
	default n
	help
	  svlogd continuously reads log data from its standard input, optionally
	  filters log messages, and writes the data to one or more automatically
	  rotated logs.

endmenu

# INCLUDE_END runit/Config.in
# INCLUDE_BEGIN selinux/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "SELinux Utilities"
	depends on FREETZ_BUSYBOX_SELINUX

config FREETZ_BUSYBOX_CHCON
	bool "chcon"
	default n
	depends on FREETZ_BUSYBOX_SELINUX
	help
	  Enable support to change the security context of file.

config FREETZ_BUSYBOX_FEATURE_CHCON_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_CHCON && FREETZ_BUSYBOX_LONG_OPTS
config FREETZ_BUSYBOX_GETENFORCE
	bool "getenforce"
	default n
	depends on FREETZ_BUSYBOX_SELINUX
	help
	  Enable support to get the current mode of SELinux.
config FREETZ_BUSYBOX_GETSEBOOL
	bool "getsebool"
	default n
	depends on FREETZ_BUSYBOX_SELINUX
	help
	  Enable support to get SELinux boolean values.
config FREETZ_BUSYBOX_LOAD_POLICY
	bool "load_policy"
	default n
	depends on FREETZ_BUSYBOX_SELINUX
	help
	  Enable support to load SELinux policy.
config FREETZ_BUSYBOX_MATCHPATHCON
	bool "matchpathcon"
	default n
	depends on FREETZ_BUSYBOX_SELINUX
	help
	  Enable support to get default security context of the
	  specified path from the file contexts configuration.
config FREETZ_BUSYBOX_RUNCON
	bool "runcon"
	default n
	depends on FREETZ_BUSYBOX_SELINUX
	help
	  Enable support to run command in specified security context.

config FREETZ_BUSYBOX_FEATURE_RUNCON_LONG_OPTIONS
	bool "Enable long options"
	default n
	depends on FREETZ_BUSYBOX_RUNCON && FREETZ_BUSYBOX_LONG_OPTS
config FREETZ_BUSYBOX_SELINUXENABLED
	bool "selinuxenabled"
	default n
	depends on FREETZ_BUSYBOX_SELINUX
	help
	  Enable support for this command to be used within shell scripts
	  to determine if selinux is enabled.
config FREETZ_BUSYBOX_SESTATUS
	bool "sestatus"
	default n
	depends on FREETZ_BUSYBOX_SELINUX
	help
	  Displays the status of SELinux.
config FREETZ_BUSYBOX_SETENFORCE
	bool "setenforce"
	default n
	depends on FREETZ_BUSYBOX_SELINUX
	help
	  Enable support to modify the mode SELinux is running in.
config FREETZ_BUSYBOX_SETFILES
	bool "setfiles"
	default n
	depends on FREETZ_BUSYBOX_SELINUX
	help
	  Enable support to modify to relabel files.
	  Notice: If you built libselinux with -D_FILE_OFFSET_BITS=64,
	  (It is default in libselinux's Makefile), you _must_ enable
	  CONFIG_LFS.

config FREETZ_BUSYBOX_FEATURE_SETFILES_CHECK_OPTION
	bool "Enable check option"
	default n
	depends on FREETZ_BUSYBOX_SETFILES
	help
	  Support "-c" option (check the validity of the contexts against
	  the specified binary policy) for setfiles. Requires libsepol.

config FREETZ_BUSYBOX_RESTORECON
	bool "restorecon"
	default n
	depends on FREETZ_BUSYBOX_SELINUX
	help
	  Enable support to relabel files. The feature is almost
	  the same as setfiles, but usage is a little different.
config FREETZ_BUSYBOX_SETSEBOOL
	bool "setsebool"
	default n
	depends on FREETZ_BUSYBOX_SELINUX
	help
	  Enable support for change boolean.
	  semanage and -P option is not supported yet.

endmenu

# INCLUDE_END selinux/Config.in
# INCLUDE_BEGIN shell/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Shells"


choice
	prompt "Choose which shell is aliased to 'sh' name"
	default FREETZ_BUSYBOX_SH_IS_ASH
	help
	  Choose which shell you want to be executed by 'sh' alias.
	  The ash shell is the most bash compatible and full featured one.

# note: cannot use "select ASH" here, it breaks "make allnoconfig"
config FREETZ_BUSYBOX_SH_IS_ASH
	depends on !FREETZ_BUSYBOX_NOMMU
	bool "ash"
	help
	  Choose ash to be the shell executed by 'sh' name.
	  The ash code will be built into busybox. If you don't select
	  "ash" choice (CONFIG_ASH), this shell may only be invoked by
	  the name 'sh' (and not 'ash').

config FREETZ_BUSYBOX_SH_IS_HUSH
	bool "hush"
	depends on FREETZ_DISABLE_OPTION_BY_MAKING_IT_DEPEND_ON_NONEXISTING_SYMBOL
	help
	  Choose hush to be the shell executed by 'sh' name.
	  The hush code will be built into busybox. If you don't select
	  "hush" choice (CONFIG_HUSH), this shell may only be invoked by
	  the name 'sh' (and not 'hush').

config FREETZ_BUSYBOX_SH_IS_NONE
	bool "none"

endchoice

choice
	prompt "Choose which shell is aliased to 'bash' name"
	default FREETZ_BUSYBOX_BASH_IS_NONE
	help
	  Choose which shell you want to be executed by 'bash' alias.
	  The ash shell is the most bash compatible and full featured one,
	  although compatibility is far from being complete.

	  Note that selecting this option does not switch on any bash
	  compatibility code. It merely makes it possible to install
	  /bin/bash (sym)link and run scripts which start with
	  #!/bin/bash line.

	  Many systems use it in scripts which use bash-specific features,
	  even simple ones like $RANDOM. Without this option, busybox
	  can't be used for running them because it won't recongnize
	  "bash" as a supported applet name.

config FREETZ_BUSYBOX_BASH_IS_ASH
	depends on !FREETZ_BUSYBOX_NOMMU
	bool "ash"
	help
	  Choose ash to be the shell executed by 'bash' name.
	  The ash code will be built into busybox. If you don't select
	  "ash" choice (CONFIG_ASH), this shell may only be invoked by
	  the name 'bash' (and not 'ash').

config FREETZ_BUSYBOX_BASH_IS_HUSH
	bool "hush"
	help
	  Choose hush to be the shell executed by 'bash' name.
	  The hush code will be built into busybox. If you don't select
	  "hush" choice (CONFIG_HUSH), this shell may only be invoked by
	  the name 'bash' (and not 'hush').

config FREETZ_BUSYBOX_BASH_IS_NONE
	bool "none"

endchoice


config FREETZ_BUSYBOX_ASH
	bool "ash"
	default n
	depends on !FREETZ_BUSYBOX_NOMMU
	help
	  Tha 'ash' shell adds about 60k in the default configuration and is
	  the most complete and most pedantically correct shell included with
	  busybox. This shell is actually a derivative of the Debian 'dash'
	  shell (by Herbert Xu), which was created by porting the 'ash' shell
	  (written by Kenneth Almquist) from NetBSD.

# ash options
# note: Don't remove !NOMMU part in the next line; it would break
# menuconfig's indenting.
if !FREETZ_BUSYBOX_NOMMU && (FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH)

config FREETZ_BUSYBOX_ASH_OPTIMIZE_FOR_SIZE
	bool "Optimize for size instead of speed"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH

config FREETZ_BUSYBOX_ASH_INTERNAL_GLOB
	bool "Use internal glob() implementation"
	default n	# Y is bigger, but because of uclibc glob() bug, let Y be default for now
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH
	help
	  Do not use glob() function from libc, use internal implementation.
	  Use this if you are getting "glob.h: No such file or directory"
	  or similar build errors.
	  Note that as of now (2017-01), uclibc and musl glob() both have bugs
	  which would break ash if you select N here.

config FREETZ_BUSYBOX_ASH_BASH_COMPAT
	bool "bash-compatible extensions"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH

config FREETZ_BUSYBOX_ASH_JOB_CONTROL
	bool "Job control"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH

config FREETZ_BUSYBOX_ASH_ALIAS
	bool "Alias support"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH

config FREETZ_BUSYBOX_ASH_RANDOM_SUPPORT
	bool "Pseudorandom generator and $RANDOM variable"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH
	help
	  Enable pseudorandom generator and dynamic variable "$RANDOM".
	  Each read of "$RANDOM" will generate a new pseudorandom value.
	  You can reset the generator by using a specified start value.
	  After "unset RANDOM" the generator will switch off and this
	  variable will no longer have special treatment.

config FREETZ_BUSYBOX_ASH_EXPAND_PRMT
	bool "Expand prompt string"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH
	help
	  $PS# may contain volatile content, such as backquote commands.
	  This option recreates the prompt string from the environment
	  variable each time it is displayed.

config FREETZ_BUSYBOX_ASH_IDLE_TIMEOUT
	bool "Idle timeout variable $TMOUT"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH
	help
	  Enable bash-like auto-logout after $TMOUT seconds of idle time.

config FREETZ_BUSYBOX_ASH_MAIL
	bool "Check for new mail in interactive shell"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH
	help
	  Enable "check for new mail" function:
	  if set, $MAIL file and $MAILPATH list of files
	  are checked for mtime changes, and "you have mail"
	  message is printed if change is detected.

config FREETZ_BUSYBOX_ASH_ECHO
	bool "echo builtin"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH

config FREETZ_BUSYBOX_ASH_PRINTF
	bool "printf builtin"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH

config FREETZ_BUSYBOX_ASH_TEST
	bool "test builtin"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH

config FREETZ_BUSYBOX_ASH_HELP
	bool "help builtin"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH

config FREETZ_BUSYBOX_ASH_GETOPTS
	bool "getopts builtin"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH

config FREETZ_BUSYBOX_ASH_CMDCMD
	bool "command builtin"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH
	help
	  Enable support for the 'command' builtin, which allows
	  you to run the specified command or builtin,
	  even when there is a function with the same name.

endif # ash options
config FREETZ_BUSYBOX_CTTYHACK
	bool "cttyhack"
	default n
	help
	  One common problem reported on the mailing list is the "can't
	  access tty; job control turned off" error message, which typically
	  appears when one tries to use a shell with stdin/stdout on
	  /dev/console.
	  This device is special - it cannot be a controlling tty.

	  The proper solution is to use the correct device instead of
	  /dev/console.

	  cttyhack provides a "quick and dirty" solution to this problem.
	  It analyzes stdin with various ioctls, trying to determine whether
	  it is a /dev/ttyN or /dev/ttySN (virtual terminal or serial line).
	  On Linux it also checks sysfs for a pointer to the active console.
	  If cttyhack is able to find the real console device, it closes
	  stdin/out/err and reopens that device.
	  Then it executes the given program. Opening the device will make
	  that device a controlling tty. This may require cttyhack
	  to be a session leader.

	  Example for /etc/inittab (for busybox init):

	  ::respawn:/bin/cttyhack /bin/sh

	  Starting an interactive shell from boot shell script:

	  setsid cttyhack sh

	  Giving controlling tty to shell running with PID 1:

	  # exec cttyhack sh

	  Without cttyhack, you need to know exact tty name,
	  and do something like this:

	  # exec setsid sh -c 'exec sh </dev/tty1 >/dev/tty1 2>&1'

	  Starting getty on a controlling tty from a shell script:

	  # getty 115200 $(cttyhack)
config FREETZ_BUSYBOX_HUSH
	bool "hush"
	default n
	help
	  hush is a small shell (25k). It handles the normal flow control
	  constructs such as if/then/elif/else/fi, for/in/do/done, while loops,
	  case/esac. Redirections, here documents, $((arithmetic))
	  and functions are supported.

	  It will compile and work on no-mmu systems.

	  It does not handle select, aliases, tilde expansion,
	  &>file and >&file redirection of stdout+stderr.

config FREETZ_BUSYBOX_HUSH_BASH_COMPAT
	bool "bash-compatible extensions"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_BRACE_EXPANSION
	bool "Brace expansion"
	default n
	depends on FREETZ_BUSYBOX_HUSH_BASH_COMPAT
	help
	  Enable {abc,def} extension.

config FREETZ_BUSYBOX_HUSH_INTERACTIVE
	bool "Interactive mode"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH
	help
	  Enable interactive mode (prompt and command editing).
	  Without this, hush simply reads and executes commands
	  from stdin just like a shell script from a file.
	  No prompt, no PS1/PS2 magic shell variables.

config FREETZ_BUSYBOX_HUSH_SAVEHISTORY
	bool "Save command history to .hush_history"
	default n
	depends on FREETZ_BUSYBOX_HUSH_INTERACTIVE && FREETZ_BUSYBOX_FEATURE_EDITING_SAVEHISTORY

config FREETZ_BUSYBOX_HUSH_JOB
	bool "Job control"
	default n
	depends on FREETZ_BUSYBOX_HUSH_INTERACTIVE
	help
	  Enable job control: Ctrl-Z backgrounds, Ctrl-C interrupts current
	  command (not entire shell), fg/bg builtins work. Without this option,
	  "cmd &" still works by simply spawning a process and immediately
	  prompting for next command (or executing next command in a script),
	  but no separate process group is formed.

config FREETZ_BUSYBOX_HUSH_TICK
	bool "Support process substitution"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH
	help
	  Enable `command` and $(command).

config FREETZ_BUSYBOX_HUSH_IF
	bool "Support if/then/elif/else/fi"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_LOOPS
	bool "Support for, while and until loops"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_CASE
	bool "Support case ... esac statement"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH
	help
	  Enable case ... esac statement. +400 bytes.

config FREETZ_BUSYBOX_HUSH_FUNCTIONS
	bool "Support funcname() { commands; } syntax"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH
	help
	  Enable support for shell functions. +800 bytes.

config FREETZ_BUSYBOX_HUSH_LOCAL
	bool "local builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH_FUNCTIONS
	help
	  Enable support for local variables in functions.

config FREETZ_BUSYBOX_HUSH_RANDOM_SUPPORT
	bool "Pseudorandom generator and $RANDOM variable"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH
	help
	  Enable pseudorandom generator and dynamic variable "$RANDOM".
	  Each read of "$RANDOM" will generate a new pseudorandom value.

config FREETZ_BUSYBOX_HUSH_MODE_X
	bool "Support 'hush -x' option and 'set -x' command"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH
	help
	  This instructs hush to print commands before execution.
	  Adds ~300 bytes.

config FREETZ_BUSYBOX_HUSH_ECHO
	bool "echo builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_PRINTF
	bool "printf builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_TEST
	bool "test builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_HELP
	bool "help builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_EXPORT
	bool "export builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_EXPORT_N
	bool "Support 'export -n' option"
	default n
	depends on FREETZ_BUSYBOX_HUSH_EXPORT
	help
	  export -n unexports variables. It is a bash extension.

config FREETZ_BUSYBOX_HUSH_KILL
	bool "kill builtin (supports kill %jobspec)"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_WAIT
	bool "wait builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_TRAP
	bool "trap builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_TYPE
	bool "type builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_READ
	bool "read builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_SET
	bool "set builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_UNSET
	bool "unset builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_ULIMIT
	bool "ulimit builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_UMASK
	bool "umask builtin"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_HUSH_MEMLEAK
	bool "memleak builtin (debugging)"
	default n
	depends on FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_MSH
	bool "msh (deprecated: aliased to hush)"
	default n
	select FREETZ_BUSYBOX_HUSH
	help
	  msh is deprecated and will be removed, please migrate to hush.


comment "Options common to all shells"
if FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH

config FREETZ_BUSYBOX_FEATURE_SH_MATH
	bool "POSIX math support"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH
	help
	  Enable math support in the shell via $((...)) syntax.

config FREETZ_BUSYBOX_FEATURE_SH_MATH_64
	bool "Extend POSIX math support to 64 bit"
	default n
	depends on FREETZ_BUSYBOX_FEATURE_SH_MATH
	help
	  Enable 64-bit math support in the shell. This will make the shell
	  slightly larger, but will allow computation with very large numbers.
	  This is not in POSIX, so do not rely on this in portable code.

config FREETZ_BUSYBOX_FEATURE_SH_EXTRA_QUIET
	bool "Hide message on interactive shell startup"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH
	help
	  Remove the busybox introduction when starting a shell.

config FREETZ_BUSYBOX_FEATURE_SH_STANDALONE
	bool "Standalone shell"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH
	depends on FREETZ_BUSYBOX__NOEXEC_NOFORK_OPTIMIZATIONS
	help
	  This option causes busybox shells to use busybox applets
	  in preference to executables in the PATH whenever possible. For
	  example, entering the command 'ifconfig' into the shell would cause
	  busybox to use the ifconfig busybox applet. Specifying the fully
	  qualified executable name, such as '/sbin/ifconfig' will still
	  execute the /sbin/ifconfig executable on the filesystem. This option
	  is generally used when creating a statically linked version of busybox
	  for use as a rescue shell, in the event that you screw up your system.

	  This is implemented by re-execing /proc/self/exe (typically)
	  with right parameters.

	  However, there are drawbacks: it is problematic in chroot jails
	  without mounted /proc, and ps/top may show command name as 'exe'
	  for applets started this way.

config FREETZ_BUSYBOX_FEATURE_SH_NOFORK
	bool "Run 'nofork' applets directly"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH
	depends on FREETZ_BUSYBOX__NOEXEC_NOFORK_OPTIMIZATIONS
	help
	  This option causes busybox shells to not execute typical
	  fork/exec/wait sequence, but call <applet>_main directly,
	  if possible. (Sometimes it is not possible: for example,
	  this is not possible in pipes).

	  This will be done only for some applets (those which are marked
	  NOFORK in include/applets.h).

	  This may significantly speed up some shell scripts.

	  This feature is relatively new. Use with care. Report bugs
	  to project mailing list.

config FREETZ_BUSYBOX_FEATURE_SH_HISTFILESIZE
	bool "Use $HISTFILESIZE"
	default n
	depends on FREETZ_BUSYBOX_ASH || FREETZ_BUSYBOX_HUSH || FREETZ_BUSYBOX_SH_IS_ASH || FREETZ_BUSYBOX_BASH_IS_ASH || FREETZ_BUSYBOX_SH_IS_HUSH || FREETZ_BUSYBOX_BASH_IS_HUSH
	help
	  This option makes busybox shells to use $HISTFILESIZE variable
	  to set shell history size. Note that its max value is capped
	  by "History size" setting in library tuning section.

endif # Options common to all shells

endmenu

# INCLUDE_END shell/Config.in
# INCLUDE_BEGIN sysklogd/Config.in
# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "System Logging Utilities"

config FREETZ_BUSYBOX_KLOGD
	bool "klogd"
	default n
	depends on FREETZ_AVM_HAS_PRINTK
	help
	  klogd is a utility which intercepts and logs all
	  messages from the Linux kernel and sends the messages
	  out to the 'syslogd' utility so they can be logged. If
	  you wish to record the messages produced by the kernel,
	  you should enable this option.

comment "klogd should not be used together with syslog to kernel printk buffer"
	depends on FREETZ_BUSYBOX_KLOGD && FREETZ_BUSYBOX_FEATURE_KMSG_SYSLOG

config FREETZ_BUSYBOX_FEATURE_KLOGD_KLOGCTL
	bool "Use the klogctl() interface"
	default n
	depends on FREETZ_BUSYBOX_KLOGD
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  The klogd applet supports two interfaces for reading
	  kernel messages. Linux provides the klogctl() interface
	  which allows reading messages from the kernel ring buffer
	  independently from the file system.

	  If you answer 'N' here, klogd will use the more portable
	  approach of reading them from /proc or a device node.
	  However, this method requires the file to be available.

	  If in doubt, say 'Y'.
config FREETZ_BUSYBOX_LOGGER
	bool "logger"
	default n
	select FREETZ_BUSYBOX_FEATURE_SYSLOG
	help
	    The logger utility allows you to send arbitrary text
	    messages to the system log (i.e. the 'syslogd' utility) so
	    they can be logged. This is generally used to help locate
	    problems that occur within programs and scripts.
config FREETZ_BUSYBOX_LOGREAD
	bool "logread"
	default n
	help
	  If you enabled Circular Buffer support, you almost
	  certainly want to enable this feature as well. This
	  utility will allow you to read the messages that are
	  stored in the syslogd circular buffer.

config FREETZ_BUSYBOX_FEATURE_LOGREAD_REDUCED_LOCKING
	bool "Double buffering"
	default n
	depends on FREETZ_BUSYBOX_LOGREAD
	help
	  'logread' output to slow serial terminals can have
	  side effects on syslog because of the semaphore.
	  This option make logread to double buffer copy
	  from circular buffer, minimizing semaphore
	  contention at some minor memory expense.

config FREETZ_BUSYBOX_SYSLOGD
	bool "syslogd"
	default n
	help
	  The syslogd utility is used to record logs of all the
	  significant events that occur on a system. Every
	  message that is logged records the date and time of the
	  event, and will generally also record the name of the
	  application that generated the message. When used in
	  conjunction with klogd, messages from the Linux kernel
	  can also be recorded. This is terribly useful,
	  especially for finding what happened when something goes
	  wrong. And something almost always will go wrong if
	  you wait long enough....

config FREETZ_BUSYBOX_FEATURE_ROTATE_LOGFILE
	bool "Rotate message files"
	default n
	depends on FREETZ_BUSYBOX_SYSLOGD
	help
	  This enables syslogd to rotate the message files
	  on his own. No need to use an external rotate script.

config FREETZ_BUSYBOX_FEATURE_REMOTE_LOG
	bool "Remote Log support"
	default n
	depends on FREETZ_BUSYBOX_SYSLOGD
	help
	  When you enable this feature, the syslogd utility can
	  be used to send system log messages to another system
	  connected via a network. This allows the remote
	  machine to log all the system messages, which can be
	  terribly useful for reducing the number of serial
	  cables you use. It can also be a very good security
	  measure to prevent system logs from being tampered with
	  by an intruder.

config FREETZ_BUSYBOX_FEATURE_SYSLOGD_DUP
	bool "Support -D (drop dups) option"
	default n
	depends on FREETZ_BUSYBOX_SYSLOGD
	help
	  Option -D instructs syslogd to drop consecutive messages
	  which are totally the same.

config FREETZ_BUSYBOX_FEATURE_SYSLOGD_CFG
	bool "Support syslog.conf"
	default n
	depends on FREETZ_BUSYBOX_SYSLOGD
	help
	  Supports restricted syslogd config. See docs/syslog.conf.txt

config FREETZ_BUSYBOX_FEATURE_SYSLOGD_READ_BUFFER_SIZE
	int "Read buffer size in bytes"
	default 256
	range 256 20000
	depends on FREETZ_BUSYBOX_SYSLOGD
	help
	  This option sets the size of the syslog read buffer.
	  Actual memory usage increases around five times the
	  change done here.

config FREETZ_BUSYBOX_FEATURE_IPC_SYSLOG
	bool "Circular Buffer support"
	default n
	depends on FREETZ_BUSYBOX_SYSLOGD
	help
	  When you enable this feature, the syslogd utility will
	  use a circular buffer to record system log messages.
	  When the buffer is filled it will continue to overwrite
	  the oldest messages. This can be very useful for
	  systems with little or no permanent storage, since
	  otherwise system logs can eventually fill up your
	  entire filesystem, which may cause your system to
	  break badly.

config FREETZ_BUSYBOX_FEATURE_IPC_SYSLOG_BUFFER_SIZE
	int "Circular buffer size in Kbytes (minimum 4KB)"
	default 16
	range 4 2147483647
	depends on FREETZ_BUSYBOX_FEATURE_IPC_SYSLOG
	help
	  This option sets the size of the circular buffer
	  used to record system log messages.

config FREETZ_BUSYBOX_FEATURE_KMSG_SYSLOG
	bool "Linux kernel printk buffer support"
	default n
	depends on FREETZ_BUSYBOX_SYSLOGD
	select FREETZ_BUSYBOX_PLATFORM_LINUX
	help
	  When you enable this feature, the syslogd utility will
	  write system log message to the Linux kernel's printk buffer.
	  This can be used as a smaller alternative to the syslogd IPC
	  support, as klogd and logread aren't needed.

	  NOTICE: Syslog facilities in log entries needs kernel 3.5+.

endmenu

# INCLUDE_END sysklogd/Config.in

# INCLUDE_END Config.in
