--- debug.h	2017-08-14 01:33:17.231515500 +0200
+++ debug.h	2017-08-14 00:56:40.243608620 +0200
@@ -39,7 +39,7 @@
  * Caution: Don't use this in an unfriendly environment (ie unfirewalled),
  * since the printing may not sanitise strings etc. This will add a reasonable
  * amount to your executable size. */
-/*#define DEBUG_TRACE*/
+#define DEBUG_TRACE
 
 /* All functions writing to the cleartext payload buffer call
  * CHECKCLEARTOWRITE() before writing. This is only really useful if you're
--- options.h	2017-08-14 01:33:30.107514954 +0200
+++ options.h	2017-08-14 01:32:03.715518616 +0200
@@ -54,10 +54,12 @@
 several kB in binary size however will make the symmetrical ciphers and hashes
 slower, perhaps by 50%. Recommended for small systems that aren't doing
 much traffic. */
-#define DROPBEAR_SMALL_CODE
+//#define DROPBEAR_SMALL_CODE
+#undef DROPBEAR_SMALL_CODE
 
 /* Enable X11 Forwarding - server only */
-#define ENABLE_X11FWD
+//#define ENABLE_X11FWD
+#undef ENABLE_X11FWD
 
 /* Enable TCP Fowarding */
 /* 'Local' is "-L" style (client listening port forwarded via server)
@@ -70,8 +72,10 @@
 #define ENABLE_SVR_REMOTETCPFWD
 
 /* Enable Authentication Agent Forwarding */
-#define ENABLE_SVR_AGENTFWD
-#define ENABLE_CLI_AGENTFWD
+//#define ENABLE_SVR_AGENTFWD
+//#define ENABLE_CLI_AGENTFWD
+#undef ENABLE_SVR_AGENTFWD
+#undef ENABLE_CLI_AGENTFWD
 
 
 /* Note: Both ENABLE_CLI_PROXYCMD and ENABLE_CLI_NETCAT must be set to
@@ -93,16 +97,20 @@
  * Including multiple keysize variants the same cipher 
  * (eg AES256 as well as AES128) will result in a minimal size increase.*/
 #define DROPBEAR_AES128
-#define DROPBEAR_3DES
+//#define DROPBEAR_3DES
+#undef DROPBEAR_3DES
 #define DROPBEAR_AES256
 /* Compiling in Blowfish will add ~6kB to runtime heap memory usage */
 /*#define DROPBEAR_BLOWFISH*/
-#define DROPBEAR_TWOFISH256
-#define DROPBEAR_TWOFISH128
+//#define DROPBEAR_TWOFISH256
+//#define DROPBEAR_TWOFISH128
+#undef DROPBEAR_TWOFISH256
+#undef DROPBEAR_TWOFISH128
 
 /* Enable CBC mode for ciphers. This has security issues though
  * is the most compatible with older SSH implementations */
-#define DROPBEAR_ENABLE_CBC_MODE
+//#define DROPBEAR_ENABLE_CBC_MODE
+#undef DROPBEAR_ENABLE_CBC_MODE
 
 /* Enable "Counter Mode" for ciphers. This is more secure than normal
  * CBC mode against certain attacks. It is recommended for security
@@ -119,6 +127,7 @@
  * you're doing. Anyone can see everything that goes over the wire, so
  * the only safe auth method is public key. */
 /* #define DROPBEAR_NONE_CIPHER */
+#undef DROPBEAR_NONE_CIPHER
 
 /* Message Integrity - at least one required.
  * Protocol RFC requires sha1 and recommends sha1-96.
@@ -133,33 +142,39 @@
  * If you disable MD5, Dropbear will fall back to SHA1 fingerprints,
  * which are not the standard form. */
 #define DROPBEAR_SHA1_HMAC
-#define DROPBEAR_SHA1_96_HMAC
+//#define DROPBEAR_SHA1_96_HMAC
+#undef DROPBEAR_SHA1_96_HMAC
 #define DROPBEAR_SHA2_256_HMAC
 #define DROPBEAR_SHA2_512_HMAC
-#define DROPBEAR_MD5_HMAC
+//#define DROPBEAR_MD5_HMAC
+#undef DROPBEAR_MD5_HMAC
 
 /* You can also disable integrity. Don't bother disabling this if you're
  * still using a cipher, it's relatively cheap. If you disable this it's dead
  * simple for an attacker to run arbitrary commands on the remote host. Beware. */
 /* #define DROPBEAR_NONE_INTEGRITY */
+#undef DROPBEAR_NONE_INTEGRITY
 
 /* Hostkey/public key algorithms - at least one required, these are used
  * for hostkey as well as for verifying signatures with pubkey auth.
  * Removing either of these won't save very much space.
  * SSH2 RFC Draft requires dss, recommends rsa */
 #define DROPBEAR_RSA
-#define DROPBEAR_DSS
+//#define DROPBEAR_DSS
+#undef DROPBEAR_DSS
 /* ECDSA is significantly faster than RSA or DSS. Compiling in ECC
  * code (either ECDSA or ECDH) increases binary size - around 30kB
  * on x86-64 */
-#define DROPBEAR_ECDSA
+//#define DROPBEAR_ECDSA
+#undef DROPBEAR_ECDSA
 
 /* Generate hostkeys as-needed when the first connection using that key type occurs.
    This avoids the need to otherwise run "dropbearkey" and avoids some problems
    with badly seeded /dev/urandom when systems first boot.
    This also requires a runtime flag "-R". This adds ~4kB to binary size (or hardly 
    anything if dropbearkey is linked in a "dropbearmulti" binary) */
-#define DROPBEAR_DELAY_HOSTKEY
+//#define DROPBEAR_DELAY_HOSTKEY
+#undef DROPBEAR_DELAY_HOSTKEY
 
 /* Enable Curve25519 for key exchange. This is another elliptic
  * curve method with good security properties. Increases binary size
@@ -168,11 +183,13 @@
 
 /* Enable elliptic curve Diffie Hellman key exchange, see note about
  * ECDSA above */
-#define DROPBEAR_ECDH
+//#define DROPBEAR_ECDH
+#undef DROPBEAR_ECDH
 
 /* Group14 (2048 bit) is recommended. Group1 is less secure (1024 bit) though
    is the only option for interoperability with some older SSH programs */
-#define DROPBEAR_DH_GROUP1 1
+//#define DROPBEAR_DH_GROUP1 1
+#undef DROPBEAR_DH_GROUP1
 #define DROPBEAR_DH_GROUP14 1
 
 /* Control the memory/performance/compression tradeoff for zlib.
@@ -193,15 +210,16 @@
 
 /* Whether to do reverse DNS lookups. */
 /*#define DO_HOST_LOOKUP */
+#undef DO_HOST_LOOKUP
 
 /* Whether to print the message of the day (MOTD). This doesn't add much code
  * size */
 #define DO_MOTD
 
 /* The MOTD file path */
-#ifndef MOTD_FILENAME
-#define MOTD_FILENAME "/etc/motd"
-#endif
+//#ifndef MOTD_FILENAME
+#define MOTD_FILENAME "/var/custom/etc/motd"
+//#endif
 
 /* Authentication Types - at least one required.
    RFC Draft requires pubkey auth, and recommends password */
@@ -215,10 +233,12 @@
 
 /* This requires crypt() */
 #ifdef HAVE_CRYPT
-#define ENABLE_SVR_PASSWORD_AUTH
+//#define ENABLE_SVR_PASSWORD_AUTH
+#undef ENABLE_SVR_PASSWORD_AUTH
 #endif
 /* PAM requires ./configure --enable-pam */
 /*#define ENABLE_SVR_PAM_AUTH */
+#undef ENABLE_SVR_PAM_AUTH
 #define ENABLE_SVR_PUBKEY_AUTH
 
 /* Whether to take public key options in 
@@ -229,14 +249,17 @@
 
 /* This requires getpass. */
 #ifdef HAVE_GETPASS
-#define ENABLE_CLI_PASSWORD_AUTH
-#define ENABLE_CLI_INTERACT_AUTH
+//#define ENABLE_CLI_PASSWORD_AUTH
+//#define ENABLE_CLI_INTERACT_AUTH
+#undef ENABLE_CLI_PASSWORD_AUTH
+#undef ENABLE_CLI_INTERACT_AUTH
 #endif
 #define ENABLE_CLI_PUBKEY_AUTH
 
 /* A default argument for dbclient -i <privatekey>. 
 Homedir is prepended unless path begins with / */
-#define DROPBEAR_DEFAULT_CLI_AUTHKEY ".ssh/id_dropbear"
+//#define DROPBEAR_DEFAULT_CLI_AUTHKEY ".ssh/id_dropbear"
+#define DROPBEAR_DEFAULT_CLI_AUTHKEY "/var/flash/websrv_ssl_key.pem"
 
 /* This variable can be used to set a password for client
  * authentication on the commandline. Beware of platforms
@@ -244,7 +267,8 @@
  * note that it will be provided for all "hidden" client-interactive
  * style prompts - if you want something more sophisticated, use 
  * SSH_ASKPASS instead. Comment out this var to remove this functionality.*/
-#define DROPBEAR_PASSWORD_ENV "DROPBEAR_PASSWORD"
+//#define DROPBEAR_PASSWORD_ENV "DROPBEAR_PASSWORD"
+#undef DROPBEAR_PASSWORD_ENV
 
 /* Define this (as well as ENABLE_CLI_PASSWORD_AUTH) to allow the use of
  * a helper program for the ssh client. The helper program should be
@@ -252,12 +276,14 @@
  * should be run with DISPLAY set and no tty. The program should
  * return the password on standard output */
 /*#define ENABLE_CLI_ASKPASS_HELPER*/
+#undef ENABLE_CLI_ASKPASS_HELPER
 
 /* Save a network roundtrip by sendng a real auth request immediately after
  * sending a query for the available methods.  It is at the expense of < 100
  * bytes of extra network traffic. This is not yet enabled by default since it
  * could cause problems with non-compliant servers */
 /* #define DROPBEAR_CLI_IMMEDIATE_AUTH */
+#undef DROPBEAR_CLI_IMMEDIATE_AUTH
 
 /* Source for randomness. This must be able to provide hundreds of bytes per SSH
  * connection without blocking. In addition /dev/random is used for seeding
@@ -272,18 +298,18 @@
  * not yet authenticated. After this limit, connections are rejected */
 /* The first setting is per-IP, to avoid denial of service */
 #ifndef MAX_UNAUTH_PER_IP
-#define MAX_UNAUTH_PER_IP 5
+#define MAX_UNAUTH_PER_IP 3
 #endif
 
 /* And then a global limit to avoid chewing memory if connections 
  * come from many IPs */
 #ifndef MAX_UNAUTH_CLIENTS
-#define MAX_UNAUTH_CLIENTS 30
+#define MAX_UNAUTH_CLIENTS 5
 #endif
 
 /* Maximum number of failed authentication tries (server option) */
 #ifndef MAX_AUTH_TRIES
-#define MAX_AUTH_TRIES 10
+#define MAX_AUTH_TRIES 3
 #endif
 
 /* The default file to store the daemon's process ID, for shutdown
@@ -294,9 +320,10 @@
 
 /* The command to invoke for xauth when using X11 forwarding.
  * "-q" for quiet */
-#ifndef XAUTH_COMMAND
-#define XAUTH_COMMAND "/usr/bin/xauth -q"
-#endif
+//#ifndef XAUTH_COMMAND
+//#define XAUTH_COMMAND "/usr/bin/xauth -q"
+//#endif
+#undef XAUTH_COMMAND
 
 /* if you want to enable running an sftp server (such as the one included with
  * OpenSSH), set the path below. If the path isn't defined, sftp will not
@@ -339,7 +366,7 @@
 
 /* Ensure that data is transmitted every KEEPALIVE seconds. This can
 be overridden at runtime with -K. 0 disables keepalives */
-#define DEFAULT_KEEPALIVE 0
+#define DEFAULT_KEEPALIVE 10
 
 /* If this many KEEPALIVES are sent with no packets received from the
 other side, exit. Not run-time configurable - if you have a need
--- sysoptions.h	2017-08-14 01:33:35.491514726 +0200
+++ sysoptions.h	2017-08-14 00:56:30.595609029 +0200
@@ -4,8 +4,12 @@
  *******************************************************************/
 
 #ifndef DROPBEAR_VERSION
+#ifdef DROPBEAR_YOURFRITZ
+#define DROPBEAR_VERSION "2017.75-yourfritz"
+#else
 #define DROPBEAR_VERSION "2017.75"
 #endif
+#endif
 
 #define LOCAL_IDENT "SSH-2.0-dropbear_" DROPBEAR_VERSION
 #define PROGNAME "dropbear"
@@ -13,14 +17,14 @@
 /* Spec recommends after one hour or 1 gigabyte of data. One hour
  * is a bit too verbose, so we try 8 hours */
 #ifndef KEX_REKEY_TIMEOUT
-#define KEX_REKEY_TIMEOUT (3600 * 8)
+#define KEX_REKEY_TIMEOUT (3600)
 #endif
 #ifndef KEX_REKEY_DATA
 #define KEX_REKEY_DATA (1<<30) /* 2^30 == 1GB, this value must be < INT_MAX */
 #endif
 /* Close connections to clients which haven't authorised after AUTH_TIMEOUT */
 #ifndef AUTH_TIMEOUT
-#define AUTH_TIMEOUT 300 /* we choose 5 minutes */
+#define AUTH_TIMEOUT 60 /* we choose 5 minutes */
 #endif
 
 /* A client should try and send an initial key exchange packet guessing
@@ -37,7 +41,7 @@
 #define MIN_DSS_KEYLEN 512
 #endif
 #ifndef MIN_RSA_KEYLEN
-#define MIN_RSA_KEYLEN 512
+#define MIN_RSA_KEYLEN 2048
 #endif
 
 #define MAX_BANNER_SIZE 2000 /* this is 25*80 chars, any more is foolish */
@@ -124,12 +128,13 @@
 #define DROPBEAR_SHA512
 #endif
 #if defined(DROPBEAR_MD5_HMAC)
-#define DROPBEAR_MD5
+//#define DROPBEAR_MD5
 #endif
+#undef DROPBEAR_MD5
 
 /* These are disabled in Dropbear 2016.73 by default since the spec 
    draft-ietf-curdle-ssh-kex-sha2-02 is under development. */
-#define DROPBEAR_DH_GROUP14_256 0
+#define DROPBEAR_DH_GROUP14_256 1
 #define DROPBEAR_DH_GROUP16 0
 
 /* roughly 2x 521 bits */
--- localoptions.h	2017-08-15 02:56:21.807642134 +0200
+++ localoptions.h	2017-08-15 03:04:22.483621760 +0200
@@ -6,25 +6,41 @@
 #define RSA_PRIV_FILENAME "/mod/etc/ssh/rsa_host_key"
 #define ECDSA_PRIV_FILENAME "/mod/etc/ssh/ecdsa_host_key"
 #else
+#ifndef DROPBEAR_YOURFRITZ
 #define DSS_PRIV_FILENAME "/var/tmp/dss_host_key"
 #define RSA_PRIV_FILENAME "/var/tmp/rsa_host_key"
 #define ECDSA_PRIV_FILENAME "/var/tmp/ecdsa_host_key"
+#else
+#define RSA_PRIV_FILENAME "/var/flash/websrv_ssl_key.pem"
+#endif
 #endif
 
+#ifdef DROPBEAR_YOURFRITZ
+#define SFTPSERVER_PATH "/var/custom/usr/bin/sftp-server"
+#else
 #define SFTPSERVER_PATH "/usr/lib/sftp-server"
+#endif
 
 #ifndef DB_NONFREETZ
 #define DROPBEAR_PATH_SSH_PROGRAM "/usr/bin/ssh"
 #else
+#ifdef DROPBEAR_YOURFRITZ
+#define DROPBEAR_PATH_SSH_PROGRAM "/var/custom/usr/bin/ssh"
+#else
 /* ssh is expected to be in PATH */
 #define DROPBEAR_PATH_SSH_PROGRAM "ssh"
 #endif
+#endif
 
 #define MAX_UNAUTH_PER_IP 2  /* limited by freetz, default 5 */
-#define MAX_UNAUTH_CLIENTS 5 /* limited by freetz, default 30 */
+#define MAX_UNAUTH_CLIENTS 2 /* limited by freetz, default 30 */
 #define MAX_AUTH_TRIES 2     /* limited by freetz, default 10 */
 #define AUTH_TIMEOUT 60      /* limited by freetz down to 60 seconds, default 300 */
 
+#ifdef DROPBEAR_YOURFRITZ
+#define DEFAULT_PATH "/var/custom/bin:/bin:/var/custom/usr/bin:/usr/bin:/var/custom/sbin:/sbin:/var/custom/usr/sbin:/usr/sbin"
+#else
 #define DEFAULT_PATH "/usr/bin:/bin:/var/bin"
+#endif
 
 #endif
