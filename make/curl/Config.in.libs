config FREETZ_LIB_libcurl
	bool "libcurl (libcurl.so)"
	default n
	select FREETZ_LIB_libcrypto     if FREETZ_LIB_libcurl_WITH_SSL && FREETZ_LIB_libcurl_WITH_OPENSSL
	select FREETZ_LIB_libpolarssl13 if FREETZ_LIB_libcurl_WITH_SSL && FREETZ_LIB_libcurl_WITH_POLARSSL
	select FREETZ_LIB_libmbedcrypto if FREETZ_LIB_libcurl_WITH_SSL && FREETZ_LIB_libcurl_WITH_MBEDTLS
	select FREETZ_LIB_libmbedtls    if FREETZ_LIB_libcurl_WITH_SSL && FREETZ_LIB_libcurl_WITH_MBEDTLS
	select FREETZ_LIB_libmbedx509   if FREETZ_LIB_libcurl_WITH_SSL && FREETZ_LIB_libcurl_WITH_MBEDTLS
	select FREETZ_LIB_libz          if FREETZ_LIB_libcurl_WITH_ZLIB
	help
		A client-side URL transfer library.

config FREETZ_LIB_libcurl_WITH_SSL
	bool "build with SSL support" if FREETZ_LIB_libcurl || FREETZ_PACKAGE_CURL
	default y                     if FREETZ_LIB_libcurl || FREETZ_PACKAGE_CURL
	help
		This option enables SSL support in curl.

choice
	depends on FREETZ_LIB_libcurl_WITH_SSL
	prompt "SSL library"
	default FREETZ_LIB_libcurl_WITH_OPENSSL

	config FREETZ_LIB_libcurl_WITH_OPENSSL
		bool "OpenSSL"

	config FREETZ_LIB_libcurl_WITH_POLARSSL
		bool "PolarSSL"

	config FREETZ_LIB_libcurl_WITH_MBEDTLS
		bool "mbed TLS"
		# TODO: remove this dependency as soon as transmission supports mbed TLS (current git version already does)
		depends on !FREETZ_PACKAGE_TRANSMISSION
endchoice

config FREETZ_LIB_libcurl_WITH_ZLIB
	bool "build with zlib support" if FREETZ_LIB_libcurl || FREETZ_PACKAGE_CURL
	default n
	help
		This option enables zlib support in curl.
