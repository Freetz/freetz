--- squashfs-tools/unsquashfs.c
+++ squashfs-tools/unsquashfs.c
@@ -225,6 +225,8 @@
 int progress = TRUE, progress_enabled = FALSE;
 unsigned int total_blocks = 0, total_files = 0, total_inodes = 0;
 unsigned int cur_blocks = 0;
+unsigned int scan_for_superblock = FALSE;
+off_t superblock_offset = 0;
 
 int lookup_type[] = {
 	0,
@@ -661,10 +663,52 @@
 	return -1;
 }
 
+off_t find_superblock(int fd)
+{
+	off_t offset = 0;
+	struct squashfs_super_block sBlk;
+	int gotten;
+	
+	if(lseek(fd, 0, SEEK_SET) == -1) {
+		ERROR("Lseek failed because %s\n", strerror(errno));
+		return (off_t) -1;
+	}
+	while((gotten = read(fd, &sBlk, sizeof(sBlk))) == sizeof(sBlk)) {
+		if(sBlk.s_magic == SQUASHFS_MAGIC) {
+			TRACE("find_superblock: magic 0x%08x found at 0x%08x\n", sBlk.s_magic, (unsigned int) offset);
+#if defined(LZMA1_SUPPORT)
+			if(sBlk.s_major == 3 && (sBlk.s_minor <= SQUASHFS_MINOR || sBlk.s_minor == SQUASHFS_MINOR_LZMA1))
+#else
+			if(sBlk.s_major == 3 && sBlk.s_minor <= SQUASHFS_MINOR) 
+#endif
+				return offset;
+		}
+		else if(sBlk.s_magic == SQUASHFS_MAGIC_SWAP) {
+			struct squashfs_super_block sblk;
+			
+			TRACE("find_superblock: swapped magic 0x%08x found at 0x%08x\n", sBlk.s_magic, (unsigned int) offset);
+			SQUASHFS_SWAP_SUPER_BLOCK(&sblk, &sBlk);
+#if defined(LZMA1_SUPPORT)
+			if(sblk.s_major == 3 && (sblk.s_minor <= SQUASHFS_MINOR || sblk.s_minor == SQUASHFS_MINOR_LZMA1))
+#else
+			if(sblk.s_major == 3 && sblk.s_minor <= SQUASHFS_MINOR) 
+#endif
+				return offset;
+		}
+		offset += 256;
+		if(lseek(fd, offset, SEEK_SET) == -1) {
+			ERROR("Lseek failed because %s\n", strerror(errno));
+			return (off_t) -1;
+		}
+	}
+	
+	return (off_t) -1;
+}
+
 
 int read_bytes(long long byte, int bytes, char *buff)
 {
-	off_t off = byte;
+	off_t off = byte + superblock_offset;
 
 	TRACE("read_bytes: reading from position 0x%llx, bytes %d\n", byte, bytes);
 
@@ -2634,6 +2678,8 @@
 			path = process_extract_files(path, argv[i]);
 		} else if(strcmp(argv[i], "-regex") == 0 || strcmp(argv[i], "-r") == 0)
 			use_regex = TRUE;
+		else if(strcmp(argv[i], "-scan") == 0 || strcmp(argv[i], "-k") == 0)
+			scan_for_superblock = TRUE;
 		else
 			goto options;
 	}
@@ -2659,6 +2705,7 @@
 			ERROR("\t-da[ta-queue] <size>\tSet data queue to <size> Mbytes.  Default %d\n\t\t\t\tMbytes\n", DATA_BUFFER_DEFAULT);
 			ERROR("\t-fr[ag-queue] <size>\tSet fagment queue to <size> Mbytes.  Default %d\n\t\t\t\tMbytes\n", FRAGMENT_BUFFER_DEFAULT);
 			ERROR("\t-r[egex]\t\ttreat extract names as POSIX regular expressions\n\t\t\t\trather than use the default shell wildcard\n\t\t\t\texpansion (globbing)\n");
+			ERROR("\t-scan or -k\t\ttreat filesystem as a combined image (kernel+SquashFS)\n\t\t\t\tand scan it to locate the superblock and its offset\n");
 		}
 		exit(1);
 	}
@@ -2671,6 +2718,17 @@
 		exit(1);
 	}
 
+	if(scan_for_superblock == TRUE) {
+		superblock_offset = find_superblock(fd);
+		if (superblock_offset == (off_t) -1) {
+			ERROR("Unable to find something looking like a SquashFS superblock in %s.\n", argv[i]);
+			exit(2);
+		}
+		else {
+			ERROR("Found a version 3 superblock at offset 0x%08x while scanning %s.\n", (unsigned int) superblock_offset, argv[i]);
+		}
+	}
+
 	if(read_super(argv[i]) == FALSE)
 		exit(1);
 
